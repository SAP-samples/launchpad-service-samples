// For Library Version: 1.71.13

declare namespace sap {
  /**
   * Chart controls based on the SAP BI CVOM charting library
   */
  namespace viz {
    namespace ui5 {
      namespace api {
        namespace env {
          /**
           * @SINCE 1.24.0
           *
           * Provides methods set global formatter for VizFrame.
           */
          namespace Format {
            /**
             * Customize the global numeric formatter. If you set a formatter, it will replace the existing formatter.
             * This function will take effect globally.
             *
             * Example:
             * ```javascript
             *
             * var customerFormatter = {
             *     format : function(value, pattern) {
             *         // add your codes here to convert number value to formatted string
             *         // according to the pattern string
             *         return formattedString;
             *     }
             * };
             * sap.viz.ui5.api.env.Format.numericFormatter(customerFormatter);
             * ```
             */
            function numericFormatter(formatter: Function): Object;
          }
        }
      }

      namespace controls {
        namespace common {
          namespace feeds {
            interface AnalysisObjectOpts extends sap.ui.core.ElementOpts {
              /**
               * Uid of analysis object
               */
              uid?: string;

              /**
               * Name of an analysis object.
               */
              name?: string;

              /**
               * Type of an analysis object. Enumeration: Measure, Dimension
               */
              type?: string;

              /**
               * Data type of an analysis object. Enumeration: string, number, date
               */
              dataType?: string;
            }

            interface FeedItemOpts extends sap.ui.core.ElementOpts {
              /**
               * Uid of a feed item. Please reference to bindings section in VIZDOCS to get the exact sUid string for
               * each chart type.
               *
               * For example: Bar chart > bindings > categoryAxis ; color ; valueAxis. The 'categoryAxis' should be the
               * sUid for x axis feeding for bar chart.
               */
              uid?: string;

              /**
               * Type of a feed item. Enumeration: Measure, Dimension
               */
              type?: string;

              /**
               * Value of a feed item.
               */
              values?: any[];
            }
            /**
             * @SINCE 1.21.0
             *
             * AnalysisObject Class
             */
            class AnalysisObject extends sap.ui.core.Element {
              /**
               * Constructor for a new ui5/controls/common/feeds/AnalysisObject.
               *
               * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
               * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
               * of the syntax of the settings object.
               */
              constructor(
                /**
                 * id for the new control, generated automatically if no id is given
                 */
                sId?: string,
                /**
                 * initial settings for the new control
                 */
                mSettings?: AnalysisObjectOpts
              );

              /**
               * Creates a new subclass of class sap.viz.ui5.controls.common.feeds.AnalysisObject with name `sClassName`
               * and enriches it with the information contained in `oClassInfo`.
               *
               * `oClassInfo` might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.
               */
              // @ts-ignore
              static extend(
                /**
                 * Name of the class being created
                 */
                sClassName: string,
                /**
                 * Object literal with information about the class
                 */
                oClassInfo?: object,
                /**
                 * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
                 */
                FNMetaImpl?: Function
              ): Function;
              /**
               * Gets current value of property {@link #getDataType dataType}.
               *
               * Data type of an analysis object. Enumeration: string, number, date
               */
              getDataType(): string;
              /**
               * Returns a metadata object for class sap.viz.ui5.controls.common.feeds.AnalysisObject.
               */
              // @ts-ignore
              static getMetadata(): sap.ui.base.Metadata;
              /**
               * Gets current value of property {@link #getName name}.
               *
               * Name of an analysis object.
               */
              getName(): string;
              /**
               * Gets current value of property {@link #getType type}.
               *
               * Type of an analysis object. Enumeration: Measure, Dimension
               */
              getType(): string;
              /**
               * Gets current value of property {@link #getUid uid}.
               *
               * Uid of analysis object
               */
              getUid(): string;
              /**
               * Sets a new value for property {@link #getDataType dataType}.
               *
               * Data type of an analysis object. Enumeration: string, number, date
               *
               * When called with a value of `null` or `undefined`, the default value of the property will be restored.
               */
              setDataType(
                /**
                 * New value for property `dataType`
                 */
                sDataType: string
              ): sap.viz.ui5.controls.common.feeds.AnalysisObject;
              /**
               * Sets a new value for property {@link #getName name}.
               *
               * Name of an analysis object.
               *
               * When called with a value of `null` or `undefined`, the default value of the property will be restored.
               */
              setName(
                /**
                 * New value for property `name`
                 */
                sName: string
              ): sap.viz.ui5.controls.common.feeds.AnalysisObject;
              /**
               * Sets a new value for property {@link #getType type}.
               *
               * Type of an analysis object. Enumeration: Measure, Dimension
               *
               * When called with a value of `null` or `undefined`, the default value of the property will be restored.
               */
              setType(
                /**
                 * New value for property `type`
                 */
                sType: string
              ): sap.viz.ui5.controls.common.feeds.AnalysisObject;
              /**
               * Sets a new value for property {@link #getUid uid}.
               *
               * Uid of analysis object
               *
               * When called with a value of `null` or `undefined`, the default value of the property will be restored.
               */
              setUid(
                /**
                 * New value for property `uid`
                 */
                sUid: string
              ): sap.viz.ui5.controls.common.feeds.AnalysisObject;
            }
            /**
             * @SINCE 1.21.0
             *
             * FeedItem Class
             */
            class FeedItem extends sap.ui.core.Element {
              /**
               * Constructor for a new ui5/controls/common/feeds/FeedItem.
               *
               * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
               * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
               * of the syntax of the settings object.
               */
              constructor(
                /**
                 * id for the new control, generated automatically if no id is given
                 */
                sId?: string,
                /**
                 * initial settings for the new control
                 */
                mSettings?: FeedItemOpts
              );

              /**
               * Creates a new subclass of class sap.viz.ui5.controls.common.feeds.FeedItem with name `sClassName` and
               * enriches it with the information contained in `oClassInfo`.
               *
               * `oClassInfo` might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.
               */
              // @ts-ignore
              static extend(
                /**
                 * Name of the class being created
                 */
                sClassName: string,
                /**
                 * Object literal with information about the class
                 */
                oClassInfo?: object,
                /**
                 * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
                 */
                FNMetaImpl?: Function
              ): Function;
              /**
               * Returns a metadata object for class sap.viz.ui5.controls.common.feeds.FeedItem.
               */
              // @ts-ignore
              static getMetadata(): sap.ui.base.Metadata;
              /**
               * Gets current value of property {@link #getType type}.
               *
               * Type of a feed item. Enumeration: Measure, Dimension
               */
              getType(): string;
              /**
               * Gets current value of property {@link #getUid uid}.
               *
               * Uid of a feed item. Please reference to bindings section in VIZDOCS to get the exact sUid string for
               * each chart type.
               *
               * For example: Bar chart > bindings > categoryAxis ; color ; valueAxis. The 'categoryAxis' should be the
               * sUid for x axis feeding for bar chart.
               */
              getUid(): string;
              /**
               * Gets current value of property {@link #getValues values}.
               *
               * Value of a feed item.
               */
              getValues(): any[];
              /**
               * Sets a new value for property {@link #getType type}.
               *
               * Type of a feed item. Enumeration: Measure, Dimension
               *
               * When called with a value of `null` or `undefined`, the default value of the property will be restored.
               */
              setType(
                /**
                 * New value for property `type`
                 */
                sType: string
              ): sap.viz.ui5.controls.common.feeds.FeedItem;
              /**
               * Sets a new value for property {@link #getUid uid}.
               *
               * Uid of a feed item. Please reference to bindings section in VIZDOCS to get the exact sUid string for
               * each chart type.
               *
               * For example: Bar chart > bindings > categoryAxis ; color ; valueAxis. The 'categoryAxis' should be the
               * sUid for x axis feeding for bar chart.
               *
               * When called with a value of `null` or `undefined`, the default value of the property will be restored.
               */
              setUid(
                /**
                 * New value for property `uid`
                 */
                sUid: string
              ): sap.viz.ui5.controls.common.feeds.FeedItem;
              /**
               * Sets a new value for property {@link #getValues values}.
               *
               * Value of a feed item.
               *
               * When called with a value of `null` or `undefined`, the default value of the property will be restored.
               */
              setValues(
                /**
                 * New value for property `values`
                 */
                sValues: any[]
              ): sap.viz.ui5.controls.common.feeds.FeedItem;
            }
          }

          interface BaseControlOpts extends sap.ui.core.ControlOpts {
            /**
             * Configuration for initialization to VizControl. This property could only set via settings parameter in
             * Constructor.
             */
            uiConfig?: object;

            /**
             * Width of the VizControl as a CSS size.
             */
            width?: sap.ui.core.CSSSize;

            /**
             * Height of the VizControl as a CSS size.
             */
            height?: sap.ui.core.CSSSize;
          }
          /**
           * @SINCE 1.22.0
           *
           * An abstract base class for all VIZ controls
           */
          class BaseControl extends sap.ui.core.Control {
            /**
             * Constructor for a new ui5/controls/common/BaseControl.
             *
             * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
             * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
             * of the syntax of the settings object.
             */
            constructor(
              /**
               * id for the new control, generated automatically if no id is given
               */
              sId?: string,
              /**
               * initial settings for the new control
               */
              mSettings?: BaseControlOpts
            );

            /**
             * Creates a new subclass of class sap.viz.ui5.controls.common.BaseControl with name `sClassName` and enriches
             * it with the information contained in `oClassInfo`.
             *
             * `oClassInfo` might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.
             */
            // @ts-ignore
            static extend(
              /**
               * Name of the class being created
               */
              sClassName: string,
              /**
               * Object literal with information about the class
               */
              oClassInfo?: object,
              /**
               * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
               */
              FNMetaImpl?: Function
            ): Function;
            /**
             * Gets current value of property {@link #getHeight height}.
             *
             * Height of the VizControl as a CSS size.
             *
             * Default value is `480px`.
             */
            getHeight(): sap.ui.core.CSSSize;
            /**
             * Returns a metadata object for class sap.viz.ui5.controls.common.BaseControl.
             */
            // @ts-ignore
            static getMetadata(): sap.ui.base.Metadata;
            /**
             * Gets current value of property {@link #getUiConfig uiConfig}.
             *
             * Configuration for initialization to VizControl. This property could only set via settings parameter in
             * Constructor.
             */
            getUiConfig(): object;
            /**
             * Gets current value of property {@link #getWidth width}.
             *
             * Width of the VizControl as a CSS size.
             *
             * Default value is `640px`.
             */
            getWidth(): sap.ui.core.CSSSize;
            /**
             * Sets a new value for property {@link #getHeight height}.
             *
             * Height of the VizControl as a CSS size.
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `480px`.
             */
            setHeight(
              /**
               * New value for property `height`
               */
              sHeight: sap.ui.core.CSSSize
            ): sap.viz.ui5.controls.common.BaseControl;
            /**
             * Sets a new value for property {@link #getUiConfig uiConfig}.
             *
             * Configuration for initialization to VizControl. This property could only set via settings parameter in
             * Constructor.
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             */
            setUiConfig(
              /**
               * New value for property `uiConfig`
               */
              oUiConfig: object
            ): sap.viz.ui5.controls.common.BaseControl;
            /**
             * Sets a new value for property {@link #getWidth width}.
             *
             * Width of the VizControl as a CSS size.
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `640px`.
             */
            setWidth(
              /**
               * New value for property `width`
               */
              sWidth: sap.ui.core.CSSSize
            ): sap.viz.ui5.controls.common.BaseControl;
          }
        }

        interface PopoverOpts
          extends sap.viz.ui5.controls.common.BaseControlOpts {
          /**
           * A callback function let user customize Popover's content panel.
           */
          customDataControl?: any;

          /**
           * The items of this list or rows of Action List in Home Page inside the Popover.
           */
          actionItems?: object[];

          /**
           * The pattern is used to format the measures displayed in Popover. If value type of format string is String,
           * the format string will be used to format all measures. If value type is Object, each format string in
           * the Object will be used to format the specified measure or time dimension.
           */
          formatString?: any;

          /**
           * Show line with popover marker in line/combination charts.
           */
          showLine?: boolean;
        }

        interface VizFrameOpts
          extends sap.viz.ui5.controls.common.BaseControlOpts {
          /**
           * Type for viz frame. User can pass 'chartType' or 'info/chartType'. For example both 'bar' and 'info/bar'
           * will create a info bar chart. Supported chart type: column, dual_column, bar, dual_bar, stacked_bar,
           * stacked_column, line, dual_line, combination, bullet, time_bullet, bubble, time_bubble, pie, donut, timeseries_column,
           * timeseries_line, timeseries_scatter, timeseries_bubble, timeseries_stacked_column, timeseries_100_stacked_column,
           * timeseries_bullet, timeseries_waterfall, timeseries_stacked_combination scatter, vertical_bullet, dual_stacked_bar,
           * 100_stacked_bar, 100_dual_stacked_bar, dual_stacked_column, 100_stacked_column, 100_dual_stacked_column,
           * stacked_combination, horizontal_stacked_combination, dual_stacked_combination, dual_horizontal_stacked_combination,
           * heatmap, treemap, waterfall, horizontal_waterfall, area, radar
           */
          vizType?: string;

          /**
           * Chart properties, refer to chart property doc for more details.
           */
          vizProperties?: object;

          /**
           * @SINCE 1.25
           *
           * Chart scales, refer to chart property doc for more details.
           */
          vizScales?: object;

          /**
           * Chart customizations property, aim to customize existing (build-in) charts to meet specific LoB requirements.
           * Currently, supported chart type : column, dual_column, bar, dual_bar, stacked_column, stacked_bar, 100_stacked_bar,
           * 100_stacked_column, 100_dual_stacked_bar, 100_dual_stacked_column, dual_stacked_bar, dual_stacked_column,
           * line, horizontal_line, dual_line, dual_horizontal_line, combination, horizontal_combination, stacked_combination,
           * horizontal_stacked_combination, dual_stacked_combination, dual_horizontal_stacked_combination, scatter,
           * bubble.
           */
          vizCustomizations?: object;

          /**
           * Set chart's legend properties.
           */
          legendVisible?: boolean;

          /**
           * Event fires when the rendering ends.
           */
          renderComplete?: Function;

          /**
           * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
           * in.
           */
          selectData?: Function;

          /**
           * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
           * passed in
           */
          deselectData?: Function;

          /**
           * Dataset for chart.
           */
          dataset?: sap.viz.ui5.data.Dataset;

          /**
           * All feeds for chart.
           */
          feeds?:
            | sap.viz.ui5.controls.common.feeds.FeedItem[]
            | sap.viz.ui5.controls.common.feeds.FeedItem;
        }

        interface VizSliderOpts extends sap.ui.core.ControlOpts {
          /**
           * Type of chart. User can pass 'chartType' or 'info/chartType'. For example both 'bar' and 'info/bar' will
           * create a info bar chart. Supported chart type: column, line, timeseries_column, timeseries_line
           */
          vizType?: string;

          /**
           * Configuration for initialization to VizControl. This property could only set via settings parameter in
           * Constructor.
           */
          uiConfig?: object;

          /**
           * Width of the VizControl as a CSS size.
           */
          width?: sap.ui.core.CSSSize;

          /**
           * Height of the VizControl as a CSS size.
           */
          height?: sap.ui.core.CSSSize;

          /**
           * Set valueAxis visible or not
           */
          valueAxisVisible?: boolean;

          /**
           * Set percentage label of range slider visible or not
           */
          showPercentageLabel?: boolean;

          /**
           * Set start end label of range slider visible or not
           */
          showStartEndLabel?: boolean;

          /**
           * Set start end date of range slider. Supported chart type: timeseries_column, timeseries_line
           */
          range?: object;

          /**
           * Event fires when selected range changes. Data structure For Time chart: { start: {Date: 1422181498387},
           * end: {Date: 1422049107429} }. For column and line Chart: { "data":[{"Country":"Canada"}, {"Country":"China"},{"Country":"France"},
           * {"Country":"Germany"},{"Country":"India"}] }.
           */
          rangeChanged?: Function;

          /**
           * Dataset for VizSlider.
           */
          dataset?: sap.viz.ui5.data.Dataset;

          /**
           * All feeds for VizSlider.
           */
          feeds?:
            | sap.viz.ui5.controls.common.feeds.FeedItem[]
            | sap.viz.ui5.controls.common.feeds.FeedItem;
        }

        interface VizTooltipOpts
          extends sap.viz.ui5.controls.common.BaseControlOpts {
          /**
           * The pattern is used to format the measures/timeDimensions displayed in Tooltip. If value type of format
           * string is String or an object with 'formatPattern' and 'dataUnit' values defined, the value will be used
           * to format all measures(not works with TimeDimension). The value of ‘formatPattern’ here is a string to
           * define the format pattern of numbers, and value of ‘dataUnit’ is a postfix string to indicate the unit
           * of measure. If value type is Object whose key is measure/timeDimension name, the possible value type
           * is string or an object with ‘formatPattern’ and ‘dataUnit’ values defined. And each string value will
           * be used to format the specified measure or time dimension. And TimeDimension does not support 'dataUnit'.
           */
          formatString?: any;
        }
        /**
         * @SINCE 1.22.0
         * @EXPERIMENTAL (since 1.22.0)
         *
         * Viz Chart Popover
         */
        class Popover extends sap.viz.ui5.controls.common.BaseControl {
          /**
           * Constructor for a new ui5/controls/Popover.
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: PopoverOpts
          );

          /**
           * Close Chart's Popover.
           */
          close(): void;
          /**
           * Connect chart Popover with VizFrame. Chart Popover is only supported for VizFrame with 'fiori' type.
           * It must be called by application.
           *
           * Example:
           * ```javascript
           *
           * var vizFrame = new sap.viz.ui5.controls.VizFrame({
           * 	'vizType' : 'bar',
           *  'uiConfig' : {
           *     'applicationSet': 'fiori'
           *   }
           * });
           * var vizPopover = new sap.viz.ui5.controls.Popover({});
           * vizPopover.connect(vizFrame.getVizUid());
           * ```
           */
          connect(uid: string): void;
          /**
           * Creates a new subclass of class sap.viz.ui5.controls.Popover with name `sClassName` and enriches it with
           * the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.controls.common.BaseControl.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getActionItems actionItems}.
           *
           * The items of this list or rows of Action List in Home Page inside the Popover.
           */
          getActionItems(): object[];
          /**
           * Gets current value of property {@link #getCustomDataControl customDataControl}.
           *
           * A callback function let user customize Popover's content panel.
           */
          getCustomDataControl(): any;
          /**
           * Gets current value of property {@link #getFormatString formatString}.
           *
           * The pattern is used to format the measures displayed in Popover. If value type of format string is String,
           * the format string will be used to format all measures. If value type is Object, each format string in
           * the Object will be used to format the specified measure or time dimension.
           */
          getFormatString(): any;
          /**
           * Returns a metadata object for class sap.viz.ui5.controls.Popover.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getShowLine showLine}.
           *
           * Show line with popover marker in line/combination charts.
           *
           * Default value is `true`.
           */
          getShowLine(): boolean;
          /**
           * Sets a new value for property {@link #getActionItems actionItems}.
           *
           * The items of this list or rows of Action List in Home Page inside the Popover.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setActionItems(
            /**
             * New value for property `actionItems`
             */
            sActionItems: object[]
          ): sap.viz.ui5.controls.Popover;
          /**
           * Sets a new value for property {@link #getCustomDataControl customDataControl}.
           *
           * A callback function let user customize Popover's content panel.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setCustomDataControl(
            /**
             * New value for property `customDataControl`
             */
            oCustomDataControl: any
          ): sap.viz.ui5.controls.Popover;
          /**
           * Sets a new value for property {@link #getFormatString formatString}.
           *
           * The pattern is used to format the measures displayed in Popover. If value type of format string is String,
           * the format string will be used to format all measures. If value type is Object, each format string in
           * the Object will be used to format the specified measure or time dimension.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setFormatString(
            /**
             * New value for property `formatString`
             */
            oFormatString: any
          ): sap.viz.ui5.controls.Popover;
          /**
           * Sets a new value for property {@link #getShowLine showLine}.
           *
           * Show line with popover marker in line/combination charts.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setShowLine(
            /**
             * New value for property `showLine`
             */
            bShowLine: boolean
          ): sap.viz.ui5.controls.Popover;
        }
        /**
         * @SINCE 1.22.0
         *
         * VizFrame is a viz control that manages a visualization’s initialization, layout, feeding, customization
         * and interactions.
         */
        class VizFrame extends sap.viz.ui5.controls.common.BaseControl {
          /**
           * Constructor for a new ui5/controls/VizFrame. For more information on the available info chart types,
           * see the following documentation.
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: VizFrameOpts
          );

          /**
           * Adds some feed to the aggregation {@link #getFeeds feeds}.
           */
          addFeed(
            /**
             * The feed to add; if empty, nothing is inserted
             */
            oFeed: sap.viz.ui5.controls.common.feeds.FeedItem
          ): sap.viz.ui5.controls.VizFrame;
          /**
           * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.controls.VizFrame`.
           *
           * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
           * otherwise it will be bound to this `sap.viz.ui5.controls.VizFrame` itself.
           *
           * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
           * passed in
           */
          attachDeselectData(
            /**
             * An application-specific payload object that will be passed to the event handler along with the event
             * object when firing the event
             */
            oData: object,
            /**
             * The function to be called when the event occurs
             */
            fnFunction: Function,
            /**
             * Context object to call the event handler with. Defaults to this `sap.viz.ui5.controls.VizFrame` itself
             */
            oListener?: object
          ): sap.viz.ui5.controls.VizFrame;
          /**
           * Attaches event handler `fnFunction` to the {@link #event:renderComplete renderComplete} event of this
           * `sap.viz.ui5.controls.VizFrame`.
           *
           * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
           * otherwise it will be bound to this `sap.viz.ui5.controls.VizFrame` itself.
           *
           * Event fires when the rendering ends.
           */
          attachRenderComplete(
            /**
             * An application-specific payload object that will be passed to the event handler along with the event
             * object when firing the event
             */
            oData: object,
            /**
             * The function to be called when the event occurs
             */
            fnFunction: Function,
            /**
             * Context object to call the event handler with. Defaults to this `sap.viz.ui5.controls.VizFrame` itself
             */
            oListener?: object
          ): sap.viz.ui5.controls.VizFrame;
          /**
           * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.controls.VizFrame`.
           *
           * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
           * otherwise it will be bound to this `sap.viz.ui5.controls.VizFrame` itself.
           *
           * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
           * in.
           */
          attachSelectData(
            /**
             * An application-specific payload object that will be passed to the event handler along with the event
             * object when firing the event
             */
            oData: object,
            /**
             * The function to be called when the event occurs
             */
            fnFunction: Function,
            /**
             * Context object to call the event handler with. Defaults to this `sap.viz.ui5.controls.VizFrame` itself
             */
            oListener?: object
          ): sap.viz.ui5.controls.VizFrame;
          /**
           * Destroys the dataset in the aggregation {@link #getDataset dataset}.
           */
          destroyDataset(): sap.viz.ui5.controls.VizFrame;
          /**
           * Destroys all the feeds in the aggregation {@link #getFeeds feeds}.
           */
          destroyFeeds(): sap.viz.ui5.controls.VizFrame;
          /**
           * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.controls.VizFrame`.
           *
           * The passed function and listener object must match the ones used for event registration.
           */
          detachDeselectData(
            /**
             * The function to be called, when the event occurs
             */
            fnFunction: Function,
            /**
             * Context object on which the given function had to be called
             */
            oListener?: object
          ): sap.viz.ui5.controls.VizFrame;
          /**
           * Detaches event handler `fnFunction` from the {@link #event:renderComplete renderComplete} event of this
           * `sap.viz.ui5.controls.VizFrame`.
           *
           * The passed function and listener object must match the ones used for event registration.
           */
          detachRenderComplete(
            /**
             * The function to be called, when the event occurs
             */
            fnFunction: Function,
            /**
             * Context object on which the given function had to be called
             */
            oListener?: object
          ): sap.viz.ui5.controls.VizFrame;
          /**
           * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.controls.VizFrame`.
           *
           * The passed function and listener object must match the ones used for event registration.
           */
          detachSelectData(
            /**
             * The function to be called, when the event occurs
             */
            fnFunction: Function,
            /**
             * Context object on which the given function had to be called
             */
            oListener?: object
          ): sap.viz.ui5.controls.VizFrame;
          /**
           * Export the current viz as SVG String. The viz is ready to be exported to svg ONLY after the initialization
           * is finished. Any attempt to export to svg before that will result in an empty svg string.
           */
          exportToSVGString(
            /**
             *
             * ```javascript
             *
             * {
             *     width: Number - the exported svg will be scaled to the specific width.
             *     height: Number - the exported svg will be scaled to the specific height.
             *     hideTitleLegend: Boolean - flag to indicate if the exported svg includes the original title and legend.
             *     hideAxis: Boolean - flag to indicate if the exported svg includes the original axis.
             * }
             * ```
             */
            option?: Object
          ): string;
          /**
           * Creates a new subclass of class sap.viz.ui5.controls.VizFrame with name `sClassName` and enriches it
           * with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.controls.common.BaseControl.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Fires event {@link #event:deselectData deselectData} to attached listeners.
           */
          fireDeselectData(
            /**
             * Parameters to pass along with the event
             */
            mParameters?: object
          ): sap.viz.ui5.controls.VizFrame;
          /**
           * Fires event {@link #event:renderComplete renderComplete} to attached listeners.
           */
          fireRenderComplete(
            /**
             * Parameters to pass along with the event
             */
            mParameters?: object
          ): sap.viz.ui5.controls.VizFrame;
          /**
           * Fires event {@link #event:selectData selectData} to attached listeners.
           */
          fireSelectData(
            /**
             * Parameters to pass along with the event
             */
            mParameters?: object
          ): sap.viz.ui5.controls.VizFrame;
          /**
           * Gets content of aggregation {@link #getDataset dataset}.
           *
           * Dataset for chart.
           */
          getDataset(): sap.viz.ui5.data.Dataset;
          /**
           * Gets content of aggregation {@link #getFeeds feeds}.
           *
           * All feeds for chart.
           */
          getFeeds(): sap.viz.ui5.controls.common.feeds.FeedItem[];
          /**
           * @SINCE 1.28
           *
           * Return current legend group visibility.
           */
          getLegendVisible(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.controls.VizFrame.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * @deprecated (since 1.28) - This API has been deprecated. This interface will be removed from the SAPUI5
           * delivery in one of the next releases.
           *
           * Get ResponsiveLegend Control. (For fiori application set only. It has been deprecated since 1.28.)
           */
          getResponsiveLegend(): void;
          /**
           * Gets current value of property {@link #getVizCustomizations vizCustomizations}.
           *
           * Chart customizations property, aim to customize existing (build-in) charts to meet specific LoB requirements.
           * Currently, supported chart type : column, dual_column, bar, dual_bar, stacked_column, stacked_bar, 100_stacked_bar,
           * 100_stacked_column, 100_dual_stacked_bar, 100_dual_stacked_column, dual_stacked_bar, dual_stacked_column,
           * line, horizontal_line, dual_line, dual_horizontal_line, combination, horizontal_combination, stacked_combination,
           * horizontal_stacked_combination, dual_stacked_combination, dual_horizontal_stacked_combination, scatter,
           * bubble.
           */
          getVizCustomizations(): object;
          /**
           * Gets current value of property {@link #getVizProperties vizProperties}.
           *
           * Chart properties, refer to chart property doc for more details.
           */
          getVizProperties(): object;
          /**
           * @SINCE 1.25
           *
           * Gets current value of property {@link #getVizScales vizScales}.
           *
           * Chart scales, refer to chart property doc for more details.
           */
          getVizScales(): object;
          /**
           * Gets current value of property {@link #getVizType vizType}.
           *
           * Type for viz frame. User can pass 'chartType' or 'info/chartType'. For example both 'bar' and 'info/bar'
           * will create a info bar chart. Supported chart type: column, dual_column, bar, dual_bar, stacked_bar,
           * stacked_column, line, dual_line, combination, bullet, time_bullet, bubble, time_bubble, pie, donut, timeseries_column,
           * timeseries_line, timeseries_scatter, timeseries_bubble, timeseries_stacked_column, timeseries_100_stacked_column,
           * timeseries_bullet, timeseries_waterfall, timeseries_stacked_combination scatter, vertical_bullet, dual_stacked_bar,
           * 100_stacked_bar, 100_dual_stacked_bar, dual_stacked_column, 100_stacked_column, 100_dual_stacked_column,
           * stacked_combination, horizontal_stacked_combination, dual_stacked_combination, dual_horizontal_stacked_combination,
           * heatmap, treemap, waterfall, horizontal_waterfall, area, radar
           *
           * Default value is `column`.
           */
          getVizType(): string;
          /**
           * Uid for viz frame. It supports other controls to connect to a viz instance.
           */
          getVizUid(): string;
          /**
           * Checks for the provided `sap.viz.ui5.controls.common.feeds.FeedItem` in the aggregation {@link #getFeeds
           * feeds}. and returns its index if found or -1 otherwise.
           */
          indexOfFeed(
            /**
             * The feed whose index is looked for
             */
            oFeed: sap.viz.ui5.controls.common.feeds.FeedItem
          ): number;
          /**
           * Inserts a feed into the aggregation {@link #getFeeds feeds}.
           */
          insertFeed(
            /**
             * The feed to insert; if empty, nothing is inserted
             */
            oFeed: sap.viz.ui5.controls.common.feeds.FeedItem,
            /**
             * The `0`-based index the feed should be inserted at; for a negative value of `iIndex`, the feed is inserted
             * at position 0; for a value greater than the current size of the aggregation, the feed is inserted at
             * the last position
             */
            iIndex: number
          ): sap.viz.ui5.controls.VizFrame;
          /**
           * Removes all the controls from the aggregation {@link #getFeeds feeds}.
           *
           * Additionally, it unregisters them from the hosting UIArea.
           */
          removeAllFeeds(): sap.viz.ui5.controls.common.feeds.FeedItem[];
          /**
           * Removes a feed from the aggregation {@link #getFeeds feeds}.
           */
          removeFeed(
            /**
             * The feed to remove or its index or id
             */
            vFeed: number | string | sap.viz.ui5.controls.common.feeds.FeedItem
          ): sap.viz.ui5.controls.common.feeds.FeedItem;
          /**
           * Set whether to enable overlay or not. If the value is true, the chart will be blocked with a transparent
           * overlay.
           */
          // @ts-ignore
          setBlocked(
            /**
             * New value for whether to enable visibility of overlay.
             */
            bBlocked?: boolean
          ): void;
          /**
           * Sets the aggregated {@link #getDataset dataset}.
           */
          setDataset(
            /**
             * The dataset to set
             */
            oDataset: sap.viz.ui5.data.Dataset
          ): sap.viz.ui5.controls.VizFrame;
          /**
           * @SINCE 1.28
           *
           * Will respect the setting for all available legends.
           */
          setLegendVisible(
            /**
             * Set legend visibility.
             */
            bLegendVisible: boolean
          ): object;
          /**
           * Setter for property uiConfig. uiConfig could only set via settings parameter of constructor.
           *
           * uiConfig from base type could config the instance. Supported uiConfig keyword: applicationSet, showErrorMessage
           *
           * Example:
           *
           *
           * ```javascript
           *
           * var vizFrame = new sap.viz.ui5.controls.VizFrame({
           *  'vizType' : 'bar',
           *  'uiConfig' : {
           *      'applicationSet' : 'fiori',
           *      'showErrorMessage' : true
           *  }
           * });
           * ```
           */
          // @ts-ignore
          setUiConfig(oUiConfig: object): sap.viz.ui5.controls.VizFrame;
          /**
           * Sets a new value for property {@link #getVizCustomizations vizCustomizations}.
           *
           * Chart customizations property, aim to customize existing (build-in) charts to meet specific LoB requirements.
           * Currently, supported chart type : column, dual_column, bar, dual_bar, stacked_column, stacked_bar, 100_stacked_bar,
           * 100_stacked_column, 100_dual_stacked_bar, 100_dual_stacked_column, dual_stacked_bar, dual_stacked_column,
           * line, horizontal_line, dual_line, dual_horizontal_line, combination, horizontal_combination, stacked_combination,
           * horizontal_stacked_combination, dual_stacked_combination, dual_horizontal_stacked_combination, scatter,
           * bubble.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setVizCustomizations(
            /**
             * New value for property `vizCustomizations`
             */
            oVizCustomizations: object
          ): sap.viz.ui5.controls.VizFrame;
          /**
           * Properties for viz frame.
           *
           * Example:
           *
           *
           * ```javascript
           *
           *  var vizFrame = new sap.viz.ui5.controls.VizFrame(...);
           *  var properties = {
           *      'legend' : { 'visible'; : true }
           * };
           * vizFrame.setVizProperties(properties);
           * ```
           */
          setVizProperties(
            oVizProperties: object
          ): sap.viz.ui5.controls.VizFrame;
          /**
           * Scales for VizFrame.
           *
           * Example:
           *
           *
           * ```javascript
           *
           * var vizFrame = new sap.viz.ui5.controls.VizFrame(...);
           * var scales = [{
           *      'feed': 'color',
           *      'palette': ['#ff0000']
           * }];
           * var vizScalesOption = {replace: true};
           * vizFrame.setVizScales(scales, vizScalesOption);
           * ```
           */
          setVizScales(
            oVizScales: object,
            /**
             *
             * ```javascript
             *
             * {
             *     replace: Boolean - replace scales or not. When oVizScalesOption.replace is true,
             *                        replace existing scales with the input scales.
             * }
             * ```
             */
            oVizScalesOption?: object
          ): sap.viz.ui5.controls.VizFrame;
          /**
           * Setter for property vizType. vizType could only set via settings parameter in Constructor. Do not set
           * vizType at runtime.
           *
           * vizType is a string of supported chart type or extension chart type.
           *
           * Supported chart types: bubble, combination, column, bar, line, stacked_bar, stacked_column, bullet, vertical_bullet,
           * timebubble. User can pass 'chartType' or 'info/chartType' for these supported chart types.
           *
           * Example:
           * ```javascript
           *
           * var vizFrame = new sap.viz.ui5.controls.VizFrame({
           *  'vizType' : 'bar'
           * });
           * ```
           *
           *
           * For extension chart type, user should load extension js file manually at first.
           *
           * Example:
           * ```javascript
           *
           * var vizFrame = new sap.viz.ui5.controls.VizFrame({
           *  'vizType' : 'myextension'
           * });
           * ```
           */
          setVizType(sVizType: string): sap.viz.ui5.controls.VizFrame;
          /**
           * Selections for viz frame. Example:
           *
           *
           * ```javascript
           *
           *  var vizFrame = new sap.viz.ui5.controls.VizFrame(...);
           *  //vizSelection for set
           *  var points = [{
           *      data : {
           *          "Country" : "China",
           *          "Year" : "2001",
           *          "Product" : "Car",
           *          "Profit" : 25
           *      }}, {
           *      data : {
           *          "Country" : "China",
           *          "Year" : "2001",
           *          "Product" : "Trunk",
           *          "Profit" : 34
           *      }}];
           *  var action = {
           *      clearSelection : true
           *  };
           * vizFrame.vizSelection(points, action);
           * //vizSelection for get and return result
           * var result = vizFrame.vizSelection();
           * result = [{
           *          data : {
           *              "Country" : "China",
           *              "Year" : "2001",
           *              "Product" : "Car",
           *              "Profit" : 25
           *          },
           *          unit : {
           *              "Profit" : "$"
           *          },
           *          dataName : {
           *              "Profit" : "Actual"
           *          }
           *       }, {
           *          data : {
           *              "Country" : "China",
           *              "Year" : "2001",
           *              "Product" : "Trunk",
           *              "Profit" : 34
           *          },
           *          unit : {
           *              "Profit" : "$"
           *          },
           *          dataName : {
           *              "Profit" : "Actual"
           *          }
           *      }]
           * ```
           */
          vizSelection(
            /**
             * some data points of the chart
             */
            aPoints: object[],
            /**
             * whether to clear previous selection, by default the selection will be incremental selection
             */
            oAction: object
          ): sap.viz.ui5.controls.VizFrame;
          /**
           * Update viz frame according to a JSON object, it can update css, properties, feeds and data model.
           *
           * VizFrame instance has to be placed at its corresponding parent at first to make this API work.
           *
           * Example:
           *
           *
           * ```javascript
           *
           * var vizFrame = new sap.viz.ui5.controls.VizFrame(...);
           * var data = new  sap.viz.ui5.data.FlattenedDataset(...);
           * var properties = {
           *     'legend' : {'visible' : true},
           * };
           * var scales = [{
           *      'feed': 'color',
           *      'palette': ['#ff0000']
           * }];
           * var customizations = {id:"sap.viz.custom",customOverlayProperties: {}};
           * var FeedItem = sap.viz.ui5.controls.common.feeds.FeedItem;
           * var feeds = [
           *     new FeedItem({'uid' : 'primaryValues',
           *                   'type' : 'Measure',
           *                   'values' : []}),
           *     new FeedItem({'uid' : 'regionColor',
           *                   'type' : 'Dimension',
           *                   'values' : []})];
           * vizFrame.vizUpdate({
           *               'data' : data,
           *               'properties' : properties,
           *               'scales' : scales,
           *               'customizations' : customizations,
           *               'feeds' : feeds
           *           });
           * ```
           */
          vizUpdate(
            /**
             * a JSON object contains combination of properties, feeds and data model.
             */
            oOptions: object
          ): sap.viz.ui5.controls.VizFrame;
          /**
           * Zoom the chart plot.
           *
           * Example:
           * ```javascript
           *
           *  var vizFrame = new sap.viz.ui5.controls.VizFrame(...);
           *  vizFrame.zoom({direction: "in"});
           * ```
           */
          zoom(
            /**
             * a "direction" attribute with value "in" or "out" indicating zoom to enlarge or shrink respectively
             */
            contains: object
          ): void;
          /**
           * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.controls.VizFrame`.
           *
           * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
           * otherwise it will be bound to this `sap.viz.ui5.controls.VizFrame` itself.
           *
           * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
           * passed in
           */
          attachDeselectData(
            /**
             * The function to be called when the event occurs
             */
            fnFunction: Function,
            /**
             * Context object to call the event handler with. Defaults to this `sap.viz.ui5.controls.VizFrame` itself
             */
            oListener?: object
          ): sap.viz.ui5.controls.VizFrame;
          /**
           * Attaches event handler `fnFunction` to the {@link #event:renderComplete renderComplete} event of this
           * `sap.viz.ui5.controls.VizFrame`.
           *
           * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
           * otherwise it will be bound to this `sap.viz.ui5.controls.VizFrame` itself.
           *
           * Event fires when the rendering ends.
           */
          attachRenderComplete(
            /**
             * The function to be called when the event occurs
             */
            fnFunction: Function,
            /**
             * Context object to call the event handler with. Defaults to this `sap.viz.ui5.controls.VizFrame` itself
             */
            oListener?: object
          ): sap.viz.ui5.controls.VizFrame;
          /**
           * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.controls.VizFrame`.
           *
           * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
           * otherwise it will be bound to this `sap.viz.ui5.controls.VizFrame` itself.
           *
           * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
           * in.
           */
          attachSelectData(
            /**
             * The function to be called when the event occurs
             */
            fnFunction: Function,
            /**
             * Context object to call the event handler with. Defaults to this `sap.viz.ui5.controls.VizFrame` itself
             */
            oListener?: object
          ): sap.viz.ui5.controls.VizFrame;
        }
        /**
         * @SINCE 1.51.0
         *
         * VizSlider is a viz control with range slider that provide data range selection.
         */
        class VizSlider extends sap.ui.core.Control {
          /**
           * Constructor for a new ui5/controls/VizSider.
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: VizSliderOpts
          );

          /**
           * Adds some feed to the aggregation {@link #getFeeds feeds}.
           */
          addFeed(
            /**
             * The feed to add; if empty, nothing is inserted
             */
            oFeed: sap.viz.ui5.controls.common.feeds.FeedItem
          ): sap.viz.ui5.controls.VizSlider;
          /**
           * Attaches event handler `fnFunction` to the {@link #event:rangeChanged rangeChanged} event of this `sap.viz.ui5.controls.VizSlider`.
           *
           * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
           * otherwise it will be bound to this `sap.viz.ui5.controls.VizSlider` itself.
           *
           * Event fires when selected range changes. Data structure For Time chart: { start: {Date: 1422181498387},
           * end: {Date: 1422049107429} }. For column and line Chart: { "data":[{"Country":"Canada"}, {"Country":"China"},{"Country":"France"},
           * {"Country":"Germany"},{"Country":"India"}] }.
           */
          attachRangeChanged(
            /**
             * An application-specific payload object that will be passed to the event handler along with the event
             * object when firing the event
             */
            oData: object,
            /**
             * The function to be called when the event occurs
             */
            fnFunction: Function,
            /**
             * Context object to call the event handler with. Defaults to this `sap.viz.ui5.controls.VizSlider` itself
             */
            oListener?: object
          ): sap.viz.ui5.controls.VizSlider;
          /**
           * Destroys the dataset in the aggregation {@link #getDataset dataset}.
           */
          destroyDataset(): sap.viz.ui5.controls.VizSlider;
          /**
           * Destroys all the feeds in the aggregation {@link #getFeeds feeds}.
           */
          destroyFeeds(): sap.viz.ui5.controls.VizSlider;
          /**
           * Detaches event handler `fnFunction` from the {@link #event:rangeChanged rangeChanged} event of this `sap.viz.ui5.controls.VizSlider`.
           *
           * The passed function and listener object must match the ones used for event registration.
           */
          detachRangeChanged(
            /**
             * The function to be called, when the event occurs
             */
            fnFunction: Function,
            /**
             * Context object on which the given function had to be called
             */
            oListener?: object
          ): sap.viz.ui5.controls.VizSlider;
          /**
           * Creates a new subclass of class sap.viz.ui5.controls.VizSlider with name `sClassName` and enriches it
           * with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Fires event {@link #event:rangeChanged rangeChanged} to attached listeners.
           */
          fireRangeChanged(
            /**
             * Parameters to pass along with the event
             */
            mParameters?: object
          ): sap.viz.ui5.controls.VizSlider;
          /**
           * Gets content of aggregation {@link #getDataset dataset}.
           *
           * Dataset for VizSlider.
           */
          getDataset(): sap.viz.ui5.data.Dataset;
          /**
           * Gets content of aggregation {@link #getFeeds feeds}.
           *
           * All feeds for VizSlider.
           */
          getFeeds(): sap.viz.ui5.controls.common.feeds.FeedItem[];
          /**
           * Gets current value of property {@link #getHeight height}.
           *
           * Height of the VizControl as a CSS size.
           *
           * Default value is `200px`.
           */
          getHeight(): sap.ui.core.CSSSize;
          /**
           * Returns a metadata object for class sap.viz.ui5.controls.VizSlider.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Get start end date of range slider. Supported chart type: timeseries_column, timeseries_line.
           */
          getRange(): object;
          /**
           * Gets current value of property {@link #getShowPercentageLabel showPercentageLabel}.
           *
           * Set percentage label of range slider visible or not
           *
           * Default value is `true`.
           */
          getShowPercentageLabel(): boolean;
          /**
           * Gets current value of property {@link #getShowStartEndLabel showStartEndLabel}.
           *
           * Set start end label of range slider visible or not
           *
           * Default value is `true`.
           */
          getShowStartEndLabel(): boolean;
          /**
           * Gets current value of property {@link #getUiConfig uiConfig}.
           *
           * Configuration for initialization to VizControl. This property could only set via settings parameter in
           * Constructor.
           */
          getUiConfig(): object;
          /**
           * Gets current value of property {@link #getValueAxisVisible valueAxisVisible}.
           *
           * Set valueAxis visible or not
           *
           * Default value is `true`.
           */
          getValueAxisVisible(): boolean;
          /**
           * Gets current value of property {@link #getVizType vizType}.
           *
           * Type of chart. User can pass 'chartType' or 'info/chartType'. For example both 'bar' and 'info/bar' will
           * create a info bar chart. Supported chart type: column, line, timeseries_column, timeseries_line
           *
           * Default value is `column`.
           */
          getVizType(): string;
          /**
           * Gets current value of property {@link #getWidth width}.
           *
           * Width of the VizControl as a CSS size.
           *
           * Default value is `800px`.
           */
          getWidth(): sap.ui.core.CSSSize;
          /**
           * Checks for the provided `sap.viz.ui5.controls.common.feeds.FeedItem` in the aggregation {@link #getFeeds
           * feeds}. and returns its index if found or -1 otherwise.
           */
          indexOfFeed(
            /**
             * The feed whose index is looked for
             */
            oFeed: sap.viz.ui5.controls.common.feeds.FeedItem
          ): number;
          /**
           * Inserts a feed into the aggregation {@link #getFeeds feeds}.
           */
          insertFeed(
            /**
             * The feed to insert; if empty, nothing is inserted
             */
            oFeed: sap.viz.ui5.controls.common.feeds.FeedItem,
            /**
             * The `0`-based index the feed should be inserted at; for a negative value of `iIndex`, the feed is inserted
             * at position 0; for a value greater than the current size of the aggregation, the feed is inserted at
             * the last position
             */
            iIndex: number
          ): sap.viz.ui5.controls.VizSlider;
          /**
           * Removes all the controls from the aggregation {@link #getFeeds feeds}.
           *
           * Additionally, it unregisters them from the hosting UIArea.
           */
          removeAllFeeds(): sap.viz.ui5.controls.common.feeds.FeedItem[];
          /**
           * Removes a feed from the aggregation {@link #getFeeds feeds}.
           */
          removeFeed(
            /**
             * The feed to remove or its index or id
             */
            vFeed: number | string | sap.viz.ui5.controls.common.feeds.FeedItem
          ): sap.viz.ui5.controls.common.feeds.FeedItem;
          /**
           * Sets the aggregated {@link #getDataset dataset}.
           */
          setDataset(
            /**
             * The dataset to set
             */
            oDataset: sap.viz.ui5.data.Dataset
          ): sap.viz.ui5.controls.VizSlider;
          /**
           * Sets a new value for property {@link #getHeight height}.
           *
           * Height of the VizControl as a CSS size.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `200px`.
           */
          setHeight(
            /**
             * New value for property `height`
             */
            sHeight: sap.ui.core.CSSSize
          ): sap.viz.ui5.controls.VizSlider;
          /**
           * Set start end date of range slider. Supported chart type: timeseries_column, timeseries_line.
           *
           * Example:
           *
           *
           * ```javascript
           *
           * var vizSlider = new sap.viz.ui5.controls.VizSlider(...);
           * var range = {
           *     'start' : timestamp,
           *     'end' : timestamp
           * };
           * vizSlider.setRange(range);
           * ```
           */
          setRange(
            /**
             * {start : timestamp, end : timestamp}
             */
            range: object
          ): sap.viz.ui5.controls.VizSlider;
          /**
           * Sets a new value for property {@link #getShowPercentageLabel showPercentageLabel}.
           *
           * Set percentage label of range slider visible or not
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setShowPercentageLabel(
            /**
             * New value for property `showPercentageLabel`
             */
            bShowPercentageLabel: boolean
          ): sap.viz.ui5.controls.VizSlider;
          /**
           * Sets a new value for property {@link #getShowStartEndLabel showStartEndLabel}.
           *
           * Set start end label of range slider visible or not
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setShowStartEndLabel(
            /**
             * New value for property `showStartEndLabel`
             */
            bShowStartEndLabel: boolean
          ): sap.viz.ui5.controls.VizSlider;
          /**
           * Sets a new value for property {@link #getUiConfig uiConfig}.
           *
           * Configuration for initialization to VizControl. This property could only set via settings parameter in
           * Constructor.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setUiConfig(
            /**
             * New value for property `uiConfig`
             */
            oUiConfig: object
          ): sap.viz.ui5.controls.VizSlider;
          /**
           * Sets a new value for property {@link #getValueAxisVisible valueAxisVisible}.
           *
           * Set valueAxis visible or not
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setValueAxisVisible(
            /**
             * New value for property `valueAxisVisible`
             */
            bValueAxisVisible: boolean
          ): sap.viz.ui5.controls.VizSlider;
          /**
           * Sets a new value for property {@link #getVizType vizType}.
           *
           * Type of chart. User can pass 'chartType' or 'info/chartType'. For example both 'bar' and 'info/bar' will
           * create a info bar chart. Supported chart type: column, line, timeseries_column, timeseries_line
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `column`.
           */
          setVizType(
            /**
             * New value for property `vizType`
             */
            sVizType: string
          ): sap.viz.ui5.controls.VizSlider;
          /**
           * Sets a new value for property {@link #getWidth width}.
           *
           * Width of the VizControl as a CSS size.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `800px`.
           */
          setWidth(
            /**
             * New value for property `width`
             */
            sWidth: sap.ui.core.CSSSize
          ): sap.viz.ui5.controls.VizSlider;
          /**
           * Attaches event handler `fnFunction` to the {@link #event:rangeChanged rangeChanged} event of this `sap.viz.ui5.controls.VizSlider`.
           *
           * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
           * otherwise it will be bound to this `sap.viz.ui5.controls.VizSlider` itself.
           *
           * Event fires when selected range changes. Data structure For Time chart: { start: {Date: 1422181498387},
           * end: {Date: 1422049107429} }. For column and line Chart: { "data":[{"Country":"Canada"}, {"Country":"China"},{"Country":"France"},
           * {"Country":"Germany"},{"Country":"India"}] }.
           */
          attachRangeChanged(
            /**
             * The function to be called when the event occurs
             */
            fnFunction: Function,
            /**
             * Context object to call the event handler with. Defaults to this `sap.viz.ui5.controls.VizSlider` itself
             */
            oListener?: object
          ): sap.viz.ui5.controls.VizSlider;
        }
        /**
         * @SINCE 1.44.0
         *
         * Viz Chart Tooltip
         */
        class VizTooltip extends sap.viz.ui5.controls.common.BaseControl {
          /**
           * Constructor for a new ui5/controls/VizTooltip.
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: VizTooltipOpts
          );

          /**
           * Connect chart Tooltip with VizFrame. Chart Tooltip is only supported for VizFrame with 'fiori' type.
           * It must be called by application.
           *
           * Example:
           * ```javascript
           *
           * var vizFrame = new sap.viz.ui5.controls.VizFrame({
           *  'vizType' : 'bar',
           *  'uiConfig' : {
           *     'applicationSet': 'fiori'
           *   }
           * });
           * var Tooltip = new sap.viz.ui5.controls.VizTooltip({});
           * Tooltip.connect(vizFrame.getVizUid());
           * ```
           */
          connect(uid: string): void;
          /**
           * Creates a new subclass of class sap.viz.ui5.controls.VizTooltip with name `sClassName` and enriches it
           * with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.controls.common.BaseControl.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getFormatString formatString}.
           *
           * The pattern is used to format the measures/timeDimensions displayed in Tooltip. If value type of format
           * string is String or an object with 'formatPattern' and 'dataUnit' values defined, the value will be used
           * to format all measures(not works with TimeDimension). The value of ‘formatPattern’ here is a string to
           * define the format pattern of numbers, and value of ‘dataUnit’ is a postfix string to indicate the unit
           * of measure. If value type is Object whose key is measure/timeDimension name, the possible value type
           * is string or an object with ‘formatPattern’ and ‘dataUnit’ values defined. And each string value will
           * be used to format the specified measure or time dimension. And TimeDimension does not support 'dataUnit'.
           */
          getFormatString(): any;
          /**
           * Returns a metadata object for class sap.viz.ui5.controls.VizTooltip.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Sets a new value for property {@link #getFormatString formatString}.
           *
           * The pattern is used to format the measures/timeDimensions displayed in Tooltip. If value type of format
           * string is String or an object with 'formatPattern' and 'dataUnit' values defined, the value will be used
           * to format all measures(not works with TimeDimension). The value of ‘formatPattern’ here is a string to
           * define the format pattern of numbers, and value of ‘dataUnit’ is a postfix string to indicate the unit
           * of measure. If value type is Object whose key is measure/timeDimension name, the possible value type
           * is string or an object with ‘formatPattern’ and ‘dataUnit’ values defined. And each string value will
           * be used to format the specified measure or time dimension. And TimeDimension does not support 'dataUnit'.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setFormatString(
            /**
             * New value for property `formatString`
             */
            oFormatString: any
          ): sap.viz.ui5.controls.VizTooltip;
        }
      }

      namespace core {
        interface BaseChartOpts extends sap.ui.core.ControlOpts {
          /**
           * Width of the Chart as a CSS size.
           */
          width?: sap.ui.core.CSSSize;

          /**
           * Height of the Chart as a CSS size.
           */
          height?: sap.ui.core.CSSSize;

          /**
           * CSS style of Chart.
           */
          css?: string;

          /**
           * Fired before a new VIZ instance is created. Event parameter "usrOptions" contains the intended value
           * for the parameter with the same name of the createViz call.
           */
          beforeCreateViz?: Function;

          /**
           * Dataset for this chart
           */
          dataset?: sap.viz.ui5.data.Dataset;

          /**
           * Control tree to display when there is no data available
           */
          noData?: sap.ui.core.Control;
        }

        interface BaseStructuredTypeOpts extends sap.ui.core.ElementOpts {}
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * An abstract base class for all VIZ charts
         */
        class BaseChart extends sap.ui.core.Control {
          /**
           * Constructor for a new ui5/core/BaseChart.
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: BaseChartOpts
          );

          /**
           * Attaches event handler `fnFunction` to the {@link #event:beforeCreateViz beforeCreateViz} event of this
           * `sap.viz.ui5.core.BaseChart`.
           *
           * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
           * otherwise it will be bound to this `sap.viz.ui5.core.BaseChart` itself.
           *
           * Fired before a new VIZ instance is created. Event parameter "usrOptions" contains the intended value
           * for the parameter with the same name of the createViz call.
           */
          attachBeforeCreateViz(
            /**
             * An application-specific payload object that will be passed to the event handler along with the event
             * object when firing the event
             */
            oData: object,
            /**
             * The function to be called when the event occurs
             */
            fnFunction: Function,
            /**
             * Context object to call the event handler with. Defaults to this `sap.viz.ui5.core.BaseChart` itself
             */
            oListener?: object
          ): sap.viz.ui5.core.BaseChart;
          /**
           * Destroys the dataset in the aggregation {@link #getDataset dataset}.
           */
          destroyDataset(): sap.viz.ui5.core.BaseChart;
          /**
           * Destroys the noData in the aggregation {@link #getNoData noData}.
           */
          destroyNoData(): sap.viz.ui5.core.BaseChart;
          /**
           * Detaches event handler `fnFunction` from the {@link #event:beforeCreateViz beforeCreateViz} event of
           * this `sap.viz.ui5.core.BaseChart`.
           *
           * The passed function and listener object must match the ones used for event registration.
           */
          detachBeforeCreateViz(
            /**
             * The function to be called, when the event occurs
             */
            fnFunction: Function,
            /**
             * Context object on which the given function had to be called
             */
            oListener?: object
          ): sap.viz.ui5.core.BaseChart;
          /**
           * Creates a new subclass of class sap.viz.ui5.core.BaseChart with name `sClassName` and enriches it with
           * the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Fires event {@link #event:beforeCreateViz beforeCreateViz} to attached listeners.
           */
          fireBeforeCreateViz(
            /**
             * Parameters to pass along with the event
             */
            mParameters?: {
              /**
               * Value for the parameter with the same name of the createViz call.
               */
              usrOptions?: object;
            }
          ): sap.viz.ui5.core.BaseChart;
          /**
           * Gets current value of property {@link #getCss css}.
           *
           * CSS style of Chart.
           */
          getCss(): string;
          /**
           * Gets content of aggregation {@link #getDataset dataset}.
           *
           * Dataset for this chart
           */
          getDataset(): sap.viz.ui5.data.Dataset;
          /**
           * Gets current value of property {@link #getHeight height}.
           *
           * Height of the Chart as a CSS size.
           *
           * Default value is `480px`.
           */
          getHeight(): sap.ui.core.CSSSize;
          /**
           * Returns a metadata object for class sap.viz.ui5.core.BaseChart.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets content of aggregation {@link #getNoData noData}.
           *
           * Control tree to display when there is no data available
           */
          getNoData(): sap.ui.core.Control;
          /**
           * Gets current value of property {@link #getWidth width}.
           *
           * Width of the Chart as a CSS size.
           *
           * Default value is `640px`.
           */
          getWidth(): sap.ui.core.CSSSize;
          /**
           * Sets a new value for property {@link #getCss css}.
           *
           * CSS style of Chart.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setCss(
            /**
             * New value for property `css`
             */
            sCss: string
          ): sap.viz.ui5.core.BaseChart;
          /**
           * Sets the aggregated {@link #getDataset dataset}.
           */
          setDataset(
            /**
             * The dataset to set
             */
            oDataset: sap.viz.ui5.data.Dataset
          ): sap.viz.ui5.core.BaseChart;
          /**
           * Sets a new value for property {@link #getHeight height}.
           *
           * Height of the Chart as a CSS size.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `480px`.
           */
          setHeight(
            /**
             * New value for property `height`
             */
            sHeight: sap.ui.core.CSSSize
          ): sap.viz.ui5.core.BaseChart;
          /**
           * Sets the aggregated {@link #getNoData noData}.
           */
          setNoData(
            /**
             * The noData to set
             */
            oNoData: sap.ui.core.Control
          ): sap.viz.ui5.core.BaseChart;
          /**
           * Sets a new value for property {@link #getWidth width}.
           *
           * Width of the Chart as a CSS size.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `640px`.
           */
          setWidth(
            /**
             * New value for property `width`
             */
            sWidth: sap.ui.core.CSSSize
          ): sap.viz.ui5.core.BaseChart;
          /**
           * Attaches event handler `fnFunction` to the {@link #event:beforeCreateViz beforeCreateViz} event of this
           * `sap.viz.ui5.core.BaseChart`.
           *
           * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
           * otherwise it will be bound to this `sap.viz.ui5.core.BaseChart` itself.
           *
           * Fired before a new VIZ instance is created. Event parameter "usrOptions" contains the intended value
           * for the parameter with the same name of the createViz call.
           */
          attachBeforeCreateViz(
            /**
             * The function to be called when the event occurs
             */
            fnFunction: Function,
            /**
             * Context object to call the event handler with. Defaults to this `sap.viz.ui5.core.BaseChart` itself
             */
            oListener?: object
          ): sap.viz.ui5.core.BaseChart;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Abstract base class for all elements that represent VIZ modules or complex property types
         */
        class BaseStructuredType extends sap.ui.core.Element {
          /**
           * Constructor for a new ui5/core/BaseStructuredType.
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           *
           * This class does not have its own settings, but all settings applicable to the base type {@link sap.ui.core.Element#constructor
           * sap.ui.core.Element} can be used.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: BaseStructuredTypeOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.core.BaseStructuredType with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Returns a metadata object for class sap.viz.ui5.core.BaseStructuredType.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
        }
      }

      namespace data {
        interface CustomDatasetOpts extends sap.viz.ui5.data.DatasetOpts {
          /**
           * Data containing dimensions and measures. The format and structure of this data is depends on the chart.
           */
          data?: object;
        }

        interface DatasetOpts extends sap.ui.core.ElementOpts {}

        interface DimensionDefinitionOpts extends sap.ui.core.ElementOpts {
          /**
           * Number of axis this dimension belongs to. Currently must be 1 or 2. Skip this property when use VizFrame.
           */
          axis?: number;

          /**
           * Value for the dimension. Usually bound to some model field.
           */
          value?: any;

          /**
           * Name of the dimension as displayed in the chart
           */
          name?: string;

          /**
           * Id of the dimension as displayed in the chart
           */
          identity?: string;

          /**
           * Display value for the dimension. Usually bound to some model field. It doesn't work with 'waterfallType'
           */
          displayValue?: any;

          /**
           * Data type of the dimension as displayed in the chart. Enumeration: string, number, date. Currently only
           * in time series chart, it is required to set data type to 'date' if this column is going to be fed on
           * 'timeAxis'.
           */
          dataType?: string;

          /**
           * `Sorter` Object of the dimension. There is a default comparator function, if no custom comparator is
           * given. The function returns -1, 0 or 1, depending on the order of the two items and is suitable to be
           * used as a comparator method for Array.sort. The object contains two entries:
           * 	 - `bDescending:`{boolean} (optional) define whether the sort order is descending. Default is false.
           *
           * 	 - `fnComparator:`{function} (optional) a user defined comparator function, which have two input values
           * 			to compare. The input value is an object, which contains value and displayValue (optional).
           */
          sorter?: object;
        }

        interface FlattenedDatasetOpts extends sap.viz.ui5.data.DatasetOpts {
          /**
           * Additional data which works with data context in this dataset. The input could be an array. Each item
           * represents a dimension that is added as the additional information based on data context. The input could
           * be a string of dimension id, or object like this {id: "name", showInTooltip: true}. If showInTooltip
           * is false, the dimensions set in this API will not show in popover or tooltip. However other dimensions
           * in data context will show. In selection event, all dimension information (including the dimension set
           * in this API) will be included. Context will be shown by default in tooltip if only set context with string
           * or string of array.
           */
          context?: any;

          /**
           * data change event
           */
          dataChange?: Function;

          /**
           * data refresh event
           */
          dataRefresh?: Function;

          /**
           * data error event
           */
          dataError?: Function;

          /**
           * List of definitions of all dimensions in this dataset
           */
          dimensions?:
            | sap.viz.ui5.data.DimensionDefinition[]
            | sap.viz.ui5.data.DimensionDefinition;

          /**
           * list of definitions of all measures in this dataset
           */
          measures?:
            | sap.viz.ui5.data.MeasureDefinition[]
            | sap.viz.ui5.data.MeasureDefinition;

          /**
           * Data containing dimensions and measures.
           *
           * **Note:** This aggregation can only be bound against a model, it cannot be managed programmatically using
           * the aggregation mutator methods like addData.
           */
          data?: sap.ui.core.Element[] | sap.ui.core.Element;
        }

        interface MeasureDefinitionOpts extends sap.ui.core.ElementOpts {
          /**
           * Measure group this measure belongs to. Order is significant, number should start from 1. Skip this property
           * when use VizFrame.
           */
          group?: number;

          /**
           * Value for the measure. Usually bound to some model field.
           */
          value?: any;

          /**
           * Name of the measure as displayed in the chart
           */
          name?: string;

          /**
           * Id of the measure as displayed in the chart
           */
          identity?: string;

          /**
           * Format pattern for values of the measure
           */
          format?: any;

          /**
           * Value range
           */
          range?: any[];

          /**
           * Unit of measure
           */
          unit?: string;
        }
        /**
         * @SINCE 1.31
         *
         * A dataset for raw data format.
         */
        class CustomDataset extends sap.viz.ui5.data.Dataset {
          /**
           * Constructor for a new ui5/data/CustomDataset.
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: CustomDatasetOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.data.CustomDataset with name `sClassName` and enriches it
           * with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.data.Dataset.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getData data}.
           *
           * Data containing dimensions and measures. The format and structure of this data is depends on the chart.
           */
          getData(): object;
          /**
           * Returns a metadata object for class sap.viz.ui5.data.CustomDataset.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Sets a new value for property {@link #getData data}.
           *
           * Data containing dimensions and measures. The format and structure of this data is depends on the chart.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setData(
            /**
             * New value for property `data`
             */
            oData: object
          ): sap.viz.ui5.data.CustomDataset;
        }
        /**
         * @SINCE 1.7.2
         *
         * Abstract Dataset implementation
         */
        class Dataset extends sap.ui.core.Element {
          /**
           * Constructor for a new ui5/data/Dataset.
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           *
           * This class does not have its own settings, but all settings applicable to the base type {@link sap.ui.core.Element#constructor
           * sap.ui.core.Element} can be used.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: DatasetOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.data.Dataset with name `sClassName` and enriches it with
           * the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Returns a metadata object for class sap.viz.ui5.data.Dataset.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
        }
        /**
         * @SINCE 1.7.2
         *
         * Definition of a single dimension in a dataset
         */
        class DimensionDefinition extends sap.ui.core.Element {
          /**
           * Constructor for a new ui5/data/DimensionDefinition.
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: DimensionDefinitionOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.data.DimensionDefinition with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getAxis axis}.
           *
           * Number of axis this dimension belongs to. Currently must be 1 or 2. Skip this property when use VizFrame.
           */
          getAxis(): number;
          /**
           * Gets current value of property {@link #getDataType dataType}.
           *
           * Data type of the dimension as displayed in the chart. Enumeration: string, number, date. Currently only
           * in time series chart, it is required to set data type to 'date' if this column is going to be fed on
           * 'timeAxis'.
           */
          getDataType(): string;
          /**
           * Gets current value of property {@link #getDisplayValue displayValue}.
           *
           * Display value for the dimension. Usually bound to some model field. It doesn't work with 'waterfallType'
           */
          getDisplayValue(): any;
          /**
           * Gets current value of property {@link #getIdentity identity}.
           *
           * Id of the dimension as displayed in the chart
           */
          getIdentity(): string;
          /**
           * Returns a metadata object for class sap.viz.ui5.data.DimensionDefinition.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getName name}.
           *
           * Name of the dimension as displayed in the chart
           */
          getName(): string;
          /**
           * Gets current value of property {@link #getSorter sorter}.
           *
           * `Sorter` Object of the dimension. There is a default comparator function, if no custom comparator is
           * given. The function returns -1, 0 or 1, depending on the order of the two items and is suitable to be
           * used as a comparator method for Array.sort. The object contains two entries:
           * 	 - `bDescending:`{boolean} (optional) define whether the sort order is descending. Default is false.
           *
           * 	 - `fnComparator:`{function} (optional) a user defined comparator function, which have two input values
           * 			to compare. The input value is an object, which contains value and displayValue (optional).
           */
          getSorter(): object;
          /**
           * Gets current value of property {@link #getValue value}.
           *
           * Value for the dimension. Usually bound to some model field.
           */
          getValue(): any;
          /**
           * Sets a new value for property {@link #getAxis axis}.
           *
           * Number of axis this dimension belongs to. Currently must be 1 or 2. Skip this property when use VizFrame.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setAxis(
            /**
             * New value for property `axis`
             */
            iAxis: number
          ): sap.viz.ui5.data.DimensionDefinition;
          /**
           * Sets a new value for property {@link #getDataType dataType}.
           *
           * Data type of the dimension as displayed in the chart. Enumeration: string, number, date. Currently only
           * in time series chart, it is required to set data type to 'date' if this column is going to be fed on
           * 'timeAxis'.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setDataType(
            /**
             * New value for property `dataType`
             */
            sDataType: string
          ): sap.viz.ui5.data.DimensionDefinition;
          /**
           * Sets a new value for property {@link #getDisplayValue displayValue}.
           *
           * Display value for the dimension. Usually bound to some model field. It doesn't work with 'waterfallType'
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setDisplayValue(
            /**
             * New value for property `displayValue`
             */
            oDisplayValue: any
          ): sap.viz.ui5.data.DimensionDefinition;
          /**
           * Sets a new value for property {@link #getIdentity identity}.
           *
           * Id of the dimension as displayed in the chart
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setIdentity(
            /**
             * New value for property `identity`
             */
            sIdentity: string
          ): sap.viz.ui5.data.DimensionDefinition;
          /**
           * Sets a new value for property {@link #getName name}.
           *
           * Name of the dimension as displayed in the chart
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setName(
            /**
             * New value for property `name`
             */
            sName: string
          ): sap.viz.ui5.data.DimensionDefinition;
          /**
           * Sets a new value for property {@link #getSorter sorter}.
           *
           * `Sorter` Object of the dimension. There is a default comparator function, if no custom comparator is
           * given. The function returns -1, 0 or 1, depending on the order of the two items and is suitable to be
           * used as a comparator method for Array.sort. The object contains two entries:
           * 	 - `bDescending:`{boolean} (optional) define whether the sort order is descending. Default is false.
           *
           * 	 - `fnComparator:`{function} (optional) a user defined comparator function, which have two input values
           * 			to compare. The input value is an object, which contains value and displayValue (optional).
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setSorter(
            /**
             * New value for property `sorter`
             */
            oSorter: object
          ): sap.viz.ui5.data.DimensionDefinition;
          /**
           * Sets a new value for property {@link #getValue value}.
           *
           * Value for the dimension. Usually bound to some model field.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setValue(
            /**
             * New value for property `value`
             */
            oValue: any
          ): sap.viz.ui5.data.DimensionDefinition;
        }
        /**
         * @SINCE 1.7.2
         *
         * A dataset for flattened (redundant) data using a tabular format.
         */
        class FlattenedDataset extends sap.viz.ui5.data.Dataset {
          /**
           * Constructor for a new ui5/data/FlattenedDataset.
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: FlattenedDatasetOpts
          );

          /**
           * Adds some data to the aggregation {@link #getData data}.
           */
          addData(
            /**
             * The data to add; if empty, nothing is inserted
             */
            oData: sap.ui.core.Element
          ): sap.viz.ui5.data.FlattenedDataset;
          /**
           * Adds some dimension to the aggregation {@link #getDimensions dimensions}.
           */
          addDimension(
            /**
             * The dimension to add; if empty, nothing is inserted
             */
            oDimension: sap.viz.ui5.data.DimensionDefinition
          ): sap.viz.ui5.data.FlattenedDataset;
          /**
           * Adds some measure to the aggregation {@link #getMeasures measures}.
           */
          addMeasure(
            /**
             * The measure to add; if empty, nothing is inserted
             */
            oMeasure: sap.viz.ui5.data.MeasureDefinition
          ): sap.viz.ui5.data.FlattenedDataset;
          /**
           * Attaches event handler `fnFunction` to the {@link #event:dataChange dataChange} event of this `sap.viz.ui5.data.FlattenedDataset`.
           *
           * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
           * otherwise it will be bound to this `sap.viz.ui5.data.FlattenedDataset` itself.
           *
           * data change event
           */
          attachDataChange(
            /**
             * An application-specific payload object that will be passed to the event handler along with the event
             * object when firing the event
             */
            oData: object,
            /**
             * The function to be called when the event occurs
             */
            fnFunction: Function,
            /**
             * Context object to call the event handler with. Defaults to this `sap.viz.ui5.data.FlattenedDataset` itself
             */
            oListener?: object
          ): sap.viz.ui5.data.FlattenedDataset;
          /**
           * Attaches event handler `fnFunction` to the {@link #event:dataError dataError} event of this `sap.viz.ui5.data.FlattenedDataset`.
           *
           * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
           * otherwise it will be bound to this `sap.viz.ui5.data.FlattenedDataset` itself.
           *
           * data error event
           */
          attachDataError(
            /**
             * An application-specific payload object that will be passed to the event handler along with the event
             * object when firing the event
             */
            oData: object,
            /**
             * The function to be called when the event occurs
             */
            fnFunction: Function,
            /**
             * Context object to call the event handler with. Defaults to this `sap.viz.ui5.data.FlattenedDataset` itself
             */
            oListener?: object
          ): sap.viz.ui5.data.FlattenedDataset;
          /**
           * Attaches event handler `fnFunction` to the {@link #event:dataRefresh dataRefresh} event of this `sap.viz.ui5.data.FlattenedDataset`.
           *
           * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
           * otherwise it will be bound to this `sap.viz.ui5.data.FlattenedDataset` itself.
           *
           * data refresh event
           */
          attachDataRefresh(
            /**
             * An application-specific payload object that will be passed to the event handler along with the event
             * object when firing the event
             */
            oData: object,
            /**
             * The function to be called when the event occurs
             */
            fnFunction: Function,
            /**
             * Context object to call the event handler with. Defaults to this `sap.viz.ui5.data.FlattenedDataset` itself
             */
            oListener?: object
          ): sap.viz.ui5.data.FlattenedDataset;
          /**
           * Binds aggregation {@link #getData data} to model data.
           *
           * See {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description
           * of the possible properties of `oBindingInfo`.
           */
          bindData(
            /**
             * The binding information
             */
            oBindingInfo: object
          ): sap.viz.ui5.data.FlattenedDataset;
          /**
           * Destroys all the data in the aggregation {@link #getData data}.
           */
          destroyData(): sap.viz.ui5.data.FlattenedDataset;
          /**
           * Destroys all the dimensions in the aggregation {@link #getDimensions dimensions}.
           */
          destroyDimensions(): sap.viz.ui5.data.FlattenedDataset;
          /**
           * Destroys all the measures in the aggregation {@link #getMeasures measures}.
           */
          destroyMeasures(): sap.viz.ui5.data.FlattenedDataset;
          /**
           * Detaches event handler `fnFunction` from the {@link #event:dataChange dataChange} event of this `sap.viz.ui5.data.FlattenedDataset`.
           *
           * The passed function and listener object must match the ones used for event registration.
           */
          detachDataChange(
            /**
             * The function to be called, when the event occurs
             */
            fnFunction: Function,
            /**
             * Context object on which the given function had to be called
             */
            oListener?: object
          ): sap.viz.ui5.data.FlattenedDataset;
          /**
           * Detaches event handler `fnFunction` from the {@link #event:dataError dataError} event of this `sap.viz.ui5.data.FlattenedDataset`.
           *
           * The passed function and listener object must match the ones used for event registration.
           */
          detachDataError(
            /**
             * The function to be called, when the event occurs
             */
            fnFunction: Function,
            /**
             * Context object on which the given function had to be called
             */
            oListener?: object
          ): sap.viz.ui5.data.FlattenedDataset;
          /**
           * Detaches event handler `fnFunction` from the {@link #event:dataRefresh dataRefresh} event of this `sap.viz.ui5.data.FlattenedDataset`.
           *
           * The passed function and listener object must match the ones used for event registration.
           */
          detachDataRefresh(
            /**
             * The function to be called, when the event occurs
             */
            fnFunction: Function,
            /**
             * Context object on which the given function had to be called
             */
            oListener?: object
          ): sap.viz.ui5.data.FlattenedDataset;
          /**
           * Creates a new subclass of class sap.viz.ui5.data.FlattenedDataset with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.data.Dataset.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Fires event {@link #event:dataChange dataChange} to attached listeners.
           */
          fireDataChange(
            /**
             * Parameters to pass along with the event
             */
            mParameters?: object
          ): sap.viz.ui5.data.FlattenedDataset;
          /**
           * Fires event {@link #event:dataError dataError} to attached listeners.
           */
          fireDataError(
            /**
             * Parameters to pass along with the event
             */
            mParameters?: object
          ): sap.viz.ui5.data.FlattenedDataset;
          /**
           * Fires event {@link #event:dataRefresh dataRefresh} to attached listeners.
           */
          fireDataRefresh(
            /**
             * Parameters to pass along with the event
             */
            mParameters?: object
          ): sap.viz.ui5.data.FlattenedDataset;
          /**
           * Gets current value of property {@link #getContext context}.
           *
           * Additional data which works with data context in this dataset. The input could be an array. Each item
           * represents a dimension that is added as the additional information based on data context. The input could
           * be a string of dimension id, or object like this {id: "name", showInTooltip: true}. If showInTooltip
           * is false, the dimensions set in this API will not show in popover or tooltip. However other dimensions
           * in data context will show. In selection event, all dimension information (including the dimension set
           * in this API) will be included. Context will be shown by default in tooltip if only set context with string
           * or string of array.
           */
          getContext(): any;
          /**
           * Gets content of aggregation {@link #getData data}.
           *
           * Data containing dimensions and measures.
           *
           * **Note:** This aggregation can only be bound against a model, it cannot be managed programmatically using
           * the aggregation mutator methods like addData.
           */
          getData(): sap.ui.core.Element[];
          /**
           * Gets content of aggregation {@link #getDimensions dimensions}.
           *
           * List of definitions of all dimensions in this dataset
           */
          getDimensions(): sap.viz.ui5.data.DimensionDefinition[];
          /**
           * Gets content of aggregation {@link #getMeasures measures}.
           *
           * list of definitions of all measures in this dataset
           */
          getMeasures(): sap.viz.ui5.data.MeasureDefinition[];
          /**
           * Returns a metadata object for class sap.viz.ui5.data.FlattenedDataset.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Checks for the provided `sap.ui.core.Element` in the aggregation {@link #getData data}. and returns its
           * index if found or -1 otherwise.
           */
          indexOfData(
            /**
             * The data whose index is looked for
             */
            oData: sap.ui.core.Element
          ): number;
          /**
           * Checks for the provided `sap.viz.ui5.data.DimensionDefinition` in the aggregation {@link #getDimensions
           * dimensions}. and returns its index if found or -1 otherwise.
           */
          indexOfDimension(
            /**
             * The dimension whose index is looked for
             */
            oDimension: sap.viz.ui5.data.DimensionDefinition
          ): number;
          /**
           * Checks for the provided `sap.viz.ui5.data.MeasureDefinition` in the aggregation {@link #getMeasures measures}.
           * and returns its index if found or -1 otherwise.
           */
          indexOfMeasure(
            /**
             * The measure whose index is looked for
             */
            oMeasure: sap.viz.ui5.data.MeasureDefinition
          ): number;
          /**
           * Inserts a data into the aggregation {@link #getData data}.
           */
          insertData(
            /**
             * The data to insert; if empty, nothing is inserted
             */
            oData: sap.ui.core.Element,
            /**
             * The `0`-based index the data should be inserted at; for a negative value of `iIndex`, the data is inserted
             * at position 0; for a value greater than the current size of the aggregation, the data is inserted at
             * the last position
             */
            iIndex: number
          ): sap.viz.ui5.data.FlattenedDataset;
          /**
           * Inserts a dimension into the aggregation {@link #getDimensions dimensions}.
           */
          insertDimension(
            /**
             * The dimension to insert; if empty, nothing is inserted
             */
            oDimension: sap.viz.ui5.data.DimensionDefinition,
            /**
             * The `0`-based index the dimension should be inserted at; for a negative value of `iIndex`, the dimension
             * is inserted at position 0; for a value greater than the current size of the aggregation, the dimension
             * is inserted at the last position
             */
            iIndex: number
          ): sap.viz.ui5.data.FlattenedDataset;
          /**
           * Inserts a measure into the aggregation {@link #getMeasures measures}.
           */
          insertMeasure(
            /**
             * The measure to insert; if empty, nothing is inserted
             */
            oMeasure: sap.viz.ui5.data.MeasureDefinition,
            /**
             * The `0`-based index the measure should be inserted at; for a negative value of `iIndex`, the measure
             * is inserted at position 0; for a value greater than the current size of the aggregation, the measure
             * is inserted at the last position
             */
            iIndex: number
          ): sap.viz.ui5.data.FlattenedDataset;
          /**
           * Removes all the controls from the aggregation {@link #getData data}.
           *
           * Additionally, it unregisters them from the hosting UIArea.
           */
          removeAllData(): sap.ui.core.Element[];
          /**
           * Removes all the controls from the aggregation {@link #getDimensions dimensions}.
           *
           * Additionally, it unregisters them from the hosting UIArea.
           */
          removeAllDimensions(): sap.viz.ui5.data.DimensionDefinition[];
          /**
           * Removes all the controls from the aggregation {@link #getMeasures measures}.
           *
           * Additionally, it unregisters them from the hosting UIArea.
           */
          removeAllMeasures(): sap.viz.ui5.data.MeasureDefinition[];
          /**
           * Removes a data from the aggregation {@link #getData data}.
           */
          removeData(
            /**
             * The data to remove or its index or id
             */
            vData: number | string | sap.ui.core.Element
          ): sap.ui.core.Element;
          /**
           * Removes a dimension from the aggregation {@link #getDimensions dimensions}.
           */
          removeDimension(
            /**
             * The dimension to remove or its index or id
             */
            vDimension: number | string | sap.viz.ui5.data.DimensionDefinition
          ): sap.viz.ui5.data.DimensionDefinition;
          /**
           * Removes a measure from the aggregation {@link #getMeasures measures}.
           */
          removeMeasure(
            /**
             * The measure to remove or its index or id
             */
            vMeasure: number | string | sap.viz.ui5.data.MeasureDefinition
          ): sap.viz.ui5.data.MeasureDefinition;
          /**
           * Sets a new value for property {@link #getContext context}.
           *
           * Additional data which works with data context in this dataset. The input could be an array. Each item
           * represents a dimension that is added as the additional information based on data context. The input could
           * be a string of dimension id, or object like this {id: "name", showInTooltip: true}. If showInTooltip
           * is false, the dimensions set in this API will not show in popover or tooltip. However other dimensions
           * in data context will show. In selection event, all dimension information (including the dimension set
           * in this API) will be included. Context will be shown by default in tooltip if only set context with string
           * or string of array.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setContext(
            /**
             * New value for property `context`
             */
            oContext: any
          ): sap.viz.ui5.data.FlattenedDataset;
          /**
           * Unbinds aggregation {@link #getData data} from model data.
           */
          unbindData(): sap.viz.ui5.data.FlattenedDataset;
          /**
           * Attaches event handler `fnFunction` to the {@link #event:dataChange dataChange} event of this `sap.viz.ui5.data.FlattenedDataset`.
           *
           * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
           * otherwise it will be bound to this `sap.viz.ui5.data.FlattenedDataset` itself.
           *
           * data change event
           */
          attachDataChange(
            /**
             * The function to be called when the event occurs
             */
            fnFunction: Function,
            /**
             * Context object to call the event handler with. Defaults to this `sap.viz.ui5.data.FlattenedDataset` itself
             */
            oListener?: object
          ): sap.viz.ui5.data.FlattenedDataset;
          /**
           * Attaches event handler `fnFunction` to the {@link #event:dataError dataError} event of this `sap.viz.ui5.data.FlattenedDataset`.
           *
           * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
           * otherwise it will be bound to this `sap.viz.ui5.data.FlattenedDataset` itself.
           *
           * data error event
           */
          attachDataError(
            /**
             * The function to be called when the event occurs
             */
            fnFunction: Function,
            /**
             * Context object to call the event handler with. Defaults to this `sap.viz.ui5.data.FlattenedDataset` itself
             */
            oListener?: object
          ): sap.viz.ui5.data.FlattenedDataset;
          /**
           * Attaches event handler `fnFunction` to the {@link #event:dataRefresh dataRefresh} event of this `sap.viz.ui5.data.FlattenedDataset`.
           *
           * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
           * otherwise it will be bound to this `sap.viz.ui5.data.FlattenedDataset` itself.
           *
           * data refresh event
           */
          attachDataRefresh(
            /**
             * The function to be called when the event occurs
             */
            fnFunction: Function,
            /**
             * Context object to call the event handler with. Defaults to this `sap.viz.ui5.data.FlattenedDataset` itself
             */
            oListener?: object
          ): sap.viz.ui5.data.FlattenedDataset;
        }
        /**
         * @SINCE 1.7.2
         *
         * Definition of a single Measure
         */
        class MeasureDefinition extends sap.ui.core.Element {
          /**
           * Constructor for a new ui5/data/MeasureDefinition.
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: MeasureDefinitionOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.data.MeasureDefinition with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getFormat format}.
           *
           * Format pattern for values of the measure
           */
          getFormat(): any;
          /**
           * Gets current value of property {@link #getGroup group}.
           *
           * Measure group this measure belongs to. Order is significant, number should start from 1. Skip this property
           * when use VizFrame.
           *
           * Default value is `1`.
           */
          getGroup(): number;
          /**
           * Gets current value of property {@link #getIdentity identity}.
           *
           * Id of the measure as displayed in the chart
           */
          getIdentity(): string;
          /**
           * Returns a metadata object for class sap.viz.ui5.data.MeasureDefinition.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getName name}.
           *
           * Name of the measure as displayed in the chart
           */
          getName(): string;
          /**
           * Gets current value of property {@link #getRange range}.
           *
           * Value range
           *
           * Default value is `[]`.
           */
          getRange(): any[];
          /**
           * Gets current value of property {@link #getUnit unit}.
           *
           * Unit of measure
           */
          getUnit(): string;
          /**
           * Gets current value of property {@link #getValue value}.
           *
           * Value for the measure. Usually bound to some model field.
           */
          getValue(): any;
          /**
           * Sets a new value for property {@link #getFormat format}.
           *
           * Format pattern for values of the measure
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setFormat(
            /**
             * New value for property `format`
             */
            oFormat: any
          ): sap.viz.ui5.data.MeasureDefinition;
          /**
           * Sets a new value for property {@link #getGroup group}.
           *
           * Measure group this measure belongs to. Order is significant, number should start from 1. Skip this property
           * when use VizFrame.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `1`.
           */
          setGroup(
            /**
             * New value for property `group`
             */
            iGroup: number
          ): sap.viz.ui5.data.MeasureDefinition;
          /**
           * Sets a new value for property {@link #getIdentity identity}.
           *
           * Id of the measure as displayed in the chart
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setIdentity(
            /**
             * New value for property `identity`
             */
            sIdentity: string
          ): sap.viz.ui5.data.MeasureDefinition;
          /**
           * Sets a new value for property {@link #getName name}.
           *
           * Name of the measure as displayed in the chart
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setName(
            /**
             * New value for property `name`
             */
            sName: string
          ): sap.viz.ui5.data.MeasureDefinition;
          /**
           * Sets a new value for property {@link #getRange range}.
           *
           * Value range
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `[]`.
           */
          setRange(
            /**
             * New value for property `range`
             */
            sRange: any[]
          ): sap.viz.ui5.data.MeasureDefinition;
          /**
           * Sets a new value for property {@link #getUnit unit}.
           *
           * Unit of measure
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setUnit(
            /**
             * New value for property `unit`
             */
            sUnit: string
          ): sap.viz.ui5.data.MeasureDefinition;
          /**
           * Sets a new value for property {@link #getValue value}.
           *
           * Value for the measure. Usually bound to some model field.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setValue(
            /**
             * New value for property `value`
             */
            oValue: any
          ): sap.viz.ui5.data.MeasureDefinition;
        }
      }

      namespace format {
        /**
         * Provides methods set chart formatter for VizFrame.
         */
        namespace ChartFormatter {
          /**
           * Format the value according to the custom format function
           */
          function format(): void;
          /**
           * Get an instance of ChartFormatter
           */
          function getInstance(): void;

          /**
           * List (Enum) type sap.viz.ui5.format.ChartFormatter.DefaultPattern
           */
          enum DefaultPattern {
            /**
             * Binary file size
             *
             * e.g. 1 Kibibyte = 1024 Byte
             */
            BINARYFILESIZE,
            /**
             * @deprecated (since 1.48.0)
             *
             * type: Currency
             *
             * style: "standard"
             *
             * e.g. 234234.234 is formatted as 234,234.23
             */
            CURRENCY,
            /**
             * Decimal file size
             *
             * e.g. 1 Kilobyte = 1000 Byte
             */
            DECIMALFILESIZE,
            /**
             * type: Float
             *
             * style: "long"
             *
             * e.g. 2.3 million
             */
            LONGFLOAT,
            /**
             * Medium day
             *
             * e.g. 01
             */
            MEDIUMDAY,
            /**
             * Medium hour
             *
             * e.g. 18
             */
            MEDIUMHOUR,
            /**
             * Medium minute
             *
             * e.g. 18
             */
            MEDIUMMINUTE,
            /**
             * Medium month
             *
             * e.g. Aug
             */
            MEDIUMMONTH,
            /**
             * Medium quarter
             *
             * e.g. Q3
             */
            MEDIUMQUARTER,
            /**
             * Medium second
             *
             * e.g. 59
             */
            MEDIUMSECOND,
            /**
             * Medium week
             *
             * e.g. CW35
             */
            MEDIUMWEEK,
            /**
             * Medium year
             *
             * e.g. 2015
             */
            MEDIUMYEAR,
            /**
             * Medium format pattern for combination of year, month, and day
             *
             * e.g. Aug 28, 2015
             */
            MEDIUMYEARMONTHDAY,
            /**
             * @deprecated (since 1.48.0)
             *
             * type: Percentage
             *
             * style: "standard"
             *
             * e.g. 0.0234 is formatted as 2.34%
             */
            PERCENT,
            /**
             * @deprecated (since 1.48.0)
             *
             * Quarter
             *
             * e.g. Q3
             */
            QUARTER,
            /**
             * type: Float
             *
             * style: "short"
             *
             * e.g. 2.3M
             */
            SHORTFLOAT,
            /**
             * type: Float
             *
             * style: "short"
             *
             * maxFractionDigits: 2
             *
             * e.g. 2.34234234 is formatted as 2.34
             */
            SHORTFLOAT_MFD2,
            /**
             * type: Integer
             *
             * style: "short"
             *
             * e.g. 234M
             */
            SHORTINTEGER,
            /**
             * type: Currency
             *
             * style: "standard"
             *
             * e.g. 234234.234 is formatted as 234,234.23
             */
            STANDARDCURRENCY,
            /**
             * type: Float
             *
             * style: "standard"
             *
             * e.g. 234,234.234
             */
            STANDARDFLOAT,
            /**
             * type: Integer
             *
             * style: "standard"
             *
             * e.g. 234234234
             */
            STANDARDINTEGER,
            /**
             * type: Percentage
             *
             * style: "standard"
             *
             * e.g. 0.0234234 is formatted as 2.34234%
             */
            STANDARDPERCENT,
            /**
             * type: Percentage
             *
             * style: "standard"
             *
             * maxFractionDigits: 2
             *
             * e.g. 0.0234234 is formatted as 2.34%
             */
            STANDARDPERCENT_MFD2,
            /**
             * @deprecated (since 1.48.0)
             *
             * Week
             *
             * e.g. CW35
             */
            WEEK,
            /**
             * @deprecated (since 1.48.0)
             *
             * Format pattern for combination of year, month, and day
             *
             * e.g. Aug 28, 2015
             */
            YEARMONTHDAY
          }
        }
      }

      namespace types {
        namespace controller {
          interface InteractionOpts
            extends sap.viz.ui5.core.BaseStructuredTypeOpts {
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Set supported event names
             */
            supportedEventNames?: string[];

            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Set whether mouse move is enabled
             */
            enableMouseMove?: boolean;

            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Set whether mouse over is enabled
             */
            enableMouseOver?: boolean;

            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Set whether mouse out is enabled
             */
            enableMouseOut?: boolean;

            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Set whether support lasso event is enabled
             */
            supportLassoEvent?: boolean;

            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Set whether hold selection is enabled
             */
            holdSelection?: boolean;

            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Set whether preserve selection when dragging is enabled
             */
            preserveSelectionWhenDragging?: boolean;

            /**
             * Set decorations relating to interaction. Each item that is an object of {name: 'decoration name', fn:
             * 'decoration callback function'} is a decoration. Currently two decorations are supported: showDetail
             * and hideDetail. These two decorations can be used to create a user-defined tooltip.
             *
             * If these 2 decorations are used, the default tooltip is not used, and the user should implement a custom
             * tooltip. The showDetail decoration is called when the tooltip is shown, and the hideDetail decoration
             * is called when the tooltip is hidden.
             *
             * The arguments of showDetail are one object of {mode: 'tooltip mode', data: 'data of hovering selected
             * data point', position: 'mouse position', container: 'chart container dom element', selectedNumber: 'number
             * of selected data points'}. 'tooltip mode' is either 'infoMode' or 'actionMode'. Hovering over an unselected
             * data point displays the infoMode tooltip, while hovering over a selected data point displays the actionMode
             * tooltip. 'data' is an array of dimensions and measures, where each item is an object of {name: 'dimension
             * name or measure name', value: 'dimension member or measure value', type: 'literal string of dimension
             * or measure'}. For instance, {name: 'Country', value: 'China', type: 'dimension'}, or {name: 'Profit',
             * value: 159, type: 'measure'}.
             *
             * The arguments of hideDetail are a string representing tooltip mode, i.e. what kind of tooltip should
             * be hidden.
             */
            decorations?: any;

            /**
             * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Set triggers for behavior decration.
             */
            triggers?: any;

            /**
             * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Set handlers for behavior decration.
             */
            handlers?: any;

            /**
             * Settings for selectability
             */
            selectability?: sap.viz.ui5.types.controller.Interaction_selectability;

            /**
             * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * add documentation for aggregation pan
             */
            pan?: sap.viz.ui5.types.controller.Interaction_pan;
          }

          interface Interaction_panOpts
            extends sap.viz.ui5.core.BaseStructuredTypeOpts {
            /**
             * Enable/disable pan
             */
            enable?: boolean;

            /**
             * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Set orientation of pan
             */
            orientation?: sap.viz.ui5.types.controller.Interaction_pan_orientation;
          }

          interface Interaction_selectabilityOpts
            extends sap.viz.ui5.core.BaseStructuredTypeOpts {
            /**
             * Set the selection mode. If this value is set to 'exclusive' or 'single', only one set of data points
             * can be selected at once. If this value is set to 'inclusive' or 'multiple', multiple sets of data points
             * can be selected at once. If this value is set to 'none', no sets of data points can be selected. The
             * values 'single' and 'multiple' are deprecated; please remove them from your chart.
             */
            mode?: sap.viz.ui5.types.controller.Interaction_selectability_mode;

            /**
             * Set whether axis labels can be selected
             */
            axisLabelSelection?: boolean;

            /**
             * Set whether the legend can be selected
             */
            legendSelection?: boolean;

            /**
             * Set whether lasso selection can be used in the plot area
             */
            plotLassoSelection?: boolean;

            /**
             * Set whether selection can be done in the plot area by clicking and tapping
             */
            plotStdSelection?: boolean;

            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Set whether the user must hold the ctrl key to use lasso selection
             */
            lassoWithCtrlKey?: boolean;

            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Set whether data points can be cached. If it's true, data points might be cached by Interaction for better
             * performance.
             */
            dataPointsCacheable?: boolean;
          }
          /**
           * @SINCE 1.7.2
           * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
           * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
           * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
           * distribution for backward compatibility.
           *
           * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
           * VizFrame} control to benefit from new charting enhancements and timely support. **
           *
           * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
           * make sure you evaluate it thoroughly before migration.
           * @EXPERIMENTAL (since 1.7.2)
           *
           * Module sap.viz.ui5.types.controller.Interaction
           */
          class Interaction extends sap.viz.ui5.core.BaseStructuredType {
            /**
             * Constructor for a new sap.viz.ui5.types.controller.Interaction
             *
             * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
             * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
             * of the syntax of the settings object.
             */
            constructor(
              /**
               * id for the new control, generated automatically if no id is given
               */
              sId?: string,
              /**
               * initial settings for the new control
               */
              mSettings?: InteractionOpts
            );

            /**
             * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Destroys the pan in the aggregation {@link #getPan pan}.
             */
            destroyPan(): sap.viz.ui5.types.controller.Interaction;
            /**
             * Destroys the selectability in the aggregation {@link #getSelectability selectability}.
             */
            destroySelectability(): sap.viz.ui5.types.controller.Interaction;
            /**
             * Creates a new subclass of class sap.viz.ui5.types.controller.Interaction with name `sClassName` and enriches
             * it with the information contained in `oClassInfo`.
             *
             * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
             */
            // @ts-ignore
            static extend(
              /**
               * Name of the class being created
               */
              sClassName: string,
              /**
               * Object literal with information about the class
               */
              oClassInfo?: object,
              /**
               * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
               */
              FNMetaImpl?: Function
            ): Function;
            /**
             * Gets current value of property {@link #getDecorations decorations}.
             *
             * Set decorations relating to interaction. Each item that is an object of {name: 'decoration name', fn:
             * 'decoration callback function'} is a decoration. Currently two decorations are supported: showDetail
             * and hideDetail. These two decorations can be used to create a user-defined tooltip.
             *
             * If these 2 decorations are used, the default tooltip is not used, and the user should implement a custom
             * tooltip. The showDetail decoration is called when the tooltip is shown, and the hideDetail decoration
             * is called when the tooltip is hidden.
             *
             * The arguments of showDetail are one object of {mode: 'tooltip mode', data: 'data of hovering selected
             * data point', position: 'mouse position', container: 'chart container dom element', selectedNumber: 'number
             * of selected data points'}. 'tooltip mode' is either 'infoMode' or 'actionMode'. Hovering over an unselected
             * data point displays the infoMode tooltip, while hovering over a selected data point displays the actionMode
             * tooltip. 'data' is an array of dimensions and measures, where each item is an object of {name: 'dimension
             * name or measure name', value: 'dimension member or measure value', type: 'literal string of dimension
             * or measure'}. For instance, {name: 'Country', value: 'China', type: 'dimension'}, or {name: 'Profit',
             * value: 159, type: 'measure'}.
             *
             * The arguments of hideDetail are a string representing tooltip mode, i.e. what kind of tooltip should
             * be hidden.
             */
            getDecorations(): any;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Gets current value of property {@link #getEnableMouseMove enableMouseMove}.
             *
             * Set whether mouse move is enabled
             *
             * Default value is `true`.
             */
            getEnableMouseMove(): boolean;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Gets current value of property {@link #getEnableMouseOut enableMouseOut}.
             *
             * Set whether mouse out is enabled
             *
             * Default value is `true`.
             */
            getEnableMouseOut(): boolean;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Gets current value of property {@link #getEnableMouseOver enableMouseOver}.
             *
             * Set whether mouse over is enabled
             *
             * Default value is `true`.
             */
            getEnableMouseOver(): boolean;
            /**
             * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Gets current value of property {@link #getHandlers handlers}.
             *
             * Set handlers for behavior decration.
             */
            getHandlers(): any;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Gets current value of property {@link #getHoldSelection holdSelection}.
             *
             * Set whether hold selection is enabled
             *
             * Default value is `false`.
             */
            getHoldSelection(): boolean;
            /**
             * Returns a metadata object for class sap.viz.ui5.types.controller.Interaction.
             */
            // @ts-ignore
            static getMetadata(): sap.ui.base.Metadata;
            /**
             * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Gets content of aggregation {@link #getPan pan}.
             *
             * add documentation for aggregation pan
             */
            getPan(): sap.viz.ui5.types.controller.Interaction_pan;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Gets current value of property {@link #getPreserveSelectionWhenDragging preserveSelectionWhenDragging}.
             *
             * Set whether preserve selection when dragging is enabled
             *
             * Default value is `false`.
             */
            getPreserveSelectionWhenDragging(): boolean;
            /**
             * Gets content of aggregation {@link #getSelectability selectability}.
             *
             * Settings for selectability
             */
            getSelectability(): sap.viz.ui5.types.controller.Interaction_selectability;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Gets current value of property {@link #getSupportedEventNames supportedEventNames}.
             *
             * Set supported event names
             *
             * Default value is `mouseup,mousedown,mousemove,mouseout,mouseover,touchstart`.
             */
            getSupportedEventNames(): string[];
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Gets current value of property {@link #getSupportLassoEvent supportLassoEvent}.
             *
             * Set whether support lasso event is enabled
             *
             * Default value is `true`.
             */
            getSupportLassoEvent(): boolean;
            /**
             * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Gets current value of property {@link #getTriggers triggers}.
             *
             * Set triggers for behavior decration.
             */
            getTriggers(): any;
            /**
             * Sets a new value for property {@link #getDecorations decorations}.
             *
             * Set decorations relating to interaction. Each item that is an object of {name: 'decoration name', fn:
             * 'decoration callback function'} is a decoration. Currently two decorations are supported: showDetail
             * and hideDetail. These two decorations can be used to create a user-defined tooltip.
             *
             * If these 2 decorations are used, the default tooltip is not used, and the user should implement a custom
             * tooltip. The showDetail decoration is called when the tooltip is shown, and the hideDetail decoration
             * is called when the tooltip is hidden.
             *
             * The arguments of showDetail are one object of {mode: 'tooltip mode', data: 'data of hovering selected
             * data point', position: 'mouse position', container: 'chart container dom element', selectedNumber: 'number
             * of selected data points'}. 'tooltip mode' is either 'infoMode' or 'actionMode'. Hovering over an unselected
             * data point displays the infoMode tooltip, while hovering over a selected data point displays the actionMode
             * tooltip. 'data' is an array of dimensions and measures, where each item is an object of {name: 'dimension
             * name or measure name', value: 'dimension member or measure value', type: 'literal string of dimension
             * or measure'}. For instance, {name: 'Country', value: 'China', type: 'dimension'}, or {name: 'Profit',
             * value: 159, type: 'measure'}.
             *
             * The arguments of hideDetail are a string representing tooltip mode, i.e. what kind of tooltip should
             * be hidden.
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             */
            setDecorations(
              /**
               * New value for property `decorations`
               */
              oDecorations: any
            ): sap.viz.ui5.types.controller.Interaction;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Sets a new value for property {@link #getEnableMouseMove enableMouseMove}.
             *
             * Set whether mouse move is enabled
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `true`.
             */
            setEnableMouseMove(
              /**
               * New value for property `enableMouseMove`
               */
              bEnableMouseMove: boolean
            ): sap.viz.ui5.types.controller.Interaction;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Sets a new value for property {@link #getEnableMouseOut enableMouseOut}.
             *
             * Set whether mouse out is enabled
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `true`.
             */
            setEnableMouseOut(
              /**
               * New value for property `enableMouseOut`
               */
              bEnableMouseOut: boolean
            ): sap.viz.ui5.types.controller.Interaction;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Sets a new value for property {@link #getEnableMouseOver enableMouseOver}.
             *
             * Set whether mouse over is enabled
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `true`.
             */
            setEnableMouseOver(
              /**
               * New value for property `enableMouseOver`
               */
              bEnableMouseOver: boolean
            ): sap.viz.ui5.types.controller.Interaction;
            /**
             * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Sets a new value for property {@link #getHandlers handlers}.
             *
             * Set handlers for behavior decration.
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             */
            setHandlers(
              /**
               * New value for property `handlers`
               */
              oHandlers: any
            ): sap.viz.ui5.types.controller.Interaction;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Sets a new value for property {@link #getHoldSelection holdSelection}.
             *
             * Set whether hold selection is enabled
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `false`.
             */
            setHoldSelection(
              /**
               * New value for property `holdSelection`
               */
              bHoldSelection: boolean
            ): sap.viz.ui5.types.controller.Interaction;
            /**
             * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Sets the aggregated {@link #getPan pan}.
             */
            setPan(
              /**
               * The pan to set
               */
              oPan: sap.viz.ui5.types.controller.Interaction_pan
            ): sap.viz.ui5.types.controller.Interaction;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Sets a new value for property {@link #getPreserveSelectionWhenDragging preserveSelectionWhenDragging}.
             *
             * Set whether preserve selection when dragging is enabled
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `false`.
             */
            setPreserveSelectionWhenDragging(
              /**
               * New value for property `preserveSelectionWhenDragging`
               */
              bPreserveSelectionWhenDragging: boolean
            ): sap.viz.ui5.types.controller.Interaction;
            /**
             * Sets the aggregated {@link #getSelectability selectability}.
             */
            setSelectability(
              /**
               * The selectability to set
               */
              oSelectability: sap.viz.ui5.types.controller.Interaction_selectability
            ): sap.viz.ui5.types.controller.Interaction;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Sets a new value for property {@link #getSupportedEventNames supportedEventNames}.
             *
             * Set supported event names
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `mouseup,mousedown,mousemove,mouseout,mouseover,touchstart`.
             */
            setSupportedEventNames(
              /**
               * New value for property `supportedEventNames`
               */
              sSupportedEventNames: string[]
            ): sap.viz.ui5.types.controller.Interaction;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Sets a new value for property {@link #getSupportLassoEvent supportLassoEvent}.
             *
             * Set whether support lasso event is enabled
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `true`.
             */
            setSupportLassoEvent(
              /**
               * New value for property `supportLassoEvent`
               */
              bSupportLassoEvent: boolean
            ): sap.viz.ui5.types.controller.Interaction;
            /**
             * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Sets a new value for property {@link #getTriggers triggers}.
             *
             * Set triggers for behavior decration.
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             */
            setTriggers(
              /**
               * New value for property `triggers`
               */
              oTriggers: any
            ): sap.viz.ui5.types.controller.Interaction;
          }
          /**
           * @SINCE 1.7.2
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Structured Type sap.viz.ui5.types.controller.Interaction_pan
           */
          class Interaction_pan extends sap.viz.ui5.core.BaseStructuredType {
            /**
             * Constructor for a new sap.viz.ui5.types.controller.Interaction_pan
             *
             * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
             * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
             * of the syntax of the settings object.
             */
            constructor(
              /**
               * id for the new control, generated automatically if no id is given
               */
              sId?: string,
              /**
               * initial settings for the new control
               */
              mSettings?: Interaction_panOpts
            );

            /**
             * Creates a new subclass of class sap.viz.ui5.types.controller.Interaction_pan with name `sClassName` and
             * enriches it with the information contained in `oClassInfo`.
             *
             * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
             */
            // @ts-ignore
            static extend(
              /**
               * Name of the class being created
               */
              sClassName: string,
              /**
               * Object literal with information about the class
               */
              oClassInfo?: object,
              /**
               * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
               */
              FNMetaImpl?: Function
            ): Function;
            /**
             * Gets current value of property {@link #getEnable enable}.
             *
             * Enable/disable pan
             *
             * Default value is `true`.
             */
            getEnable(): boolean;
            /**
             * Returns a metadata object for class sap.viz.ui5.types.controller.Interaction_pan.
             */
            // @ts-ignore
            static getMetadata(): sap.ui.base.Metadata;
            /**
             * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Gets current value of property {@link #getOrientation orientation}.
             *
             * Set orientation of pan
             *
             * Default value is `both`.
             */
            getOrientation(): sap.viz.ui5.types.controller.Interaction_pan_orientation;
            /**
             * Sets a new value for property {@link #getEnable enable}.
             *
             * Enable/disable pan
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `true`.
             */
            setEnable(
              /**
               * New value for property `enable`
               */
              bEnable: boolean
            ): sap.viz.ui5.types.controller.Interaction_pan;
            /**
             * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Sets a new value for property {@link #getOrientation orientation}.
             *
             * Set orientation of pan
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `both`.
             */
            setOrientation(
              /**
               * New value for property `orientation`
               */
              sOrientation: sap.viz.ui5.types.controller.Interaction_pan_orientation
            ): sap.viz.ui5.types.controller.Interaction_pan;
          }
          /**
           * @SINCE 1.7.2
           * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
           * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
           * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
           * distribution for backward compatibility.
           *
           * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
           * VizFrame} control to benefit from new charting enhancements and timely support. **
           *
           * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
           * make sure you evaluate it thoroughly before migration.
           * @EXPERIMENTAL (since 1.7.2)
           *
           * Settings for selectability
           */
          class Interaction_selectability extends sap.viz.ui5.core
            .BaseStructuredType {
            /**
             * Constructor for a new sap.viz.ui5.types.controller.Interaction_selectability
             *
             * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
             * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
             * of the syntax of the settings object.
             */
            constructor(
              /**
               * id for the new control, generated automatically if no id is given
               */
              sId?: string,
              /**
               * initial settings for the new control
               */
              mSettings?: Interaction_selectabilityOpts
            );

            /**
             * Creates a new subclass of class sap.viz.ui5.types.controller.Interaction_selectability with name `sClassName`
             * and enriches it with the information contained in `oClassInfo`.
             *
             * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
             */
            // @ts-ignore
            static extend(
              /**
               * Name of the class being created
               */
              sClassName: string,
              /**
               * Object literal with information about the class
               */
              oClassInfo?: object,
              /**
               * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
               */
              FNMetaImpl?: Function
            ): Function;
            /**
             * Gets current value of property {@link #getAxisLabelSelection axisLabelSelection}.
             *
             * Set whether axis labels can be selected
             *
             * Default value is `true`.
             */
            getAxisLabelSelection(): boolean;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Gets current value of property {@link #getDataPointsCacheable dataPointsCacheable}.
             *
             * Set whether data points can be cached. If it's true, data points might be cached by Interaction for better
             * performance.
             *
             * Default value is `true`.
             */
            getDataPointsCacheable(): boolean;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Gets current value of property {@link #getLassoWithCtrlKey lassoWithCtrlKey}.
             *
             * Set whether the user must hold the ctrl key to use lasso selection
             *
             * Default value is `false`.
             */
            getLassoWithCtrlKey(): boolean;
            /**
             * Gets current value of property {@link #getLegendSelection legendSelection}.
             *
             * Set whether the legend can be selected
             *
             * Default value is `true`.
             */
            getLegendSelection(): boolean;
            /**
             * Returns a metadata object for class sap.viz.ui5.types.controller.Interaction_selectability.
             */
            // @ts-ignore
            static getMetadata(): sap.ui.base.Metadata;
            /**
             * Gets current value of property {@link #getMode mode}.
             *
             * Set the selection mode. If this value is set to 'exclusive' or 'single', only one set of data points
             * can be selected at once. If this value is set to 'inclusive' or 'multiple', multiple sets of data points
             * can be selected at once. If this value is set to 'none', no sets of data points can be selected. The
             * values 'single' and 'multiple' are deprecated; please remove them from your chart.
             *
             * Default value is `inclusive`.
             */
            getMode(): sap.viz.ui5.types.controller.Interaction_selectability_mode;
            /**
             * Gets current value of property {@link #getPlotLassoSelection plotLassoSelection}.
             *
             * Set whether lasso selection can be used in the plot area
             *
             * Default value is `true`.
             */
            getPlotLassoSelection(): boolean;
            /**
             * Gets current value of property {@link #getPlotStdSelection plotStdSelection}.
             *
             * Set whether selection can be done in the plot area by clicking and tapping
             *
             * Default value is `true`.
             */
            getPlotStdSelection(): boolean;
            /**
             * Sets a new value for property {@link #getAxisLabelSelection axisLabelSelection}.
             *
             * Set whether axis labels can be selected
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `true`.
             */
            setAxisLabelSelection(
              /**
               * New value for property `axisLabelSelection`
               */
              bAxisLabelSelection: boolean
            ): sap.viz.ui5.types.controller.Interaction_selectability;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Sets a new value for property {@link #getDataPointsCacheable dataPointsCacheable}.
             *
             * Set whether data points can be cached. If it's true, data points might be cached by Interaction for better
             * performance.
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `true`.
             */
            setDataPointsCacheable(
              /**
               * New value for property `dataPointsCacheable`
               */
              bDataPointsCacheable: boolean
            ): sap.viz.ui5.types.controller.Interaction_selectability;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Sets a new value for property {@link #getLassoWithCtrlKey lassoWithCtrlKey}.
             *
             * Set whether the user must hold the ctrl key to use lasso selection
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `false`.
             */
            setLassoWithCtrlKey(
              /**
               * New value for property `lassoWithCtrlKey`
               */
              bLassoWithCtrlKey: boolean
            ): sap.viz.ui5.types.controller.Interaction_selectability;
            /**
             * Sets a new value for property {@link #getLegendSelection legendSelection}.
             *
             * Set whether the legend can be selected
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `true`.
             */
            setLegendSelection(
              /**
               * New value for property `legendSelection`
               */
              bLegendSelection: boolean
            ): sap.viz.ui5.types.controller.Interaction_selectability;
            /**
             * Sets a new value for property {@link #getMode mode}.
             *
             * Set the selection mode. If this value is set to 'exclusive' or 'single', only one set of data points
             * can be selected at once. If this value is set to 'inclusive' or 'multiple', multiple sets of data points
             * can be selected at once. If this value is set to 'none', no sets of data points can be selected. The
             * values 'single' and 'multiple' are deprecated; please remove them from your chart.
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `inclusive`.
             */
            setMode(
              /**
               * New value for property `mode`
               */
              sMode: sap.viz.ui5.types.controller.Interaction_selectability_mode
            ): sap.viz.ui5.types.controller.Interaction_selectability;
            /**
             * Sets a new value for property {@link #getPlotLassoSelection plotLassoSelection}.
             *
             * Set whether lasso selection can be used in the plot area
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `true`.
             */
            setPlotLassoSelection(
              /**
               * New value for property `plotLassoSelection`
               */
              bPlotLassoSelection: boolean
            ): sap.viz.ui5.types.controller.Interaction_selectability;
            /**
             * Sets a new value for property {@link #getPlotStdSelection plotStdSelection}.
             *
             * Set whether selection can be done in the plot area by clicking and tapping
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `true`.
             */
            setPlotStdSelection(
              /**
               * New value for property `plotStdSelection`
               */
              bPlotStdSelection: boolean
            ): sap.viz.ui5.types.controller.Interaction_selectability;
          }
          /**
           * @SINCE 1.7.2
           * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
           * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
           * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
           * distribution for backward compatibility.
           *
           * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
           * VizFrame} control to benefit from new charting enhancements and timely support. **
           *
           * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
           * make sure you evaluate it thoroughly before migration.
           * @EXPERIMENTAL (since 1.7.2)
           *
           * List (Enum) type sap.viz.ui5.types.controller.Interaction_pan_orientation
           */
          enum Interaction_pan_orientation {
            /**
             * Value both
             */
            both,
            /**
             * Value horizontal
             */
            horizontal,
            /**
             * Value vertical
             */
            vertical
          }
          /**
           * @SINCE 1.7.2
           * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
           * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
           * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
           * distribution for backward compatibility.
           *
           * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
           * VizFrame} control to benefit from new charting enhancements and timely support. **
           *
           * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
           * make sure you evaluate it thoroughly before migration.
           * @EXPERIMENTAL (since 1.7.2)
           *
           * List (Enum) type sap.viz.ui5.types.controller.Interaction_selectability_mode
           */
          enum Interaction_selectability_mode {
            /**
             * Value exclusive
             */
            exclusive,
            /**
             * Value inclusive
             */
            inclusive,
            /**
             * Value multiple
             */
            multiple,
            /**
             * Value none
             */
            none,
            /**
             * Value single
             */
            single
          }
        }

        namespace layout {
          interface DockOpts extends sap.viz.ui5.core.BaseStructuredTypeOpts {}

          interface StackOpts extends sap.viz.ui5.core.BaseStructuredTypeOpts {}
          /**
           * @SINCE 1.7.2
           * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
           * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
           * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
           * distribution for backward compatibility.
           *
           * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
           * VizFrame} control to benefit from new charting enhancements and timely support. **
           *
           * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
           * make sure you evaluate it thoroughly before migration.
           * @EXPERIMENTAL (since 1.7.2)
           *
           * Module sap.viz.ui5.types.layout.Dock
           */
          class Dock extends sap.viz.ui5.core.BaseStructuredType {
            /**
             * Constructor for a new sap.viz.ui5.types.layout.Dock
             */
            constructor(
              /**
               * id for the new control, generated automatically if no id is given
               */
              sId?: string,
              /**
               * initial settings for the new control
               */
              mSettings?: DockOpts
            );

            /**
             * Creates a new subclass of class sap.viz.ui5.types.layout.Dock with name `sClassName` and enriches it
             * with the information contained in `oClassInfo`.
             *
             * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
             */
            // @ts-ignore
            static extend(
              /**
               * Name of the class being created
               */
              sClassName: string,
              /**
               * Object literal with information about the class
               */
              oClassInfo?: object,
              /**
               * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
               */
              FNMetaImpl?: Function
            ): Function;
            /**
             * Returns a metadata object for class sap.viz.ui5.types.layout.Dock.
             */
            // @ts-ignore
            static getMetadata(): sap.ui.base.Metadata;
          }
          /**
           * @SINCE 1.7.2
           * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
           * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
           * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
           * distribution for backward compatibility.
           *
           * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
           * VizFrame} control to benefit from new charting enhancements and timely support. **
           *
           * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
           * make sure you evaluate it thoroughly before migration.
           * @EXPERIMENTAL (since 1.7.2)
           *
           * Module sap.viz.ui5.types.layout.Stack
           */
          class Stack extends sap.viz.ui5.core.BaseStructuredType {
            /**
             * Constructor for a new sap.viz.ui5.types.layout.Stack
             */
            constructor(
              /**
               * id for the new control, generated automatically if no id is given
               */
              sId?: string,
              /**
               * initial settings for the new control
               */
              mSettings?: StackOpts
            );

            /**
             * Creates a new subclass of class sap.viz.ui5.types.layout.Stack with name `sClassName` and enriches it
             * with the information contained in `oClassInfo`.
             *
             * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
             */
            // @ts-ignore
            static extend(
              /**
               * Name of the class being created
               */
              sClassName: string,
              /**
               * Object literal with information about the class
               */
              oClassInfo?: object,
              /**
               * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
               */
              FNMetaImpl?: Function
            ): Function;
            /**
             * Returns a metadata object for class sap.viz.ui5.types.layout.Stack.
             */
            // @ts-ignore
            static getMetadata(): sap.ui.base.Metadata;
          }
        }

        namespace legend {
          interface CommonOpts extends sap.viz.ui5.core.BaseStructuredTypeOpts {
            /**
             * Set the visibility of the legend
             */
            visible?: boolean;

            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Set the format string for the legend. The following characters are reserved as tokens for format code:
             * MDYHSAmdyhsa#?%0@.
             */
            formatString?: string;

            /**
             * Set whether the legend is hierarchical. This is only supported if the legend is located to the right
             * of the chart.
             */
            isHierarchical?: boolean;

            /**
             * Set whether the legend is scrollable. If this value is set to 'false', and there is not enough room to
             * show the whole legend, an ellipsis (...) indicates the missing legend items.
             */
            isScrollable?: boolean;

            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * It is a deprecated property. Please use "legendGroup.layout.position" property to set legend position.
             */
            position?: sap.viz.ui5.types.legend.Common_position;

            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Set legend type for Bubble charts. Non-bubble charts are not supported.
             */
            type?: sap.viz.ui5.types.legend.Common_type;

            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Set the alignment of the legend
             */
            alignment?: sap.viz.ui5.types.legend.Common_alignment;

            /**
             * Set the drawing effect for colors in the legend. If this value is set to 'glossy', colors are glossy.
             * If this value is set to 'normal', colors are matte.
             */
            drawingEffect?: sap.viz.ui5.types.legend.Common_drawingEffect;

            /**
             * Settings for the legend title
             */
            title?: sap.viz.ui5.types.legend.Common_title;
          }

          interface Common_titleOpts
            extends sap.viz.ui5.core.BaseStructuredTypeOpts {
            /**
             * Set the visibility of the legend title
             */
            visible?: boolean;

            /**
             * Set the text of the legend title
             */
            text?: string;
          }
          /**
           * @SINCE 1.7.2
           * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
           * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
           * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
           * distribution for backward compatibility.
           *
           * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
           * VizFrame} control to benefit from new charting enhancements and timely support. **
           *
           * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
           * make sure you evaluate it thoroughly before migration.
           * @EXPERIMENTAL (since 1.7.2)
           *
           * Module sap.viz.ui5.types.legend.Common
           */
          class Common extends sap.viz.ui5.core.BaseStructuredType {
            /**
             * Constructor for a new sap.viz.ui5.types.legend.Common
             *
             * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
             * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
             * of the syntax of the settings object.
             */
            constructor(
              /**
               * id for the new control, generated automatically if no id is given
               */
              sId?: string,
              /**
               * initial settings for the new control
               */
              mSettings?: CommonOpts
            );

            /**
             * Destroys the title in the aggregation {@link #getTitle title}.
             */
            destroyTitle(): sap.viz.ui5.types.legend.Common;
            /**
             * Creates a new subclass of class sap.viz.ui5.types.legend.Common with name `sClassName` and enriches it
             * with the information contained in `oClassInfo`.
             *
             * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
             */
            // @ts-ignore
            static extend(
              /**
               * Name of the class being created
               */
              sClassName: string,
              /**
               * Object literal with information about the class
               */
              oClassInfo?: object,
              /**
               * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
               */
              FNMetaImpl?: Function
            ): Function;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Gets current value of property {@link #getAlignment alignment}.
             *
             * Set the alignment of the legend
             *
             * Default value is `start`.
             */
            getAlignment(): sap.viz.ui5.types.legend.Common_alignment;
            /**
             * Gets current value of property {@link #getDrawingEffect drawingEffect}.
             *
             * Set the drawing effect for colors in the legend. If this value is set to 'glossy', colors are glossy.
             * If this value is set to 'normal', colors are matte.
             *
             * Default value is `normal`.
             */
            getDrawingEffect(): sap.viz.ui5.types.legend.Common_drawingEffect;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Gets current value of property {@link #getFormatString formatString}.
             *
             * Set the format string for the legend. The following characters are reserved as tokens for format code:
             * MDYHSAmdyhsa#?%0@.
             */
            getFormatString(): string;
            /**
             * Gets current value of property {@link #getIsHierarchical isHierarchical}.
             *
             * Set whether the legend is hierarchical. This is only supported if the legend is located to the right
             * of the chart.
             *
             * Default value is `false`.
             */
            getIsHierarchical(): boolean;
            /**
             * Gets current value of property {@link #getIsScrollable isScrollable}.
             *
             * Set whether the legend is scrollable. If this value is set to 'false', and there is not enough room to
             * show the whole legend, an ellipsis (...) indicates the missing legend items.
             *
             * Default value is `false`.
             */
            getIsScrollable(): boolean;
            /**
             * Returns a metadata object for class sap.viz.ui5.types.legend.Common.
             */
            // @ts-ignore
            static getMetadata(): sap.ui.base.Metadata;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Gets current value of property {@link #getPosition position}.
             *
             * It is a deprecated property. Please use "legendGroup.layout.position" property to set legend position.
             *
             * Default value is `right`.
             */
            getPosition(): sap.viz.ui5.types.legend.Common_position;
            /**
             * Gets content of aggregation {@link #getTitle title}.
             *
             * Settings for the legend title
             */
            getTitle(): sap.viz.ui5.types.legend.Common_title;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Gets current value of property {@link #getType type}.
             *
             * Set legend type for Bubble charts. Non-bubble charts are not supported.
             *
             * Default value is `ColorLegend`.
             */
            getType(): sap.viz.ui5.types.legend.Common_type;
            /**
             * Gets current value of property {@link #getVisible visible}.
             *
             * Set the visibility of the legend
             *
             * Default value is `true`.
             */
            getVisible(): boolean;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Sets a new value for property {@link #getAlignment alignment}.
             *
             * Set the alignment of the legend
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `start`.
             */
            setAlignment(
              /**
               * New value for property `alignment`
               */
              sAlignment: sap.viz.ui5.types.legend.Common_alignment
            ): sap.viz.ui5.types.legend.Common;
            /**
             * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
             *
             * Set the drawing effect for colors in the legend. If this value is set to 'glossy', colors are glossy.
             * If this value is set to 'normal', colors are matte.
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `normal`.
             */
            setDrawingEffect(
              /**
               * New value for property `drawingEffect`
               */
              sDrawingEffect: sap.viz.ui5.types.legend.Common_drawingEffect
            ): sap.viz.ui5.types.legend.Common;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Sets a new value for property {@link #getFormatString formatString}.
             *
             * Set the format string for the legend. The following characters are reserved as tokens for format code:
             * MDYHSAmdyhsa#?%0@.
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             */
            setFormatString(
              /**
               * New value for property `formatString`
               */
              sFormatString: string
            ): sap.viz.ui5.types.legend.Common;
            /**
             * Sets a new value for property {@link #getIsHierarchical isHierarchical}.
             *
             * Set whether the legend is hierarchical. This is only supported if the legend is located to the right
             * of the chart.
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `false`.
             */
            setIsHierarchical(
              /**
               * New value for property `isHierarchical`
               */
              bIsHierarchical: boolean
            ): sap.viz.ui5.types.legend.Common;
            /**
             * Sets a new value for property {@link #getIsScrollable isScrollable}.
             *
             * Set whether the legend is scrollable. If this value is set to 'false', and there is not enough room to
             * show the whole legend, an ellipsis (...) indicates the missing legend items.
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `false`.
             */
            setIsScrollable(
              /**
               * New value for property `isScrollable`
               */
              bIsScrollable: boolean
            ): sap.viz.ui5.types.legend.Common;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Sets a new value for property {@link #getPosition position}.
             *
             * It is a deprecated property. Please use "legendGroup.layout.position" property to set legend position.
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `right`.
             */
            setPosition(
              /**
               * New value for property `position`
               */
              sPosition: sap.viz.ui5.types.legend.Common_position
            ): sap.viz.ui5.types.legend.Common;
            /**
             * Sets the aggregated {@link #getTitle title}.
             */
            setTitle(
              /**
               * The title to set
               */
              oTitle: sap.viz.ui5.types.legend.Common_title
            ): sap.viz.ui5.types.legend.Common;
            /**
             * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
             * SAPUI5 delivery in one of the next releases.
             *
             * Sets a new value for property {@link #getType type}.
             *
             * Set legend type for Bubble charts. Non-bubble charts are not supported.
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `ColorLegend`.
             */
            setType(
              /**
               * New value for property `type`
               */
              sType: sap.viz.ui5.types.legend.Common_type
            ): sap.viz.ui5.types.legend.Common;
            /**
             * Sets a new value for property {@link #getVisible visible}.
             *
             * Set the visibility of the legend
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `true`.
             */
            setVisible(
              /**
               * New value for property `visible`
               */
              bVisible: boolean
            ): sap.viz.ui5.types.legend.Common;
          }
          /**
           * @SINCE 1.7.2
           * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
           * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
           * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
           * distribution for backward compatibility.
           *
           * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
           * VizFrame} control to benefit from new charting enhancements and timely support. **
           *
           * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
           * make sure you evaluate it thoroughly before migration.
           * @EXPERIMENTAL (since 1.7.2)
           *
           * Settings for the legend title
           */
          class Common_title extends sap.viz.ui5.core.BaseStructuredType {
            /**
             * Constructor for a new sap.viz.ui5.types.legend.Common_title
             *
             * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
             * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
             * of the syntax of the settings object.
             */
            constructor(
              /**
               * id for the new control, generated automatically if no id is given
               */
              sId?: string,
              /**
               * initial settings for the new control
               */
              mSettings?: Common_titleOpts
            );

            /**
             * Creates a new subclass of class sap.viz.ui5.types.legend.Common_title with name `sClassName` and enriches
             * it with the information contained in `oClassInfo`.
             *
             * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
             */
            // @ts-ignore
            static extend(
              /**
               * Name of the class being created
               */
              sClassName: string,
              /**
               * Object literal with information about the class
               */
              oClassInfo?: object,
              /**
               * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
               */
              FNMetaImpl?: Function
            ): Function;
            /**
             * Returns a metadata object for class sap.viz.ui5.types.legend.Common_title.
             */
            // @ts-ignore
            static getMetadata(): sap.ui.base.Metadata;
            /**
             * Gets current value of property {@link #getText text}.
             *
             * Set the text of the legend title
             */
            getText(): string;
            /**
             * Gets current value of property {@link #getVisible visible}.
             *
             * Set the visibility of the legend title
             *
             * Default value is `false`.
             */
            getVisible(): boolean;
            /**
             * Sets a new value for property {@link #getText text}.
             *
             * Set the text of the legend title
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             */
            setText(
              /**
               * New value for property `text`
               */
              sText: string
            ): sap.viz.ui5.types.legend.Common_title;
            /**
             * Sets a new value for property {@link #getVisible visible}.
             *
             * Set the visibility of the legend title
             *
             * When called with a value of `null` or `undefined`, the default value of the property will be restored.
             *
             * Default value is `false`.
             */
            setVisible(
              /**
               * New value for property `visible`
               */
              bVisible: boolean
            ): sap.viz.ui5.types.legend.Common_title;
          }
          /**
           * @SINCE 1.7.2
           * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
           * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
           * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
           * distribution for backward compatibility.
           *
           * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
           * VizFrame} control to benefit from new charting enhancements and timely support. **
           *
           * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
           * make sure you evaluate it thoroughly before migration.
           * @EXPERIMENTAL (since 1.7.2)
           *
           * List (Enum) type sap.viz.ui5.types.legend.Common_alignment
           */
          enum Common_alignment {
            /**
             * Value end
             */
            end,
            /**
             * Value middle
             */
            middle,
            /**
             * Value start
             */
            start
          }
          /**
           * @SINCE 1.7.2
           * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
           * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
           * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
           * distribution for backward compatibility.
           *
           * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
           * VizFrame} control to benefit from new charting enhancements and timely support. **
           *
           * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
           * make sure you evaluate it thoroughly before migration.
           * @EXPERIMENTAL (since 1.7.2)
           *
           * List (Enum) type sap.viz.ui5.types.legend.Common_drawingEffect
           */
          enum Common_drawingEffect {
            /**
             * Value glossy
             */
            glossy,
            /**
             * Value normal
             */
            normal
          }
          /**
           * @SINCE 1.7.2
           * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
           * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
           * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
           * distribution for backward compatibility.
           *
           * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
           * VizFrame} control to benefit from new charting enhancements and timely support. **
           *
           * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
           * make sure you evaluate it thoroughly before migration.
           * @EXPERIMENTAL (since 1.7.2)
           *
           * List (Enum) type sap.viz.ui5.types.legend.Common_position
           */
          enum Common_position {
            /**
             * Value bottom
             */
            bottom,
            /**
             * Value left
             */
            left,
            /**
             * Value right
             */
            right,
            /**
             * Value top
             */
            top
          }
          /**
           * @SINCE 1.7.2
           * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
           * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
           * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
           * distribution for backward compatibility.
           *
           * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
           * VizFrame} control to benefit from new charting enhancements and timely support. **
           *
           * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
           * make sure you evaluate it thoroughly before migration.
           * @EXPERIMENTAL (since 1.7.2)
           *
           * List (Enum) type sap.viz.ui5.types.legend.Common_type
           */
          enum Common_type {
            /**
             * Value BubbleColorLegend
             */
            BubbleColorLegend,
            /**
             * Value ColorLegend
             */
            ColorLegend,
            /**
             * Value MeasureBasedColoringLegend
             */
            MeasureBasedColoringLegend,
            /**
             * Value SizeLegend
             */
            SizeLegend
          }
        }

        interface AreaOpts extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set whether the area chart is vertical or horizontal
           */
          orientation?: sap.viz.ui5.types.Area_orientation;

          /**
           * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension
           * bound to the legend.
           */
          colorPalette?: string[];

          /**
           * Set the color palette for axis 1 in dual charts.
           */
          primaryValuesColorPalette?: string[];

          /**
           * Set the color palette for axis 2 in dual chart.
           */
          secondaryValuesColorPalette?: string[];

          /**
           * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy.
           * If this value is set to 'normal', the plot area is matte.
           */
          drawingEffect?: sap.viz.ui5.types.Area_drawingEffect;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the display mode of the area chart
           */
          mode?: sap.viz.ui5.types.Area_mode;

          /**
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           */
          formatRules?: object[];

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Settings for the tooltip
           */
          toolTip?: sap.viz.ui5.types.Area_tooltip;

          /**
           * Settings for animations in the plot area
           */
          animation?: sap.viz.ui5.types.Area_animation;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Settings for marker and data point graphics
           */
          marker?: sap.viz.ui5.types.Area_marker;

          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Settings for the hoverline.
           */
          hoverline?: sap.viz.ui5.types.Area_hoverline;
        }

        interface Area_animationOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether the data loading animation is enabled
           */
          dataLoading?: boolean;

          /**
           * Set whether the data updating animation is enabled
           */
          dataUpdating?: boolean;

          /**
           * Set whether the resizing animation is enabled
           */
          resizing?: boolean;
        }

        interface Area_hoverlineOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the visibility of the hoverline.
           */
          visible?: boolean;
        }

        interface Area_markerOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the visibility of the markers
           */
          visible?: boolean;

          /**
           * Set the shape of the markers
           */
          shape?: sap.viz.ui5.types.Area_marker_shape;

          /**
           * Set the marker size for data points, ranging from '4' and '32'. If you enter a value outside that range,
           * the marker size defaults to '4'.
           */
          size?: number;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the number to enable events for markers when they are invisible. If the total amount of markers is
           * bigger than this value, markers will remain hidden when selected or hovered over. The default value is
           * Number.POSITIVE_INFINITY, which is the largest possible value.
           */
          number?: number;
        }

        interface Area_tooltipOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether the tooltip is enabled
           */
          enabled?: boolean;
        }

        interface AxisOpts extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set whether the axis works in independent mode. Currently, this property is used only for boxplot charts.
           */
          isIndependentMode?: boolean;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Show the label as a percentage. For example '0.1' would show as '10'.
           */
          isPercentMode?: boolean;

          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Try to keep the first label and last label when the space is limited.
           */
          isKeepFirstAndLastLabel?: boolean;

          /**
           * Set the thickness of the axis line
           */
          lineSize?: number;

          /**
           * Set the color of the axis line
           */
          color?: string;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the axis type
           */
          type?: sap.viz.ui5.types.Axis_type;

          /**
           * Set the visibility of the entire axis, including the axis line, gridlines, and labels
           */
          visible?: boolean;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the position of the axis
           */
          position?: sap.viz.ui5.types.Axis_position;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set whether truncation logic is available for the category axis
           */
          isTruncateAvailable?: boolean;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set whether the label area is limited to the text area
           */
          forceLabelArea?: boolean;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set whether the label selection effect is enabled. For mobile devices, the default value is 'false'.
           */
          enableLabelSelection?: boolean;

          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Hide axis title firstly if the space is limited.
           */
          hideTitleFirst?: boolean;

          /**
           * The ratio to limit axis' space in its container, which only accepts values between 0 and 1(0 and 1 included).
           * All the invalid values would be replaced by default value.
           */
          maxSizeRatio?: number;

          /**
           * Settings for the axis title
           */
          title?: sap.viz.ui5.types.Axis_title;

          /**
           * Settings for the gridlines on the axis
           */
          gridline?: sap.viz.ui5.types.Axis_gridline;

          /**
           * Settings for the axis line
           */
          axisline?: sap.viz.ui5.types.Axis_axisline;

          /**
           * Settings for the labels on this axis
           */
          label?: sap.viz.ui5.types.Axis_label;

          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Settings for the axis indicator
           */
          indicator?: sap.viz.ui5.types.Axis_indicator;

          /**
           * Set the scale of the value axis. This property only works on value type axes.
           */
          scale?: sap.viz.ui5.types.Axis_scale;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Settings for the layout of the category axis. This property only works for category type axes.
           */
          layoutInfo?: sap.viz.ui5.types.Axis_layoutInfo;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Settings for the ticks on the axis
           */
          axisTick?: sap.viz.ui5.types.Axis_axisTick;
        }

        interface Axis_axislineOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the visibility of the axis line
           */
          visible?: boolean;
        }

        interface Axis_axisTickOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set visibility of the ticks on the axis. For mobile devices, the default value is 'false'.
           */
          visible?: boolean;
        }

        interface Axis_gridlineOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the visibility of gridlines on the axis
           */
          visible?: boolean;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Disable gridline or not
           */
          disable?: boolean;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set whether the first gridline on the axis appears
           */
          showFirstLine?: boolean;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set whether the last gridline on the axis appears
           */
          showLastLine?: boolean;

          /**
           * Set the line type of gridlines on the axis
           */
          type?: sap.viz.ui5.types.Axis_gridline_type;

          /**
           * Set the color of the gridlines on the axis
           */
          color?: string;

          /**
           * Set the line size of gridlines on the axis
           */
          size?: number;
        }

        interface Axis_indicatorOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the visibility of the axis indicator
           */
          enable?: boolean;
        }

        interface Axis_labelOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the visibility of the labels on this axis
           */
          visible?: boolean;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the number format for the value axis
           */
          numberFormat?: string;

          /**
           * Set the format strings for labels on the value axis. If a single format string is entered, it is applied
           * to all measures. A two-dimensional array of format strings can be entered for scatter matrix charts and
           * multiple charts with measureNamesDimension, to apply different formats to each sub-chart. For all other
           * chart types, the first value of the first dimension of a two-dimensional array is used as a global format
           * string. The following characters are reserved as tokens for format code: MDYHSAmdyhsa#?%0@. The letter
           * "u" is used at the end of a format string to format values in SI units. If the letter "u" is added to
           * a value between 1e12 and 1e-3 before SI units are applied, the value is formatted in exponential style.
           * The remaining syntax matches Excel format strings. The following is a simple example of a two-dimensional
           * array for a chart with two measures: [["#,##0.00 DM;-#,##.00 DM","#,##.00;-#,##.00"]].
           */
          formatString?: any;

          /**
           * Set the unit format type. If set MetricUnits, unit K,M,G,T will be applied, eg, 5000 will display as
           * 5K, 5000000 will display as 5M, 5000000000 will display as 5G and so on. If set FinancialUnits, unit
           * K,M,B,T will be applied. 5000000000 will display as 5B.
           */
          unitFormatType?: sap.viz.ui5.types.Axis_label_unitFormatType;

          /**
           * Set the visibility of the sub levels of labels on this axis
           */
          hideSubLevels?: boolean;
        }

        interface Axis_layoutInfoOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the width of the xAxis
           */
          width?: number;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the height of the xAxis
           */
          height?: number;
        }

        interface Axis_scaleOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether the axis range is limited to the range between the minValue and maxValue
           */
          fixedRange?: boolean;

          /**
           * Set the minValue of the value axis
           */
          minValue?: number;

          /**
           * Set the maxValue of the value axis
           */
          maxValue?: number;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the specific ticks for value axis. The format should be [{value : "/value/", text : "/text/"}...].
           * If its length is less than 2, this property will not take effect.
           */
          fixedTicks?: object[];
        }

        interface Axis_titleOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the visibility of the axis title
           */
          visible?: boolean;

          /**
           * Set the text of the axis title
           */
          text?: string;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the title color to match the color of the axis line
           */
          applyAxislineColor?: boolean;
        }

        interface BackgroundOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the visibility
           */
          visible?: boolean;

          /**
           * Set the drawing effect for the background. If this value is set to 'glossy', the background is glossy.
           * If this value is set to 'normal', the background is matte.
           */
          drawingEffect?: sap.viz.ui5.types.Background_drawingEffect;

          /**
           * Set the direction of the color gradient in the background. This only takes effect if the 'drawingEffect'
           * value is set to 'glossy'.
           */
          direction?: sap.viz.ui5.types.Background_direction;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Define the color for the plot background body.
           */
          color?: string;

          /**
           * Settings for the border
           */
          border?: sap.viz.ui5.types.Background_border;
        }

        interface Background_borderOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Settings for the color of the stroke.
           */
          stroke?: string;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Settings for the width of the stroke.
           */
          strokeWidth?: number;

          /**
           * Settings for the left border
           */
          left?: sap.viz.ui5.types.Background_border_left;

          /**
           * Settings for the right border
           */
          right?: sap.viz.ui5.types.Background_border_right;

          /**
           * Settings for the top border
           */
          top?: sap.viz.ui5.types.Background_border_top;

          /**
           * Settings for the bottom border
           */
          bottom?: sap.viz.ui5.types.Background_border_bottom;
        }

        interface Background_border_bottomOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the visibility
           */
          visible?: boolean;
        }

        interface Background_border_leftOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the visibility
           */
          visible?: boolean;
        }

        interface Background_border_rightOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the visibility
           */
          visible?: boolean;
        }

        interface Background_border_topOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the visibility
           */
          visible?: boolean;
        }

        interface BarOpts extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the orientation of the plot area.
           */
          orientation?: sap.viz.ui5.types.Bar_orientation;

          /**
           * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension
           * bound to the legend.
           */
          colorPalette?: string[];

          /**
           * Set the color palette for axis 1 in dual charts.
           */
          primaryValuesColorPalette?: string[];

          /**
           * Set the color palette for axis 2 in dual chart.
           */
          secondaryValuesColorPalette?: string[];

          /**
           * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy.
           * If this value is set to 'normal', the plot area is matte.
           */
          drawingEffect?: sap.viz.ui5.types.Bar_drawingEffect;

          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set whether bars have rounded corners
           */
          isRoundCorner?: boolean;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set where the image fill is enabled.
           */
          imageFill?: boolean;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the images that fill the bars.
           */
          imagePalette?: string[];

          /**
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           */
          formatRules?: object[];

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Settings for tooltip related properties
           */
          toolTip?: sap.viz.ui5.types.Bar_tooltip;

          /**
           * Settings for animations in the plot area
           */
          animation?: sap.viz.ui5.types.Bar_animation;
        }

        interface Bar_animationOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether the data loading animation is enabled
           */
          dataLoading?: boolean;

          /**
           * Set whether the data updating animation is enabled
           */
          dataUpdating?: boolean;

          /**
           * Set whether the resizing animation is enabled
           */
          resizing?: boolean;
        }

        interface Bar_tooltipOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether the tooltip is enabled
           */
          enabled?: boolean;
        }

        interface BubbleOpts extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the color of the bubbles
           */
          colorPalette?: string[];

          /**
           * Set the shape of the bubbles
           */
          shapePalette?: string[];

          /**
           * Set the minimum size of the data points
           */
          minMarkerSize?: number;

          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the max value of primary values
           */
          maxPriValue?: number;

          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the minimum value of primary values
           */
          minPriValue?: number;

          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the max value of secondary values
           */
          maxSecValue?: number;

          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the minimum value of secondary values
           */
          minSecValue?: number;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the max value of bubble width values
           */
          maxBubbleWidth?: number;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the minimum value of bubble width values
           */
          minBubbleWidth?: number;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the max value of bubble height values
           */
          maxBubbleHeight?: number;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the minimum value of bubble height values
           */
          minBubbleHeight?: number;

          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set whether it is time based scatter/bubble
           */
          timeBased?: boolean;

          /**
           * Set the drawing effect for the bubbles
           */
          drawingEffect?: sap.viz.ui5.types.Bubble_drawingEffect;

          /**
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           */
          formatRules?: object[];

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Show/hide the data of negetive value.
           */
          showNegativeValues?: boolean;

          /**
           * Settings for animations in bubble and scatter charts
           */
          animation?: sap.viz.ui5.types.Bubble_animation;

          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set tooltip related properties.
           */
          axisTooltip?: sap.viz.ui5.types.Bubble_axisTooltip;

          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Settings for hoverline properties.
           */
          hoverline?: sap.viz.ui5.types.Bubble_hoverline;
        }

        interface Bubble_animationOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether the data loading animation is enabled
           */
          dataLoading?: boolean;

          /**
           * Set whether the data updating animation is enabled
           */
          dataUpdating?: boolean;

          /**
           * Set whether the resizing animation is enabled
           */
          resizing?: boolean;
        }

        interface Bubble_axisTooltipOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * enabled/disabled tooltip.
           */
          visible?: boolean;

          /**
           * Set format string for small tooltip.The first one is applied to xAxis and the second one is applied to
           * yAxis.Any character in "MDYHSAmdyhsa#?%0@" is reserved as a token for format code.
           */
          formatString?: string[];
        }

        interface Bubble_hoverlineOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set to enabled/disabled hoverline or not.
           */
          visible?: boolean;
        }

        interface BulletOpts extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the orientation of the plot area.
           */
          orientation?: sap.viz.ui5.types.Bullet_orientation;

          /**
           * Set the color palette for the chart.
           */
          colorPalette?: string[];

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the color palette for axis 1 in dual charts.
           */
          primaryValuesColorPalette?: string[];

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the color palette for axis 2 in dual chart.
           */
          secondaryValuesColorPalette?: string[];

          /**
           * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy.
           * If this value is set to 'normal', the plot area is matte.
           */
          drawingEffect?: sap.viz.ui5.types.Bullet_drawingEffect;

          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set whether bars have rounded corners
           */
          isRoundCorner?: boolean;

          /**
           * Set the color palette reference value color in bullet chart.
           */
          referenceValuesColorPalette?: string[];

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Settings for tooltip related properties
           */
          toolTip?: sap.viz.ui5.types.Bullet_tooltip;
        }

        interface Bullet_tooltipOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether the tooltip is enabled
           */
          enabled?: boolean;
        }

        interface CombinationOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the orientation of the plot area.
           */
          orientation?: sap.viz.ui5.types.Combination_orientation;

          /**
           * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension
           * bound to the legend.
           */
          colorPalette?: string[];

          /**
           * Set the color palette for axis 1 in dual charts.
           */
          primaryValuesColorPalette?: string[];

          /**
           * Set the color palette for axis 2 in dual chart.
           */
          secondaryValuesColorPalette?: string[];

          /**
           * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy.
           * If this value is set to 'normal', the plot area is matte.
           */
          drawingEffect?: sap.viz.ui5.types.Combination_drawingEffect;

          /**
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           */
          formatRules?: object[];

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Settings for the tooltip
           */
          toolTip?: sap.viz.ui5.types.Combination_tooltip;

          /**
           * Settings for animations in the plot area
           */
          animation?: sap.viz.ui5.types.Combination_animation;

          /**
           * Settings for the shape of data series
           */
          dataShape?: sap.viz.ui5.types.Combination_dataShape;

          /**
           * Settings for bar properties
           */
          bar?: sap.viz.ui5.types.Combination_bar;

          /**
           * Settings for line properties
           */
          line?: sap.viz.ui5.types.Combination_line;
        }

        interface Combination_animationOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether the data loading animation is enabled
           */
          dataLoading?: boolean;

          /**
           * Set whether the data updating animation is enabled
           */
          dataUpdating?: boolean;

          /**
           * Set whether the resizing animation is enabled
           */
          resizing?: boolean;
        }

        interface Combination_barOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set whether the bars have rounded corners
           */
          isRoundCorner?: boolean;
        }

        interface Combination_dataShapeOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the shape of data series on the primary axis
           */
          primaryAxis?: string[];

          /**
           * Set the shape of data series on the secondary axis
           */
          secondaryAxis?: string[];

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the shape of data series on the secondary axis (Old version; still works)
           */
          secondAxis?: string[];
        }

        interface Combination_lineOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the width of lines, ranging from '1' to '7'. If you enter a value outside the range, the line width
           * will default to '2'.
           */
          width?: number;

          /**
           * Settings for the visual markers for data points
           */
          marker?: sap.viz.ui5.types.Combination_line_marker;
        }

        interface Combination_line_markerOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the visibility of the data point markers
           */
          visible?: boolean;

          /**
           * Set the shape of the data point markers
           */
          shape?: string[];

          /**
           * Set the size of the data point markers, ranging from '4' to '32'. If you enter a value outside the range,
           * the size defaults to '6'.
           */
          size?: number;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the number to enable events for markers when they are invisible. If the total amount of markers is
           * bigger than this value, markers will remain hidden when selected or hovered over. The default value is
           * Number.POSITIVE_INFINITY, which is the largest possible value.
           */
          number?: number;
        }

        interface Combination_tooltipOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether the tooltip is enabled
           */
          enabled?: boolean;
        }

        interface DatalabelOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether the data labels are visible
           */
          visible?: boolean;

          /**
           * Always show all data labels even they are overlapped
           */
          hideWhenOverlap?: boolean;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set whether the chart is a donut chart. Use only for donut charts.
           */
          isDonut?: boolean;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the type of label
           */
          type?: string;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * If set to 'true', the data labels will be automatically placed outside when the data label position property
           * is inside, and vice versa
           */
          automaticInOutside?: boolean;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * If set to 'true', the value zero is shown in the data labels
           */
          showZero?: boolean;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set whether the chart is a geo chart
           */
          isGeoChart?: boolean;

          /**
           * @deprecated (since 1.22) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set whether the chart is a bubble chart
           */
          isBubbleChart?: boolean;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set whether the chart is a stack chart. Set for stack chart only.
           */
          isStackMode?: boolean;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set whether the chart is a percent chart. Set for percent chart only.
           */
          isPercentMode?: boolean;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * If set to 'true', the data label position is defined by the property 'outsidePosition', regardless of
           * whether the data label value is negative
           */
          positionPreference?: boolean;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * If set to 'true', the data label is visible when it is outside
           */
          outsideVisible?: boolean;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * If set to 'true', the data label is positioned above the element when it is outside
           */
          outsidePosition?: sap.viz.ui5.types.Datalabel_outsidePosition;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set painting mode of data labels
           */
          paintingMode?: sap.viz.ui5.types.Datalabel_paintingMode;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set position of data labels
           */
          position?: sap.viz.ui5.types.Datalabel_position;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set orientation of data labels
           */
          orientation?: sap.viz.ui5.types.Datalabel_orientation;

          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * If set to 'true', the data label is automatically hidden when bubble width isn't enough to show the whole
           * label in single bubble chart.
           */
          respectShapeWidth?: boolean;

          /**
           * Set the format strings for the data labels. For dual axis charts, the first array is applied to the primary
           * axis and the second array is applied to the second axis. If you enter fewer format strings into an array
           * than there are measures in the respective axis, then the last format string is applied to all remaining
           * measures. The following characters are reserved as tokens for format code: MDYHSAmdyhsa#?%0@. The following
           * is a simple example: [["0.00%"],["0.00%"]].
           */
          formatString?: any[];
        }

        interface DatatransformOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Settings for the auto-binning algorithm
           */
          autoBinning?: sap.viz.ui5.types.Datatransform_autoBinning;

          /**
           * Settings for the data sampling algorithm
           */
          dataSampling?: sap.viz.ui5.types.Datatransform_dataSampling;
        }

        interface Datatransform_autoBinningOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether data auto-binning is enabled.
           */
          enable?: boolean;

          /**
           * Set the bin number.
           */
          binNumber?: number;
        }

        interface Datatransform_dataSamplingOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether data sampling is enabled.
           */
          enable?: boolean;

          /**
           * Set the data point percentage in the original dataset
           */
          sizeFactor?: number;

          /**
           * If the data point is larger than this value, data sampling is triggered.
           */
          numberPrecondition?: number;

          /**
           * add documentation for aggregation grid
           */
          grid?: sap.viz.ui5.types.Datatransform_dataSampling_grid;
        }

        interface Datatransform_dataSampling_gridOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the number of rows in the grid.
           */
          row?: number;

          /**
           * Set the number of columns in the grid.
           */
          column?: number;
        }

        interface HeatmapOpts extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the starting color of the heat map
           */
          startColor?: string;

          /**
           * Set the end color of the heat map
           */
          endColor?: string;

          /**
           * Set the color palette for the various sectors. For example, ["#748CB2", "#9CC677", "#EACF5E", "#F9AD79",
           * "#D16A7C"].
           */
          colorPalette?: string[];

          /**
           * Set the MBC legend values. For example, [10,11,12,13,14,15]. The values in the array should be in ascending
           * order. If the number of values in the array is smaller than the MBC legend segment number, the MBC legend
           * automatically calculates the values according to the data. If the number of values in the legendValues
           * array is larger than MBC legend segment number, then only the first "segment number + 1" values are used.
           */
          legendValues?: number[];

          /**
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           */
          formatRules?: object[];

          /**
           * Settings for the border
           */
          border?: sap.viz.ui5.types.Heatmap_border;

          /**
           * Settings for animations in the plot area
           */
          animation?: sap.viz.ui5.types.Heatmap_animation;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Settings for tooltip
           */
          toolTip?: sap.viz.ui5.types.Heatmap_tooltip;
        }

        interface Heatmap_animationOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether the data loading animation is enabled
           */
          dataLoading?: boolean;

          /**
           * Set whether the data updating animation is enabled
           */
          dataUpdating?: boolean;

          /**
           * Set whether the resizing animation is enabled
           */
          resizing?: boolean;
        }

        interface Heatmap_borderOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the visibility of the zone edge
           */
          visible?: boolean;
        }

        interface Heatmap_tooltipOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether the tooltip is enabled
           */
          enabled?: boolean;
        }

        interface LegendOpts extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Settings for the layout of the legend area
           */
          layout?: sap.viz.ui5.types.Legend_layout;
        }

        interface Legend_layoutOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the position of the legend area
           */
          position?: sap.viz.ui5.types.Legend_layout_position;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the priority of the position for the legend area
           */
          priority?: number;
        }

        interface LineOpts extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the orientation of the plot area.
           */
          orientation?: sap.viz.ui5.types.Line_orientation;

          /**
           * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension
           * bound to the legend.
           */
          colorPalette?: string[];

          /**
           * Set the color palette for axis 1 in dual charts.
           */
          primaryValuesColorPalette?: string[];

          /**
           * Set the color palette for axis 2 in dual chart.
           */
          secondaryValuesColorPalette?: string[];

          /**
           * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy.
           * If this value is set to 'normal', the plot area is matte.
           */
          drawingEffect?: sap.viz.ui5.types.Line_drawingEffect;

          /**
           * Set the width of the lines, ranging from '1' to '7'. If you enter a value outside that range, the line
           * width defaults to '2'.
           */
          width?: number;

          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * mouse over show one catergory detail
           */
          showGroupDetail?: boolean;

          /**
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           */
          formatRules?: object[];

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Settings for the tooltip
           */
          toolTip?: sap.viz.ui5.types.Line_tooltip;

          /**
           * Settings for animations.
           */
          animation?: sap.viz.ui5.types.Line_animation;

          /**
           * Settings for marker/data point graphics
           */
          marker?: sap.viz.ui5.types.Line_marker;

          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Settings for the hoverline.
           */
          hoverline?: sap.viz.ui5.types.Line_hoverline;
        }

        interface Line_animationOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether the data loading animation is enabled
           */
          dataLoading?: boolean;

          /**
           * Set whether the data updating animation is enabled
           */
          dataUpdating?: boolean;

          /**
           * Set whether the resizing animation is enabled
           */
          resizing?: boolean;
        }

        interface Line_hoverlineOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the visibility of the hoverline.
           */
          visible?: boolean;
        }

        interface Line_markerOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the visibility of the markers
           */
          visible?: boolean;

          /**
           * Set the shape of the markers
           */
          shape?: sap.viz.ui5.types.Line_marker_shape;

          /**
           * Set the marker size for data points, ranging from '4' to '32'. If you enter a value outside that range,
           * the marker size defaults to '6'.
           */
          size?: number;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the number to enable events for markers when they are invisible. If the total amount of markers is
           * bigger than this value, markers will remain hidden when selected or hovered over. The default value is
           * Number.POSITIVE_INFINITY, which is the largest possible value.
           */
          number?: number;
        }

        interface Line_tooltipOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether the tooltip is enabled
           */
          enabled?: boolean;
        }

        interface PieOpts extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the color palette for the sectors of the pie chart
           */
          colorPalette?: string[];

          /**
           * Set the chart to display as a donut or a pie. If this value is set to 'true', the chart displays as a
           * donut. If this value is set to 'false', the chart displays as a pie.
           */
          isDonut?: boolean;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set whether the chart displays as a geo pie chart. If this value is set to 'true', the chart displays
           * as a geo pie chart. If this value is set to 'false', the chart does not display as a geo pie chart.
           */
          isGeoPie?: boolean;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the vertical aligment of the chart
           */
          valign?: sap.viz.ui5.types.Pie_valign;

          /**
           * Set the drawing effect of the pie
           */
          drawingEffect?: sap.viz.ui5.types.Pie_drawingEffect;

          /**
           * Rules to format data points, sample: [{condition: [{Key1:"Value1", Key2:"Value2"}], color:"#00ff00"},
           * {condition: [{Key3:"Value3"}], color:"#00ffff"}]. Each rule has two properties: "condition" and "color".
           * The relation among the condition object in "condition" array is "OR", which means the data point that
           * met any condition in the array will apply the "color". If multiple rules could apply on the same data
           * point, the last rule would take effect.
           */
          formatRules?: object[];

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the plot scale of the pie
           */
          plotScale?: number;

          /**
           * Settings for animations in the plot area
           */
          animation?: sap.viz.ui5.types.Pie_animation;

          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Settings for tooltip related properties
           */
          toolTip?: sap.viz.ui5.types.Pie_tooltip;
        }

        interface Pie_animationOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether the data loading animation is enabled
           */
          dataLoading?: boolean;

          /**
           * Set whether the data updating animation is enabled
           */
          dataUpdating?: boolean;

          /**
           * Set whether the resizing animation is enabled
           */
          resizing?: boolean;
        }

        interface Pie_tooltipOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether tooltip is enabled
           */
          visible?: boolean;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the number format of the measure value in tooltip
           */
          valueFormat?: string;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the number format of the percentage label in tooltip
           */
          percentageFormat?: string;

          /**
           * Set format string of tooltip. The first string is applied to value and the second is applied to percentage.Any
           * character in "MDYHSAmdyhsa#?%0@" is reserved as a token for format code.
           */
          formatString?: string[];
        }

        interface RootContainerOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Settings for the layout of the root container
           */
          layout?: sap.viz.ui5.types.RootContainer_layout;
        }

        interface RootContainer_layoutOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Indicates the layout adjust policy
           */
          adjustPolicy?: string;

          /**
           * Set the universal padding value. This single value is applied to all sides of the chart. Individual settings
           * for each edge are also supported.
           */
          padding?: number;

          /**
           * Set the padding value for the top side
           */
          paddingTop?: number;

          /**
           * Set the padding value for the left side
           */
          paddingLeft?: number;

          /**
           * Set the padding value for the right side
           */
          paddingRight?: number;

          /**
           * Set the padding value for the bottom side
           */
          paddingBottom?: number;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Vertical gap value between UI components
           */
          vgap?: number;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Horizontal gap value between UI components
           */
          hgap?: number;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Hide axis title firstly if the space is limited.
           */
          hideAxisTitleFirst?: boolean;
        }

        interface ScatterOpts extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the color of the bubbles
           */
          colorPalette?: string[];

          /**
           * Set the shape of the bubbles
           */
          shapePalette?: string[];

          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the max value of primary values
           */
          maxPriValue?: number;

          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the minimum value of primary values
           */
          minPriValue?: number;

          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the max value of secondary values
           */
          maxSecValue?: number;

          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the minimum value of secondary values
           */
          minSecValue?: number;

          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set whether it is time based scatter/bubble
           */
          timeBased?: boolean;

          /**
           * Set the drawing effect for the bubbles
           */
          drawingEffect?: sap.viz.ui5.types.Scatter_drawingEffect;

          /**
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           */
          formatRules?: object[];

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Show/hide the data of negetive value.
           */
          showNegativeValues?: boolean;

          /**
           * Set the marker size for data points. The available range is from '4' to '32'.
           */
          markerSize?: number;

          /**
           * Settings for animations in bubble and scatter charts
           */
          animation?: sap.viz.ui5.types.Scatter_animation;

          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set tooltip related properties.
           */
          axisTooltip?: sap.viz.ui5.types.Scatter_axisTooltip;

          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Settings for hoverline properties.
           */
          hoverline?: sap.viz.ui5.types.Scatter_hoverline;
        }

        interface Scatter_animationOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether the data loading animation is enabled
           */
          dataLoading?: boolean;

          /**
           * Set whether the data updating animation is enabled
           */
          dataUpdating?: boolean;

          /**
           * Set whether the resizing animation is enabled
           */
          resizing?: boolean;
        }

        interface Scatter_axisTooltipOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * enabled/disabled tooltip.
           */
          visible?: boolean;

          /**
           * Set format string for small tooltip.The first one is applied to xAxis and the second one is applied to
           * yAxis.Any character in "MDYHSAmdyhsa#?%0@" is reserved as a token for format code.
           */
          formatString?: string[];
        }

        interface Scatter_hoverlineOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set to enabled/disabled hoverline or not.
           */
          visible?: boolean;
        }

        interface StackedVerticalBarOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the orientation of the plot area.
           */
          orientation?: sap.viz.ui5.types.StackedVerticalBar_orientation;

          /**
           * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension
           * bound to the legend.
           */
          colorPalette?: string[];

          /**
           * Set the color palette for axis 1 in dual charts.
           */
          primaryValuesColorPalette?: string[];

          /**
           * Set the color palette for axis 2 in dual chart.
           */
          secondaryValuesColorPalette?: string[];

          /**
           * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy.
           * If this value is set to 'normal', the plot area is matte.
           */
          drawingEffect?: sap.viz.ui5.types.StackedVerticalBar_drawingEffect;

          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set whether bars have rounded corners
           */
          isRoundCorner?: boolean;

          /**
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           */
          formatRules?: object[];

          /**
           * Set the display mode for stacked vertical bar charts
           */
          mode?: sap.viz.ui5.types.StackedVerticalBar_mode;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Settings for tooltip related properties
           */
          toolTip?: sap.viz.ui5.types.StackedVerticalBar_tooltip;

          /**
           * Settings for animations in the plot area
           */
          animation?: sap.viz.ui5.types.StackedVerticalBar_animation;
        }

        interface StackedVerticalBar_animationOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether the data loading animation is enabled
           */
          dataLoading?: boolean;

          /**
           * Set whether the data updating animation is enabled
           */
          dataUpdating?: boolean;

          /**
           * Set whether the resizing animation is enabled
           */
          resizing?: boolean;
        }

        interface StackedVerticalBar_tooltipOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether the tooltip is enabled
           */
          enabled?: boolean;
        }

        interface TitleOpts extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the visibility of the main title
           */
          visible?: boolean;

          /**
           * Set the text of the main title
           */
          text?: string;

          /**
           * Set the alignment of the main title
           */
          alignment?: sap.viz.ui5.types.Title_alignment;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Settings for layout of title
           */
          layout?: sap.viz.ui5.types.Title_layout;
        }

        interface Title_layoutOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the position of the title
           */
          position?: string;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the priority of the position for the title
           */
          priority?: number;
        }

        interface TooltipOpts extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * A callback function can be specified as a parameter and passed to chart options when the user calls the
           * createViz function. This callback function is called before the tooltip is rendered. The input parameter
           * is a dom element, which is at the bottom of the tooltip. Any dom element such as a button can be appended
           * to this parent node. It can only be called when the tooltip is in actionMode.
           */
          preRender?: any;

          /**
           * A callback function can be specified as a parameter and passed to chart options when the user calls the
           * createViz function. This callback function is called after the tooltip is rendered. The user can select
           * and change dom elements' properties under the tooltip element.
           */
          postRender?: any;

          /**
           * Set the visibility of the tooltip
           */
          visible?: boolean;

          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the drawing effect for the tooltip
           */
          drawingEffect?: sap.viz.ui5.types.Tooltip_drawingEffect;

          /**
           * Set the format strings for text in the tooltip. For dual axis charts, the first array is applied to the
           * primary axis and the second array is applied to the second axis. If you enter fewer format strings into
           * an array than there are measures in the respective axis, then the last format string is applied to all
           * remaining measures. The following characters are reserved as tokens for format code: MDYHSAmdyhsa#?%0@.The
           * following is an example of an array for a chart with two measures: [["#,##0.00 DM;-#,##.00 DM","#,##.00;-#,##.00"]].
           */
          formatString?: any[];

          /**
           * Set whether the tooltip appears in the chart area
           */
          layinChart?: boolean;

          /**
           * Define the background style of the tooltip.
           */
          background?: sap.viz.ui5.types.Tooltip_background;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Define the style of the label of the tooltip footer.
           */
          footerLabel?: sap.viz.ui5.types.Tooltip_footerLabel;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Define the color of the value of the tooltip separation line.
           */
          separationLine?: sap.viz.ui5.types.Tooltip_separationLine;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Define the color of the dimension name of the tooltip body.
           */
          bodyDimensionLabel?: sap.viz.ui5.types.Tooltip_bodyDimensionLabel;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Define the color of the dimension value of the tooltip body.
           */
          bodyDimensionValue?: sap.viz.ui5.types.Tooltip_bodyDimensionValue;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Define the color of the measure name of the tooltip body.
           */
          bodyMeasureLabel?: sap.viz.ui5.types.Tooltip_bodyMeasureLabel;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Define the color of the measure value of the tooltip body.
           */
          bodyMeasureValue?: sap.viz.ui5.types.Tooltip_bodyMeasureValue;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Define the background and border color of tooltip close button.
           */
          closeButton?: sap.viz.ui5.types.Tooltip_closeButton;
        }

        interface Tooltip_backgroundOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Define the background color of the tooltip.
           */
          color?: string;

          /**
           * Define the background border color of the tooltip.
           */
          borderColor?: string;
        }

        interface Tooltip_bodyDimensionLabelOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Property color
           */
          color?: string;
        }

        interface Tooltip_bodyDimensionValueOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Property color
           */
          color?: string;
        }

        interface Tooltip_bodyMeasureLabelOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Property color
           */
          color?: string;
        }

        interface Tooltip_bodyMeasureValueOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Property color
           */
          color?: string;
        }

        interface Tooltip_closeButtonOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Property backgroundColor
           */
          backgroundColor?: string;

          /**
           * Property borderColor
           */
          borderColor?: string;
        }

        interface Tooltip_footerLabelOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Define the color of the label of the tooltip footer.
           */
          color?: string;
        }

        interface Tooltip_separationLineOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Property borderBottomColor
           */
          borderBottomColor?: string;
        }

        interface TreemapOpts extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the starting color of the tree map
           */
          startColor?: string;

          /**
           * Set the end color of the tree map
           */
          endColor?: string;

          /**
           * Set the color palette for the various sectors. For example, ["#748CB2", "#9CC677", "#EACF5E", "#F9AD79",
           * "#D16A7C"].
           */
          colorPalette?: string[];

          /**
           * Set the MBC legend values. For example, [10,11,12,13,14,15]. The values in the array should be in ascending
           * order. If the number of values in the array is smaller than the MBC legend segment number, the MBC legend
           * automatically calculates the values according to the data. If the number of values in the legendValues
           * array is larger than MBC legend segment number, then only the first "segment number + 1" values are used.
           */
          legendValues?: number[];

          /**
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           */
          formatRules?: object[];

          /**
           * Settings for the border
           */
          border?: sap.viz.ui5.types.Treemap_border;

          /**
           * Settings for animations in the plot area
           */
          animation?: sap.viz.ui5.types.Treemap_animation;

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Settings for tooltip
           */
          toolTip?: sap.viz.ui5.types.Treemap_tooltip;
        }

        interface Treemap_animationOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether the data loading animation is enabled
           */
          dataLoading?: boolean;

          /**
           * Set whether the data updating animation is enabled
           */
          dataUpdating?: boolean;

          /**
           * Set whether the resizing animation is enabled
           */
          resizing?: boolean;
        }

        interface Treemap_borderOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set the visibility of the zone edge
           */
          visible?: boolean;
        }

        interface Treemap_tooltipOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether the tooltip is enabled
           */
          enabled?: boolean;
        }

        interface VerticalBarOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the orientation of the plot area.
           */
          orientation?: sap.viz.ui5.types.VerticalBar_orientation;

          /**
           * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension
           * bound to the legend.
           */
          colorPalette?: string[];

          /**
           * Set the color palette for axis 1 in dual charts.
           */
          primaryValuesColorPalette?: string[];

          /**
           * Set the color palette for axis 2 in dual chart.
           */
          secondaryValuesColorPalette?: string[];

          /**
           * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy.
           * If this value is set to 'normal', the plot area is matte.
           */
          drawingEffect?: sap.viz.ui5.types.VerticalBar_drawingEffect;

          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set whether bars have rounded corners
           */
          isRoundCorner?: boolean;

          /**
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           */
          formatRules?: object[];

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Settings for tooltip related properties
           */
          toolTip?: sap.viz.ui5.types.VerticalBar_tooltip;

          /**
           * Settings for animations in the plot area
           */
          animation?: sap.viz.ui5.types.VerticalBar_animation;
        }

        interface VerticalBar_animationOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether the data loading animation is enabled
           */
          dataLoading?: boolean;

          /**
           * Set whether the data updating animation is enabled
           */
          dataUpdating?: boolean;

          /**
           * Set whether the resizing animation is enabled
           */
          resizing?: boolean;
        }

        interface VerticalBar_tooltipOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * Set whether the tooltip is enabled
           */
          enabled?: boolean;
        }

        interface XYContainerOpts
          extends sap.viz.ui5.core.BaseStructuredTypeOpts {
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Set the angle for the pie chart. This value should be between '-180' and '180'.
           */
          yAngle?: number;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Module sap.viz.ui5.types.Area
         */
        class Area extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Area
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: AreaOpts
          );

          /**
           * Destroys the animation in the aggregation {@link #getAnimation animation}.
           */
          destroyAnimation(): sap.viz.ui5.types.Area;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the hoverline in the aggregation {@link #getHoverline hoverline}.
           */
          destroyHoverline(): sap.viz.ui5.types.Area;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the marker in the aggregation {@link #getMarker marker}.
           */
          destroyMarker(): sap.viz.ui5.types.Area;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
           */
          destroyToolTip(): sap.viz.ui5.types.Area;
          /**
           * Creates a new subclass of class sap.viz.ui5.types.Area with name `sClassName` and enriches it with the
           * information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets content of aggregation {@link #getAnimation animation}.
           *
           * Settings for animations in the plot area
           */
          getAnimation(): sap.viz.ui5.types.Area_animation;
          /**
           * Gets current value of property {@link #getColorPalette colorPalette}.
           *
           * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension
           * bound to the legend.
           *
           * Default value is `#748CB2,#9CC677,#EACF5E,#F9AD79,#D16A7C,#8873A2,#3A95B3,#B6D949,#FDD36C,#F47958,#A65084,#0063B1,#0DA841,#FCB71D,#F05620,#B22D6E,#3C368E,#8FB2CF,#95D4AB,#EAE98F,#F9BE92,#EC9A99,#BC98BD,#1EB7B2,#73C03C,#F48323,#EB271B,#D9B5CA,#AED1DA,#DFECB2,#FCDAB0,#F5BCB4`.
           */
          getColorPalette(): string[];
          /**
           * Gets current value of property {@link #getDrawingEffect drawingEffect}.
           *
           * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy.
           * If this value is set to 'normal', the plot area is matte.
           *
           * Default value is `normal`.
           */
          getDrawingEffect(): sap.viz.ui5.types.Area_drawingEffect;
          /**
           * Gets current value of property {@link #getFormatRules formatRules}.
           *
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           */
          getFormatRules(): object[];
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getHoverline hoverline}.
           *
           * Settings for the hoverline.
           */
          getHoverline(): sap.viz.ui5.types.Area_hoverline;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getMarker marker}.
           *
           * Settings for marker and data point graphics
           */
          getMarker(): sap.viz.ui5.types.Area_marker;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Area.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getMode mode}.
           *
           * Set the display mode of the area chart
           *
           * Default value is `comparison`.
           */
          getMode(): sap.viz.ui5.types.Area_mode;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getOrientation orientation}.
           *
           * Set whether the area chart is vertical or horizontal
           *
           * Default value is `vertical`.
           */
          getOrientation(): sap.viz.ui5.types.Area_orientation;
          /**
           * Gets current value of property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
           *
           * Set the color palette for axis 1 in dual charts.
           *
           * Default value is `#8FBADD,#B8D4E9,#7AAED6,#A3C7E3,#3D88C4,#66A1D0,#297CBE,#5295CA,#005BA3,#146FB7,#005395,#0063B1`.
           */
          getPrimaryValuesColorPalette(): string[];
          /**
           * Gets current value of property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
           *
           * Set the color palette for axis 2 in dual chart.
           *
           * Default value is `#F6A09B,#F9C3C0,#F58E88,#F8B1AD,#F05B52,#F37D76,#EE4A40,#F16C64,#D92419,#ED382D,#C52117,#EB271B`.
           */
          getSecondaryValuesColorPalette(): string[];
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getToolTip toolTip}.
           *
           * Settings for the tooltip
           */
          getToolTip(): sap.viz.ui5.types.Area_tooltip;
          /**
           * Sets the aggregated {@link #getAnimation animation}.
           */
          setAnimation(
            /**
             * The animation to set
             */
            oAnimation: sap.viz.ui5.types.Area_animation
          ): sap.viz.ui5.types.Area;
          /**
           * Sets a new value for property {@link #getColorPalette colorPalette}.
           *
           * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension
           * bound to the legend.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#748CB2,#9CC677,#EACF5E,#F9AD79,#D16A7C,#8873A2,#3A95B3,#B6D949,#FDD36C,#F47958,#A65084,#0063B1,#0DA841,#FCB71D,#F05620,#B22D6E,#3C368E,#8FB2CF,#95D4AB,#EAE98F,#F9BE92,#EC9A99,#BC98BD,#1EB7B2,#73C03C,#F48323,#EB271B,#D9B5CA,#AED1DA,#DFECB2,#FCDAB0,#F5BCB4`.
           */
          setColorPalette(
            /**
             * New value for property `colorPalette`
             */
            sColorPalette: string[]
          ): sap.viz.ui5.types.Area;
          /**
           * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
           *
           * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy.
           * If this value is set to 'normal', the plot area is matte.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `normal`.
           */
          setDrawingEffect(
            /**
             * New value for property `drawingEffect`
             */
            sDrawingEffect: sap.viz.ui5.types.Area_drawingEffect
          ): sap.viz.ui5.types.Area;
          /**
           * Sets a new value for property {@link #getFormatRules formatRules}.
           *
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setFormatRules(
            /**
             * New value for property `formatRules`
             */
            sFormatRules: object[]
          ): sap.viz.ui5.types.Area;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getHoverline hoverline}.
           */
          setHoverline(
            /**
             * The hoverline to set
             */
            oHoverline: sap.viz.ui5.types.Area_hoverline
          ): sap.viz.ui5.types.Area;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getMarker marker}.
           */
          setMarker(
            /**
             * The marker to set
             */
            oMarker: sap.viz.ui5.types.Area_marker
          ): sap.viz.ui5.types.Area;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getMode mode}.
           *
           * Set the display mode of the area chart
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `comparison`.
           */
          setMode(
            /**
             * New value for property `mode`
             */
            sMode: sap.viz.ui5.types.Area_mode
          ): sap.viz.ui5.types.Area;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getOrientation orientation}.
           *
           * Set whether the area chart is vertical or horizontal
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `vertical`.
           */
          setOrientation(
            /**
             * New value for property `orientation`
             */
            sOrientation: sap.viz.ui5.types.Area_orientation
          ): sap.viz.ui5.types.Area;
          /**
           * Sets a new value for property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
           *
           * Set the color palette for axis 1 in dual charts.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#8FBADD,#B8D4E9,#7AAED6,#A3C7E3,#3D88C4,#66A1D0,#297CBE,#5295CA,#005BA3,#146FB7,#005395,#0063B1`.
           */
          setPrimaryValuesColorPalette(
            /**
             * New value for property `primaryValuesColorPalette`
             */
            sPrimaryValuesColorPalette: string[]
          ): sap.viz.ui5.types.Area;
          /**
           * Sets a new value for property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
           *
           * Set the color palette for axis 2 in dual chart.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#F6A09B,#F9C3C0,#F58E88,#F8B1AD,#F05B52,#F37D76,#EE4A40,#F16C64,#D92419,#ED382D,#C52117,#EB271B`.
           */
          setSecondaryValuesColorPalette(
            /**
             * New value for property `secondaryValuesColorPalette`
             */
            sSecondaryValuesColorPalette: string[]
          ): sap.viz.ui5.types.Area;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getToolTip toolTip}.
           */
          setToolTip(
            /**
             * The toolTip to set
             */
            oToolTip: sap.viz.ui5.types.Area_tooltip
          ): sap.viz.ui5.types.Area;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for animations in the plot area
         */
        class Area_animation extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Area_animation
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Area_animationOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Area_animation with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getDataLoading dataLoading}.
           *
           * Set whether the data loading animation is enabled
           *
           * Default value is `true`.
           */
          getDataLoading(): boolean;
          /**
           * Gets current value of property {@link #getDataUpdating dataUpdating}.
           *
           * Set whether the data updating animation is enabled
           *
           * Default value is `true`.
           */
          getDataUpdating(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Area_animation.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getResizing resizing}.
           *
           * Set whether the resizing animation is enabled
           *
           * Default value is `true`.
           */
          getResizing(): boolean;
          /**
           * Sets a new value for property {@link #getDataLoading dataLoading}.
           *
           * Set whether the data loading animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setDataLoading(
            /**
             * New value for property `dataLoading`
             */
            bDataLoading: boolean
          ): sap.viz.ui5.types.Area_animation;
          /**
           * Sets a new value for property {@link #getDataUpdating dataUpdating}.
           *
           * Set whether the data updating animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setDataUpdating(
            /**
             * New value for property `dataUpdating`
             */
            bDataUpdating: boolean
          ): sap.viz.ui5.types.Area_animation;
          /**
           * Sets a new value for property {@link #getResizing resizing}.
           *
           * Set whether the resizing animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setResizing(
            /**
             * New value for property `resizing`
             */
            bResizing: boolean
          ): sap.viz.ui5.types.Area_animation;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Settings for the hoverline.
         */
        class Area_hoverline extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Area_hoverline
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Area_hoverlineOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Area_hoverline with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Area_hoverline.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * Set the visibility of the hoverline.
           *
           * Default value is `true`.
           */
          getVisible(): boolean;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * Set the visibility of the hoverline.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Area_hoverline;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Settings for marker and data point graphics
         */
        class Area_marker extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Area_marker
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Area_markerOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Area_marker with name `sClassName` and enriches it
           * with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Area_marker.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getNumber number}.
           *
           * Set the number to enable events for markers when they are invisible. If the total amount of markers is
           * bigger than this value, markers will remain hidden when selected or hovered over. The default value is
           * Number.POSITIVE_INFINITY, which is the largest possible value.
           */
          getNumber(): number;
          /**
           * Gets current value of property {@link #getShape shape}.
           *
           * Set the shape of the markers
           *
           * Default value is `circle`.
           */
          getShape(): sap.viz.ui5.types.Area_marker_shape;
          /**
           * Gets current value of property {@link #getSize size}.
           *
           * Set the marker size for data points, ranging from '4' and '32'. If you enter a value outside that range,
           * the marker size defaults to '4'.
           *
           * Default value is `8`.
           */
          getSize(): number;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getVisible visible}.
           *
           * Set the visibility of the markers
           *
           * Default value is `true`.
           */
          getVisible(): boolean;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getNumber number}.
           *
           * Set the number to enable events for markers when they are invisible. If the total amount of markers is
           * bigger than this value, markers will remain hidden when selected or hovered over. The default value is
           * Number.POSITIVE_INFINITY, which is the largest possible value.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setNumber(
            /**
             * New value for property `number`
             */
            iNumber: number
          ): sap.viz.ui5.types.Area_marker;
          /**
           * Sets a new value for property {@link #getShape shape}.
           *
           * Set the shape of the markers
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `circle`.
           */
          setShape(
            /**
             * New value for property `shape`
             */
            sShape: sap.viz.ui5.types.Area_marker_shape
          ): sap.viz.ui5.types.Area_marker;
          /**
           * Sets a new value for property {@link #getSize size}.
           *
           * Set the marker size for data points, ranging from '4' and '32'. If you enter a value outside that range,
           * the marker size defaults to '4'.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `8`.
           */
          setSize(
            /**
             * New value for property `size`
             */
            iSize: number
          ): sap.viz.ui5.types.Area_marker;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getVisible visible}.
           *
           * Set the visibility of the markers
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Area_marker;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Settings for the tooltip
         */
        class Area_tooltip extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Area_tooltip
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Area_tooltipOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Area_tooltip with name `sClassName` and enriches it
           * with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getEnabled enabled}.
           *
           * Set whether the tooltip is enabled
           *
           * Default value is `true`.
           */
          getEnabled(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Area_tooltip.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Sets a new value for property {@link #getEnabled enabled}.
           *
           * Set whether the tooltip is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setEnabled(
            /**
             * New value for property `enabled`
             */
            bEnabled: boolean
          ): sap.viz.ui5.types.Area_tooltip;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Module sap.viz.ui5.types.Axis
         */
        class Axis extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Axis
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: AxisOpts
          );

          /**
           * Destroys the axisline in the aggregation {@link #getAxisline axisline}.
           */
          destroyAxisline(): sap.viz.ui5.types.Axis;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the axisTick in the aggregation {@link #getAxisTick axisTick}.
           */
          destroyAxisTick(): sap.viz.ui5.types.Axis;
          /**
           * Destroys the gridline in the aggregation {@link #getGridline gridline}.
           */
          destroyGridline(): sap.viz.ui5.types.Axis;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the indicator in the aggregation {@link #getIndicator indicator}.
           */
          destroyIndicator(): sap.viz.ui5.types.Axis;
          /**
           * Destroys the label in the aggregation {@link #getLabel label}.
           */
          destroyLabel(): sap.viz.ui5.types.Axis;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the layoutInfo in the aggregation {@link #getLayoutInfo layoutInfo}.
           */
          destroyLayoutInfo(): sap.viz.ui5.types.Axis;
          /**
           * Destroys the scale in the aggregation {@link #getScale scale}.
           */
          destroyScale(): sap.viz.ui5.types.Axis;
          /**
           * Destroys the title in the aggregation {@link #getTitle title}.
           */
          destroyTitle(): sap.viz.ui5.types.Axis;
          /**
           * Creates a new subclass of class sap.viz.ui5.types.Axis with name `sClassName` and enriches it with the
           * information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets content of aggregation {@link #getAxisline axisline}.
           *
           * Settings for the axis line
           */
          getAxisline(): sap.viz.ui5.types.Axis_axisline;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getAxisTick axisTick}.
           *
           * Settings for the ticks on the axis
           */
          getAxisTick(): sap.viz.ui5.types.Axis_axisTick;
          /**
           * Gets current value of property {@link #getColor color}.
           *
           * Set the color of the axis line
           *
           * Default value is `#6c6c6c`.
           */
          getColor(): string;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getEnableLabelSelection enableLabelSelection}.
           *
           * Set whether the label selection effect is enabled. For mobile devices, the default value is 'false'.
           *
           * Default value is `true`.
           */
          getEnableLabelSelection(): boolean;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getForceLabelArea forceLabelArea}.
           *
           * Set whether the label area is limited to the text area
           *
           * Default value is `false`.
           */
          getForceLabelArea(): boolean;
          /**
           * Gets content of aggregation {@link #getGridline gridline}.
           *
           * Settings for the gridlines on the axis
           */
          getGridline(): sap.viz.ui5.types.Axis_gridline;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getHideTitleFirst hideTitleFirst}.
           *
           * Hide axis title firstly if the space is limited.
           *
           * Default value is `false`.
           */
          getHideTitleFirst(): boolean;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getIndicator indicator}.
           *
           * Settings for the axis indicator
           */
          getIndicator(): sap.viz.ui5.types.Axis_indicator;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getIsIndependentMode isIndependentMode}.
           *
           * Set whether the axis works in independent mode. Currently, this property is used only for boxplot charts.
           *
           * Default value is `false`.
           */
          getIsIndependentMode(): boolean;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getIsKeepFirstAndLastLabel isKeepFirstAndLastLabel}.
           *
           * Try to keep the first label and last label when the space is limited.
           *
           * Default value is `false`.
           */
          getIsKeepFirstAndLastLabel(): boolean;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getIsPercentMode isPercentMode}.
           *
           * Show the label as a percentage. For example '0.1' would show as '10'.
           *
           * Default value is `false`.
           */
          getIsPercentMode(): boolean;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getIsTruncateAvailable isTruncateAvailable}.
           *
           * Set whether truncation logic is available for the category axis
           *
           * Default value is `true`.
           */
          getIsTruncateAvailable(): boolean;
          /**
           * Gets content of aggregation {@link #getLabel label}.
           *
           * Settings for the labels on this axis
           */
          getLabel(): sap.viz.ui5.types.Axis_label;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getLayoutInfo layoutInfo}.
           *
           * Settings for the layout of the category axis. This property only works for category type axes.
           */
          getLayoutInfo(): sap.viz.ui5.types.Axis_layoutInfo;
          /**
           * Gets current value of property {@link #getLineSize lineSize}.
           *
           * Set the thickness of the axis line
           *
           * Default value is `1`.
           */
          getLineSize(): number;
          /**
           * Gets current value of property {@link #getMaxSizeRatio maxSizeRatio}.
           *
           * The ratio to limit axis' space in its container, which only accepts values between 0 and 1(0 and 1 included).
           * All the invalid values would be replaced by default value.
           *
           * Default value is `0.25`.
           */
          getMaxSizeRatio(): number;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Axis.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getPosition position}.
           *
           * Set the position of the axis
           *
           * Default value is `bottom`.
           */
          getPosition(): sap.viz.ui5.types.Axis_position;
          /**
           * Gets content of aggregation {@link #getScale scale}.
           *
           * Set the scale of the value axis. This property only works on value type axes.
           */
          getScale(): sap.viz.ui5.types.Axis_scale;
          /**
           * Gets content of aggregation {@link #getTitle title}.
           *
           * Settings for the axis title
           */
          getTitle(): sap.viz.ui5.types.Axis_title;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getType type}.
           *
           * Set the axis type
           *
           * Default value is `value`.
           */
          getType(): sap.viz.ui5.types.Axis_type;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * Set the visibility of the entire axis, including the axis line, gridlines, and labels
           *
           * Default value is `true`.
           */
          getVisible(): boolean;
          /**
           * Sets the aggregated {@link #getAxisline axisline}.
           */
          setAxisline(
            /**
             * The axisline to set
             */
            oAxisline: sap.viz.ui5.types.Axis_axisline
          ): sap.viz.ui5.types.Axis;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getAxisTick axisTick}.
           */
          setAxisTick(
            /**
             * The axisTick to set
             */
            oAxisTick: sap.viz.ui5.types.Axis_axisTick
          ): sap.viz.ui5.types.Axis;
          /**
           * Sets a new value for property {@link #getColor color}.
           *
           * Set the color of the axis line
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#6c6c6c`.
           */
          setColor(
            /**
             * New value for property `color`
             */
            sColor: string
          ): sap.viz.ui5.types.Axis;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getEnableLabelSelection enableLabelSelection}.
           *
           * Set whether the label selection effect is enabled. For mobile devices, the default value is 'false'.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setEnableLabelSelection(
            /**
             * New value for property `enableLabelSelection`
             */
            bEnableLabelSelection: boolean
          ): sap.viz.ui5.types.Axis;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getForceLabelArea forceLabelArea}.
           *
           * Set whether the label area is limited to the text area
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setForceLabelArea(
            /**
             * New value for property `forceLabelArea`
             */
            bForceLabelArea: boolean
          ): sap.viz.ui5.types.Axis;
          /**
           * Sets the aggregated {@link #getGridline gridline}.
           */
          setGridline(
            /**
             * The gridline to set
             */
            oGridline: sap.viz.ui5.types.Axis_gridline
          ): sap.viz.ui5.types.Axis;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getHideTitleFirst hideTitleFirst}.
           *
           * Hide axis title firstly if the space is limited.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setHideTitleFirst(
            /**
             * New value for property `hideTitleFirst`
             */
            bHideTitleFirst: boolean
          ): sap.viz.ui5.types.Axis;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getIndicator indicator}.
           */
          setIndicator(
            /**
             * The indicator to set
             */
            oIndicator: sap.viz.ui5.types.Axis_indicator
          ): sap.viz.ui5.types.Axis;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getIsIndependentMode isIndependentMode}.
           *
           * Set whether the axis works in independent mode. Currently, this property is used only for boxplot charts.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setIsIndependentMode(
            /**
             * New value for property `isIndependentMode`
             */
            bIsIndependentMode: boolean
          ): sap.viz.ui5.types.Axis;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getIsKeepFirstAndLastLabel isKeepFirstAndLastLabel}.
           *
           * Try to keep the first label and last label when the space is limited.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setIsKeepFirstAndLastLabel(
            /**
             * New value for property `isKeepFirstAndLastLabel`
             */
            bIsKeepFirstAndLastLabel: boolean
          ): sap.viz.ui5.types.Axis;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getIsPercentMode isPercentMode}.
           *
           * Show the label as a percentage. For example '0.1' would show as '10'.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setIsPercentMode(
            /**
             * New value for property `isPercentMode`
             */
            bIsPercentMode: boolean
          ): sap.viz.ui5.types.Axis;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getIsTruncateAvailable isTruncateAvailable}.
           *
           * Set whether truncation logic is available for the category axis
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setIsTruncateAvailable(
            /**
             * New value for property `isTruncateAvailable`
             */
            bIsTruncateAvailable: boolean
          ): sap.viz.ui5.types.Axis;
          /**
           * Sets the aggregated {@link #getLabel label}.
           */
          setLabel(
            /**
             * The label to set
             */
            oLabel: sap.viz.ui5.types.Axis_label
          ): sap.viz.ui5.types.Axis;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getLayoutInfo layoutInfo}.
           */
          setLayoutInfo(
            /**
             * The layoutInfo to set
             */
            oLayoutInfo: sap.viz.ui5.types.Axis_layoutInfo
          ): sap.viz.ui5.types.Axis;
          /**
           * Sets a new value for property {@link #getLineSize lineSize}.
           *
           * Set the thickness of the axis line
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `1`.
           */
          setLineSize(
            /**
             * New value for property `lineSize`
             */
            iLineSize: number
          ): sap.viz.ui5.types.Axis;
          /**
           * Sets a new value for property {@link #getMaxSizeRatio maxSizeRatio}.
           *
           * The ratio to limit axis' space in its container, which only accepts values between 0 and 1(0 and 1 included).
           * All the invalid values would be replaced by default value.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `0.25`.
           */
          setMaxSizeRatio(
            /**
             * New value for property `maxSizeRatio`
             */
            fMaxSizeRatio: number
          ): sap.viz.ui5.types.Axis;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getPosition position}.
           *
           * Set the position of the axis
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `bottom`.
           */
          setPosition(
            /**
             * New value for property `position`
             */
            sPosition: sap.viz.ui5.types.Axis_position
          ): sap.viz.ui5.types.Axis;
          /**
           * Sets the aggregated {@link #getScale scale}.
           */
          setScale(
            /**
             * The scale to set
             */
            oScale: sap.viz.ui5.types.Axis_scale
          ): sap.viz.ui5.types.Axis;
          /**
           * Sets the aggregated {@link #getTitle title}.
           */
          setTitle(
            /**
             * The title to set
             */
            oTitle: sap.viz.ui5.types.Axis_title
          ): sap.viz.ui5.types.Axis;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getType type}.
           *
           * Set the axis type
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `value`.
           */
          setType(
            /**
             * New value for property `type`
             */
            sType: sap.viz.ui5.types.Axis_type
          ): sap.viz.ui5.types.Axis;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * Set the visibility of the entire axis, including the axis line, gridlines, and labels
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Axis;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for the axis line
         */
        class Axis_axisline extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Axis_axisline
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Axis_axislineOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Axis_axisline with name `sClassName` and enriches it
           * with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Axis_axisline.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * Set the visibility of the axis line
           *
           * Default value is `true`.
           */
          getVisible(): boolean;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * Set the visibility of the axis line
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Axis_axisline;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Settings for the ticks on the axis
         */
        class Axis_axisTick extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Axis_axisTick
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Axis_axisTickOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Axis_axisTick with name `sClassName` and enriches it
           * with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Axis_axisTick.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * Set visibility of the ticks on the axis. For mobile devices, the default value is 'false'.
           *
           * Default value is `true`.
           */
          getVisible(): boolean;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * Set visibility of the ticks on the axis. For mobile devices, the default value is 'false'.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Axis_axisTick;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for the gridlines on the axis
         */
        class Axis_gridline extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Axis_gridline
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Axis_gridlineOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Axis_gridline with name `sClassName` and enriches it
           * with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getColor color}.
           *
           * Set the color of the gridlines on the axis
           *
           * Default value is `#d8d8d8`.
           */
          getColor(): string;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getDisable disable}.
           *
           * Disable gridline or not
           *
           * Default value is `false`.
           */
          getDisable(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Axis_gridline.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getShowFirstLine showFirstLine}.
           *
           * Set whether the first gridline on the axis appears
           *
           * Default value is `false`.
           */
          getShowFirstLine(): boolean;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getShowLastLine showLastLine}.
           *
           * Set whether the last gridline on the axis appears
           *
           * Default value is `false`.
           */
          getShowLastLine(): boolean;
          /**
           * Gets current value of property {@link #getSize size}.
           *
           * Set the line size of gridlines on the axis
           *
           * Default value is `1`.
           */
          getSize(): number;
          /**
           * Gets current value of property {@link #getType type}.
           *
           * Set the line type of gridlines on the axis
           *
           * Default value is `line`.
           */
          getType(): sap.viz.ui5.types.Axis_gridline_type;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * Set the visibility of gridlines on the axis
           *
           * Default value is `true`.
           */
          getVisible(): boolean;
          /**
           * Sets a new value for property {@link #getColor color}.
           *
           * Set the color of the gridlines on the axis
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#d8d8d8`.
           */
          setColor(
            /**
             * New value for property `color`
             */
            sColor: string
          ): sap.viz.ui5.types.Axis_gridline;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getDisable disable}.
           *
           * Disable gridline or not
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setDisable(
            /**
             * New value for property `disable`
             */
            bDisable: boolean
          ): sap.viz.ui5.types.Axis_gridline;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getShowFirstLine showFirstLine}.
           *
           * Set whether the first gridline on the axis appears
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setShowFirstLine(
            /**
             * New value for property `showFirstLine`
             */
            bShowFirstLine: boolean
          ): sap.viz.ui5.types.Axis_gridline;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getShowLastLine showLastLine}.
           *
           * Set whether the last gridline on the axis appears
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setShowLastLine(
            /**
             * New value for property `showLastLine`
             */
            bShowLastLine: boolean
          ): sap.viz.ui5.types.Axis_gridline;
          /**
           * Sets a new value for property {@link #getSize size}.
           *
           * Set the line size of gridlines on the axis
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `1`.
           */
          setSize(
            /**
             * New value for property `size`
             */
            iSize: number
          ): sap.viz.ui5.types.Axis_gridline;
          /**
           * Sets a new value for property {@link #getType type}.
           *
           * Set the line type of gridlines on the axis
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `line`.
           */
          setType(
            /**
             * New value for property `type`
             */
            sType: sap.viz.ui5.types.Axis_gridline_type
          ): sap.viz.ui5.types.Axis_gridline;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * Set the visibility of gridlines on the axis
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Axis_gridline;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Settings for the axis indicator
         */
        class Axis_indicator extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Axis_indicator
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Axis_indicatorOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Axis_indicator with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getEnable enable}.
           *
           * Set the visibility of the axis indicator
           *
           * Default value is `false`.
           */
          getEnable(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Axis_indicator.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getEnable enable}.
           *
           * Set the visibility of the axis indicator
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setEnable(
            /**
             * New value for property `enable`
             */
            bEnable: boolean
          ): sap.viz.ui5.types.Axis_indicator;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for the labels on this axis
         */
        class Axis_label extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Axis_label
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Axis_labelOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Axis_label with name `sClassName` and enriches it with
           * the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getFormatString formatString}.
           *
           * Set the format strings for labels on the value axis. If a single format string is entered, it is applied
           * to all measures. A two-dimensional array of format strings can be entered for scatter matrix charts and
           * multiple charts with measureNamesDimension, to apply different formats to each sub-chart. For all other
           * chart types, the first value of the first dimension of a two-dimensional array is used as a global format
           * string. The following characters are reserved as tokens for format code: MDYHSAmdyhsa#?%0@. The letter
           * "u" is used at the end of a format string to format values in SI units. If the letter "u" is added to
           * a value between 1e12 and 1e-3 before SI units are applied, the value is formatted in exponential style.
           * The remaining syntax matches Excel format strings. The following is a simple example of a two-dimensional
           * array for a chart with two measures: [["#,##0.00 DM;-#,##.00 DM","#,##.00;-#,##.00"]].
           */
          getFormatString(): any;
          /**
           * Gets current value of property {@link #getHideSubLevels hideSubLevels}.
           *
           * Set the visibility of the sub levels of labels on this axis
           *
           * Default value is `false`.
           */
          getHideSubLevels(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Axis_label.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getNumberFormat numberFormat}.
           *
           * Set the number format for the value axis
           *
           * Default value is `empty string`.
           */
          getNumberFormat(): string;
          /**
           * Gets current value of property {@link #getUnitFormatType unitFormatType}.
           *
           * Set the unit format type. If set MetricUnits, unit K,M,G,T will be applied, eg, 5000 will display as
           * 5K, 5000000 will display as 5M, 5000000000 will display as 5G and so on. If set FinancialUnits, unit
           * K,M,B,T will be applied. 5000000000 will display as 5B.
           *
           * Default value is `FinancialUnits`.
           */
          getUnitFormatType(): sap.viz.ui5.types.Axis_label_unitFormatType;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * Set the visibility of the labels on this axis
           *
           * Default value is `true`.
           */
          getVisible(): boolean;
          /**
           * Sets a new value for property {@link #getFormatString formatString}.
           *
           * Set the format strings for labels on the value axis. If a single format string is entered, it is applied
           * to all measures. A two-dimensional array of format strings can be entered for scatter matrix charts and
           * multiple charts with measureNamesDimension, to apply different formats to each sub-chart. For all other
           * chart types, the first value of the first dimension of a two-dimensional array is used as a global format
           * string. The following characters are reserved as tokens for format code: MDYHSAmdyhsa#?%0@. The letter
           * "u" is used at the end of a format string to format values in SI units. If the letter "u" is added to
           * a value between 1e12 and 1e-3 before SI units are applied, the value is formatted in exponential style.
           * The remaining syntax matches Excel format strings. The following is a simple example of a two-dimensional
           * array for a chart with two measures: [["#,##0.00 DM;-#,##.00 DM","#,##.00;-#,##.00"]].
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setFormatString(
            /**
             * New value for property `formatString`
             */
            oFormatString: any
          ): sap.viz.ui5.types.Axis_label;
          /**
           * Sets a new value for property {@link #getHideSubLevels hideSubLevels}.
           *
           * Set the visibility of the sub levels of labels on this axis
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setHideSubLevels(
            /**
             * New value for property `hideSubLevels`
             */
            bHideSubLevels: boolean
          ): sap.viz.ui5.types.Axis_label;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getNumberFormat numberFormat}.
           *
           * Set the number format for the value axis
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `empty string`.
           */
          setNumberFormat(
            /**
             * New value for property `numberFormat`
             */
            sNumberFormat: string
          ): sap.viz.ui5.types.Axis_label;
          /**
           * Sets a new value for property {@link #getUnitFormatType unitFormatType}.
           *
           * Set the unit format type. If set MetricUnits, unit K,M,G,T will be applied, eg, 5000 will display as
           * 5K, 5000000 will display as 5M, 5000000000 will display as 5G and so on. If set FinancialUnits, unit
           * K,M,B,T will be applied. 5000000000 will display as 5B.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `FinancialUnits`.
           */
          setUnitFormatType(
            /**
             * New value for property `unitFormatType`
             */
            sUnitFormatType: sap.viz.ui5.types.Axis_label_unitFormatType
          ): sap.viz.ui5.types.Axis_label;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * Set the visibility of the labels on this axis
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Axis_label;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Settings for the layout of the category axis. This property only works for category type axes.
         */
        class Axis_layoutInfo extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Axis_layoutInfo
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Axis_layoutInfoOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Axis_layoutInfo with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getHeight height}.
           *
           * Set the height of the xAxis
           *
           * Default value is `0`.
           */
          getHeight(): number;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Axis_layoutInfo.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getWidth width}.
           *
           * Set the width of the xAxis
           *
           * Default value is `0`.
           */
          getWidth(): number;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getHeight height}.
           *
           * Set the height of the xAxis
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `0`.
           */
          setHeight(
            /**
             * New value for property `height`
             */
            fHeight: number
          ): sap.viz.ui5.types.Axis_layoutInfo;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getWidth width}.
           *
           * Set the width of the xAxis
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `0`.
           */
          setWidth(
            /**
             * New value for property `width`
             */
            fWidth: number
          ): sap.viz.ui5.types.Axis_layoutInfo;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Set the scale of the value axis. This property only works on value type axes.
         */
        class Axis_scale extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Axis_scale
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Axis_scaleOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Axis_scale with name `sClassName` and enriches it with
           * the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getFixedRange fixedRange}.
           *
           * Set whether the axis range is limited to the range between the minValue and maxValue
           *
           * Default value is `false`.
           */
          getFixedRange(): boolean;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getFixedTicks fixedTicks}.
           *
           * Set the specific ticks for value axis. The format should be [{value : "/value/", text : "/text/"}...].
           * If its length is less than 2, this property will not take effect.
           */
          getFixedTicks(): object[];
          /**
           * Gets current value of property {@link #getMaxValue maxValue}.
           *
           * Set the maxValue of the value axis
           *
           * Default value is `0`.
           */
          getMaxValue(): number;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Axis_scale.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getMinValue minValue}.
           *
           * Set the minValue of the value axis
           *
           * Default value is `0`.
           */
          getMinValue(): number;
          /**
           * Sets a new value for property {@link #getFixedRange fixedRange}.
           *
           * Set whether the axis range is limited to the range between the minValue and maxValue
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setFixedRange(
            /**
             * New value for property `fixedRange`
             */
            bFixedRange: boolean
          ): sap.viz.ui5.types.Axis_scale;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getFixedTicks fixedTicks}.
           *
           * Set the specific ticks for value axis. The format should be [{value : "/value/", text : "/text/"}...].
           * If its length is less than 2, this property will not take effect.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setFixedTicks(
            /**
             * New value for property `fixedTicks`
             */
            sFixedTicks: object[]
          ): sap.viz.ui5.types.Axis_scale;
          /**
           * Sets a new value for property {@link #getMaxValue maxValue}.
           *
           * Set the maxValue of the value axis
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `0`.
           */
          setMaxValue(
            /**
             * New value for property `maxValue`
             */
            fMaxValue: number
          ): sap.viz.ui5.types.Axis_scale;
          /**
           * Sets a new value for property {@link #getMinValue minValue}.
           *
           * Set the minValue of the value axis
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `0`.
           */
          setMinValue(
            /**
             * New value for property `minValue`
             */
            fMinValue: number
          ): sap.viz.ui5.types.Axis_scale;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for the axis title
         */
        class Axis_title extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Axis_title
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Axis_titleOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Axis_title with name `sClassName` and enriches it with
           * the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getApplyAxislineColor applyAxislineColor}.
           *
           * Set the title color to match the color of the axis line
           *
           * Default value is `false`.
           */
          getApplyAxislineColor(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Axis_title.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getText text}.
           *
           * Set the text of the axis title
           */
          getText(): string;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * Set the visibility of the axis title
           *
           * Default value is `false`.
           */
          getVisible(): boolean;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getApplyAxislineColor applyAxislineColor}.
           *
           * Set the title color to match the color of the axis line
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setApplyAxislineColor(
            /**
             * New value for property `applyAxislineColor`
             */
            bApplyAxislineColor: boolean
          ): sap.viz.ui5.types.Axis_title;
          /**
           * Sets a new value for property {@link #getText text}.
           *
           * Set the text of the axis title
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setText(
            /**
             * New value for property `text`
             */
            sText: string
          ): sap.viz.ui5.types.Axis_title;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * Set the visibility of the axis title
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Axis_title;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Module sap.viz.ui5.types.Background
         */
        class Background extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Background
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: BackgroundOpts
          );

          /**
           * Destroys the border in the aggregation {@link #getBorder border}.
           */
          destroyBorder(): sap.viz.ui5.types.Background;
          /**
           * Creates a new subclass of class sap.viz.ui5.types.Background with name `sClassName` and enriches it with
           * the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets content of aggregation {@link #getBorder border}.
           *
           * Settings for the border
           */
          getBorder(): sap.viz.ui5.types.Background_border;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getColor color}.
           *
           * Define the color for the plot background body.
           *
           * Default value is `transparent`.
           */
          getColor(): string;
          /**
           * Gets current value of property {@link #getDirection direction}.
           *
           * Set the direction of the color gradient in the background. This only takes effect if the 'drawingEffect'
           * value is set to 'glossy'.
           *
           * Default value is `vertical`.
           */
          getDirection(): sap.viz.ui5.types.Background_direction;
          /**
           * Gets current value of property {@link #getDrawingEffect drawingEffect}.
           *
           * Set the drawing effect for the background. If this value is set to 'glossy', the background is glossy.
           * If this value is set to 'normal', the background is matte.
           *
           * Default value is `normal`.
           */
          getDrawingEffect(): sap.viz.ui5.types.Background_drawingEffect;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Background.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * Set the visibility
           *
           * Default value is `true`.
           */
          getVisible(): boolean;
          /**
           * Sets the aggregated {@link #getBorder border}.
           */
          setBorder(
            /**
             * The border to set
             */
            oBorder: sap.viz.ui5.types.Background_border
          ): sap.viz.ui5.types.Background;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getColor color}.
           *
           * Define the color for the plot background body.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `transparent`.
           */
          setColor(
            /**
             * New value for property `color`
             */
            sColor: string
          ): sap.viz.ui5.types.Background;
          /**
           * Sets a new value for property {@link #getDirection direction}.
           *
           * Set the direction of the color gradient in the background. This only takes effect if the 'drawingEffect'
           * value is set to 'glossy'.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `vertical`.
           */
          setDirection(
            /**
             * New value for property `direction`
             */
            sDirection: sap.viz.ui5.types.Background_direction
          ): sap.viz.ui5.types.Background;
          /**
           * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
           *
           * Set the drawing effect for the background. If this value is set to 'glossy', the background is glossy.
           * If this value is set to 'normal', the background is matte.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `normal`.
           */
          setDrawingEffect(
            /**
             * New value for property `drawingEffect`
             */
            sDrawingEffect: sap.viz.ui5.types.Background_drawingEffect
          ): sap.viz.ui5.types.Background;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * Set the visibility
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Background;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for the border
         */
        class Background_border extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Background_border
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Background_borderOpts
          );

          /**
           * Destroys the bottom in the aggregation {@link #getBottom bottom}.
           */
          destroyBottom(): sap.viz.ui5.types.Background_border;
          /**
           * Destroys the left in the aggregation {@link #getLeft left}.
           */
          destroyLeft(): sap.viz.ui5.types.Background_border;
          /**
           * Destroys the right in the aggregation {@link #getRight right}.
           */
          destroyRight(): sap.viz.ui5.types.Background_border;
          /**
           * Destroys the top in the aggregation {@link #getTop top}.
           */
          destroyTop(): sap.viz.ui5.types.Background_border;
          /**
           * Creates a new subclass of class sap.viz.ui5.types.Background_border with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets content of aggregation {@link #getBottom bottom}.
           *
           * Settings for the bottom border
           */
          getBottom(): sap.viz.ui5.types.Background_border_bottom;
          /**
           * Gets content of aggregation {@link #getLeft left}.
           *
           * Settings for the left border
           */
          getLeft(): sap.viz.ui5.types.Background_border_left;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Background_border.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets content of aggregation {@link #getRight right}.
           *
           * Settings for the right border
           */
          getRight(): sap.viz.ui5.types.Background_border_right;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getStroke stroke}.
           *
           * Settings for the color of the stroke.
           *
           * Default value is `#d8d8d8`.
           */
          getStroke(): string;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getStrokeWidth strokeWidth}.
           *
           * Settings for the width of the stroke.
           *
           * Default value is `1`.
           */
          getStrokeWidth(): number;
          /**
           * Gets content of aggregation {@link #getTop top}.
           *
           * Settings for the top border
           */
          getTop(): sap.viz.ui5.types.Background_border_top;
          /**
           * Sets the aggregated {@link #getBottom bottom}.
           */
          setBottom(
            /**
             * The bottom to set
             */
            oBottom: sap.viz.ui5.types.Background_border_bottom
          ): sap.viz.ui5.types.Background_border;
          /**
           * Sets the aggregated {@link #getLeft left}.
           */
          setLeft(
            /**
             * The left to set
             */
            oLeft: sap.viz.ui5.types.Background_border_left
          ): sap.viz.ui5.types.Background_border;
          /**
           * Sets the aggregated {@link #getRight right}.
           */
          setRight(
            /**
             * The right to set
             */
            oRight: sap.viz.ui5.types.Background_border_right
          ): sap.viz.ui5.types.Background_border;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getStroke stroke}.
           *
           * Settings for the color of the stroke.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#d8d8d8`.
           */
          setStroke(
            /**
             * New value for property `stroke`
             */
            sStroke: string
          ): sap.viz.ui5.types.Background_border;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getStrokeWidth strokeWidth}.
           *
           * Settings for the width of the stroke.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `1`.
           */
          setStrokeWidth(
            /**
             * New value for property `strokeWidth`
             */
            iStrokeWidth: number
          ): sap.viz.ui5.types.Background_border;
          /**
           * Sets the aggregated {@link #getTop top}.
           */
          setTop(
            /**
             * The top to set
             */
            oTop: sap.viz.ui5.types.Background_border_top
          ): sap.viz.ui5.types.Background_border;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for the bottom border
         */
        class Background_border_bottom extends sap.viz.ui5.core
          .BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Background_border_bottom
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Background_border_bottomOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Background_border_bottom with name `sClassName` and
           * enriches it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Background_border_bottom.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * Set the visibility
           *
           * Default value is `true`.
           */
          getVisible(): boolean;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * Set the visibility
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Background_border_bottom;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for the left border
         */
        class Background_border_left extends sap.viz.ui5.core
          .BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Background_border_left
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Background_border_leftOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Background_border_left with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Background_border_left.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * Set the visibility
           *
           * Default value is `true`.
           */
          getVisible(): boolean;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * Set the visibility
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Background_border_left;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for the right border
         */
        class Background_border_right extends sap.viz.ui5.core
          .BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Background_border_right
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Background_border_rightOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Background_border_right with name `sClassName` and
           * enriches it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Background_border_right.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * Set the visibility
           *
           * Default value is `true`.
           */
          getVisible(): boolean;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * Set the visibility
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Background_border_right;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for the top border
         */
        class Background_border_top extends sap.viz.ui5.core
          .BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Background_border_top
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Background_border_topOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Background_border_top with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Background_border_top.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * Set the visibility
           *
           * Default value is `true`.
           */
          getVisible(): boolean;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * Set the visibility
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Background_border_top;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Module sap.viz.ui5.types.Bar
         */
        class Bar extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Bar
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: BarOpts
          );

          /**
           * Destroys the animation in the aggregation {@link #getAnimation animation}.
           */
          destroyAnimation(): sap.viz.ui5.types.Bar;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
           */
          destroyToolTip(): sap.viz.ui5.types.Bar;
          /**
           * Creates a new subclass of class sap.viz.ui5.types.Bar with name `sClassName` and enriches it with the
           * information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets content of aggregation {@link #getAnimation animation}.
           *
           * Settings for animations in the plot area
           */
          getAnimation(): sap.viz.ui5.types.Bar_animation;
          /**
           * Gets current value of property {@link #getColorPalette colorPalette}.
           *
           * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension
           * bound to the legend.
           *
           * Default value is `#748CB2,#9CC677,#EACF5E,#F9AD79,#D16A7C,#8873A2,#3A95B3,#B6D949,#FDD36C,#F47958,#A65084,#0063B1,#0DA841,#FCB71D,#F05620,#B22D6E,#3C368E,#8FB2CF,#95D4AB,#EAE98F,#F9BE92,#EC9A99,#BC98BD,#1EB7B2,#73C03C,#F48323,#EB271B,#D9B5CA,#AED1DA,#DFECB2,#FCDAB0,#F5BCB4`.
           */
          getColorPalette(): string[];
          /**
           * Gets current value of property {@link #getDrawingEffect drawingEffect}.
           *
           * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy.
           * If this value is set to 'normal', the plot area is matte.
           *
           * Default value is `normal`.
           */
          getDrawingEffect(): sap.viz.ui5.types.Bar_drawingEffect;
          /**
           * Gets current value of property {@link #getFormatRules formatRules}.
           *
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           */
          getFormatRules(): object[];
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getImageFill imageFill}.
           *
           * Set where the image fill is enabled.
           *
           * Default value is `false`.
           */
          getImageFill(): boolean;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getImagePalette imagePalette}.
           *
           * Set the images that fill the bars.
           *
           * Default value is `http://www.sap.com/global/ui/images/global/sap-logo.png`.
           */
          getImagePalette(): string[];
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getIsRoundCorner isRoundCorner}.
           *
           * Set whether bars have rounded corners
           *
           * Default value is `false`.
           */
          getIsRoundCorner(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Bar.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getOrientation orientation}.
           *
           * Set the orientation of the plot area.
           *
           * Default value is `vertical`.
           */
          getOrientation(): sap.viz.ui5.types.Bar_orientation;
          /**
           * Gets current value of property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
           *
           * Set the color palette for axis 1 in dual charts.
           *
           * Default value is `#8FBADD,#B8D4E9,#7AAED6,#A3C7E3,#3D88C4,#66A1D0,#297CBE,#5295CA,#005BA3,#146FB7,#005395,#0063B1`.
           */
          getPrimaryValuesColorPalette(): string[];
          /**
           * Gets current value of property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
           *
           * Set the color palette for axis 2 in dual chart.
           *
           * Default value is `#F6A09B,#F9C3C0,#F58E88,#F8B1AD,#F05B52,#F37D76,#EE4A40,#F16C64,#D92419,#ED382D,#C52117,#EB271B`.
           */
          getSecondaryValuesColorPalette(): string[];
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getToolTip toolTip}.
           *
           * Settings for tooltip related properties
           */
          getToolTip(): sap.viz.ui5.types.Bar_tooltip;
          /**
           * Sets the aggregated {@link #getAnimation animation}.
           */
          setAnimation(
            /**
             * The animation to set
             */
            oAnimation: sap.viz.ui5.types.Bar_animation
          ): sap.viz.ui5.types.Bar;
          /**
           * Sets a new value for property {@link #getColorPalette colorPalette}.
           *
           * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension
           * bound to the legend.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#748CB2,#9CC677,#EACF5E,#F9AD79,#D16A7C,#8873A2,#3A95B3,#B6D949,#FDD36C,#F47958,#A65084,#0063B1,#0DA841,#FCB71D,#F05620,#B22D6E,#3C368E,#8FB2CF,#95D4AB,#EAE98F,#F9BE92,#EC9A99,#BC98BD,#1EB7B2,#73C03C,#F48323,#EB271B,#D9B5CA,#AED1DA,#DFECB2,#FCDAB0,#F5BCB4`.
           */
          setColorPalette(
            /**
             * New value for property `colorPalette`
             */
            sColorPalette: string[]
          ): sap.viz.ui5.types.Bar;
          /**
           * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
           *
           * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy.
           * If this value is set to 'normal', the plot area is matte.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `normal`.
           */
          setDrawingEffect(
            /**
             * New value for property `drawingEffect`
             */
            sDrawingEffect: sap.viz.ui5.types.Bar_drawingEffect
          ): sap.viz.ui5.types.Bar;
          /**
           * Sets a new value for property {@link #getFormatRules formatRules}.
           *
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setFormatRules(
            /**
             * New value for property `formatRules`
             */
            sFormatRules: object[]
          ): sap.viz.ui5.types.Bar;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getImageFill imageFill}.
           *
           * Set where the image fill is enabled.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setImageFill(
            /**
             * New value for property `imageFill`
             */
            bImageFill: boolean
          ): sap.viz.ui5.types.Bar;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getImagePalette imagePalette}.
           *
           * Set the images that fill the bars.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `http://www.sap.com/global/ui/images/global/sap-logo.png`.
           */
          setImagePalette(
            /**
             * New value for property `imagePalette`
             */
            sImagePalette: string[]
          ): sap.viz.ui5.types.Bar;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getIsRoundCorner isRoundCorner}.
           *
           * Set whether bars have rounded corners
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setIsRoundCorner(
            /**
             * New value for property `isRoundCorner`
             */
            bIsRoundCorner: boolean
          ): sap.viz.ui5.types.Bar;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getOrientation orientation}.
           *
           * Set the orientation of the plot area.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `vertical`.
           */
          setOrientation(
            /**
             * New value for property `orientation`
             */
            sOrientation: sap.viz.ui5.types.Bar_orientation
          ): sap.viz.ui5.types.Bar;
          /**
           * Sets a new value for property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
           *
           * Set the color palette for axis 1 in dual charts.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#8FBADD,#B8D4E9,#7AAED6,#A3C7E3,#3D88C4,#66A1D0,#297CBE,#5295CA,#005BA3,#146FB7,#005395,#0063B1`.
           */
          setPrimaryValuesColorPalette(
            /**
             * New value for property `primaryValuesColorPalette`
             */
            sPrimaryValuesColorPalette: string[]
          ): sap.viz.ui5.types.Bar;
          /**
           * Sets a new value for property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
           *
           * Set the color palette for axis 2 in dual chart.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#F6A09B,#F9C3C0,#F58E88,#F8B1AD,#F05B52,#F37D76,#EE4A40,#F16C64,#D92419,#ED382D,#C52117,#EB271B`.
           */
          setSecondaryValuesColorPalette(
            /**
             * New value for property `secondaryValuesColorPalette`
             */
            sSecondaryValuesColorPalette: string[]
          ): sap.viz.ui5.types.Bar;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getToolTip toolTip}.
           */
          setToolTip(
            /**
             * The toolTip to set
             */
            oToolTip: sap.viz.ui5.types.Bar_tooltip
          ): sap.viz.ui5.types.Bar;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for animations in the plot area
         */
        class Bar_animation extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Bar_animation
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Bar_animationOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Bar_animation with name `sClassName` and enriches it
           * with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getDataLoading dataLoading}.
           *
           * Set whether the data loading animation is enabled
           *
           * Default value is `true`.
           */
          getDataLoading(): boolean;
          /**
           * Gets current value of property {@link #getDataUpdating dataUpdating}.
           *
           * Set whether the data updating animation is enabled
           *
           * Default value is `true`.
           */
          getDataUpdating(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Bar_animation.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getResizing resizing}.
           *
           * Set whether the resizing animation is enabled
           *
           * Default value is `true`.
           */
          getResizing(): boolean;
          /**
           * Sets a new value for property {@link #getDataLoading dataLoading}.
           *
           * Set whether the data loading animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setDataLoading(
            /**
             * New value for property `dataLoading`
             */
            bDataLoading: boolean
          ): sap.viz.ui5.types.Bar_animation;
          /**
           * Sets a new value for property {@link #getDataUpdating dataUpdating}.
           *
           * Set whether the data updating animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setDataUpdating(
            /**
             * New value for property `dataUpdating`
             */
            bDataUpdating: boolean
          ): sap.viz.ui5.types.Bar_animation;
          /**
           * Sets a new value for property {@link #getResizing resizing}.
           *
           * Set whether the resizing animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setResizing(
            /**
             * New value for property `resizing`
             */
            bResizing: boolean
          ): sap.viz.ui5.types.Bar_animation;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Settings for tooltip related properties
         */
        class Bar_tooltip extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Bar_tooltip
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Bar_tooltipOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Bar_tooltip with name `sClassName` and enriches it
           * with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getEnabled enabled}.
           *
           * Set whether the tooltip is enabled
           *
           * Default value is `true`.
           */
          getEnabled(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Bar_tooltip.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Sets a new value for property {@link #getEnabled enabled}.
           *
           * Set whether the tooltip is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setEnabled(
            /**
             * New value for property `enabled`
             */
            bEnabled: boolean
          ): sap.viz.ui5.types.Bar_tooltip;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Module sap.viz.ui5.types.Bubble
         */
        class Bubble extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Bubble
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: BubbleOpts
          );

          /**
           * Destroys the animation in the aggregation {@link #getAnimation animation}.
           */
          destroyAnimation(): sap.viz.ui5.types.Bubble;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the axisTooltip in the aggregation {@link #getAxisTooltip axisTooltip}.
           */
          destroyAxisTooltip(): sap.viz.ui5.types.Bubble;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the hoverline in the aggregation {@link #getHoverline hoverline}.
           */
          destroyHoverline(): sap.viz.ui5.types.Bubble;
          /**
           * Creates a new subclass of class sap.viz.ui5.types.Bubble with name `sClassName` and enriches it with
           * the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets content of aggregation {@link #getAnimation animation}.
           *
           * Settings for animations in bubble and scatter charts
           */
          getAnimation(): sap.viz.ui5.types.Bubble_animation;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getAxisTooltip axisTooltip}.
           *
           * Set tooltip related properties.
           */
          getAxisTooltip(): sap.viz.ui5.types.Bubble_axisTooltip;
          /**
           * Gets current value of property {@link #getColorPalette colorPalette}.
           *
           * Set the color of the bubbles
           *
           * Default value is `#748CB2,#9CC677,#EACF5E,#F9AD79,#D16A7C,#8873A2,#3A95B3,#B6D949,#FDD36C,#F47958,#A65084,#0063B1,#0DA841,#FCB71D,#F05620,#B22D6E,#3C368E,#8FB2CF,#95D4AB,#EAE98F,#F9BE92,#EC9A99,#BC98BD,#1EB7B2,#73C03C,#F48323,#EB271B,#D9B5CA,#AED1DA,#DFECB2,#FCDAB0,#F5BCB4`.
           */
          getColorPalette(): string[];
          /**
           * Gets current value of property {@link #getDrawingEffect drawingEffect}.
           *
           * Set the drawing effect for the bubbles
           *
           * Default value is `normal`.
           */
          getDrawingEffect(): sap.viz.ui5.types.Bubble_drawingEffect;
          /**
           * Gets current value of property {@link #getFormatRules formatRules}.
           *
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           */
          getFormatRules(): object[];
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getHoverline hoverline}.
           *
           * Settings for hoverline properties.
           */
          getHoverline(): sap.viz.ui5.types.Bubble_hoverline;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getMaxBubbleHeight maxBubbleHeight}.
           *
           * Set the max value of bubble height values
           *
           * Default value is `0`.
           */
          getMaxBubbleHeight(): number;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getMaxBubbleWidth maxBubbleWidth}.
           *
           * Set the max value of bubble width values
           *
           * Default value is `0`.
           */
          getMaxBubbleWidth(): number;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getMaxPriValue maxPriValue}.
           *
           * Set the max value of primary values
           *
           * Default value is `0`.
           */
          getMaxPriValue(): number;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getMaxSecValue maxSecValue}.
           *
           * Set the max value of secondary values
           *
           * Default value is `0`.
           */
          getMaxSecValue(): number;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Bubble.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getMinBubbleHeight minBubbleHeight}.
           *
           * Set the minimum value of bubble height values
           *
           * Default value is `0`.
           */
          getMinBubbleHeight(): number;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getMinBubbleWidth minBubbleWidth}.
           *
           * Set the minimum value of bubble width values
           *
           * Default value is `0`.
           */
          getMinBubbleWidth(): number;
          /**
           * Gets current value of property {@link #getMinMarkerSize minMarkerSize}.
           *
           * Set the minimum size of the data points
           */
          getMinMarkerSize(): number;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getMinPriValue minPriValue}.
           *
           * Set the minimum value of primary values
           *
           * Default value is `0`.
           */
          getMinPriValue(): number;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getMinSecValue minSecValue}.
           *
           * Set the minimum value of secondary values
           *
           * Default value is `0`.
           */
          getMinSecValue(): number;
          /**
           * Gets current value of property {@link #getShapePalette shapePalette}.
           *
           * Set the shape of the bubbles
           *
           * Default value is `circle,square,diamond,triangleUp,triangleDown,triangleLeft,triangleRight,cross,intersection`.
           */
          getShapePalette(): string[];
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getShowNegativeValues showNegativeValues}.
           *
           * Show/hide the data of negetive value.
           *
           * Default value is `true`.
           */
          getShowNegativeValues(): boolean;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getTimeBased timeBased}.
           *
           * Set whether it is time based scatter/bubble
           *
           * Default value is `false`.
           */
          getTimeBased(): boolean;
          /**
           * Sets the aggregated {@link #getAnimation animation}.
           */
          setAnimation(
            /**
             * The animation to set
             */
            oAnimation: sap.viz.ui5.types.Bubble_animation
          ): sap.viz.ui5.types.Bubble;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getAxisTooltip axisTooltip}.
           */
          setAxisTooltip(
            /**
             * The axisTooltip to set
             */
            oAxisTooltip: sap.viz.ui5.types.Bubble_axisTooltip
          ): sap.viz.ui5.types.Bubble;
          /**
           * Sets a new value for property {@link #getColorPalette colorPalette}.
           *
           * Set the color of the bubbles
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#748CB2,#9CC677,#EACF5E,#F9AD79,#D16A7C,#8873A2,#3A95B3,#B6D949,#FDD36C,#F47958,#A65084,#0063B1,#0DA841,#FCB71D,#F05620,#B22D6E,#3C368E,#8FB2CF,#95D4AB,#EAE98F,#F9BE92,#EC9A99,#BC98BD,#1EB7B2,#73C03C,#F48323,#EB271B,#D9B5CA,#AED1DA,#DFECB2,#FCDAB0,#F5BCB4`.
           */
          setColorPalette(
            /**
             * New value for property `colorPalette`
             */
            sColorPalette: string[]
          ): sap.viz.ui5.types.Bubble;
          /**
           * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
           *
           * Set the drawing effect for the bubbles
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `normal`.
           */
          setDrawingEffect(
            /**
             * New value for property `drawingEffect`
             */
            sDrawingEffect: sap.viz.ui5.types.Bubble_drawingEffect
          ): sap.viz.ui5.types.Bubble;
          /**
           * Sets a new value for property {@link #getFormatRules formatRules}.
           *
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setFormatRules(
            /**
             * New value for property `formatRules`
             */
            sFormatRules: object[]
          ): sap.viz.ui5.types.Bubble;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getHoverline hoverline}.
           */
          setHoverline(
            /**
             * The hoverline to set
             */
            oHoverline: sap.viz.ui5.types.Bubble_hoverline
          ): sap.viz.ui5.types.Bubble;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getMaxBubbleHeight maxBubbleHeight}.
           *
           * Set the max value of bubble height values
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `0`.
           */
          setMaxBubbleHeight(
            /**
             * New value for property `maxBubbleHeight`
             */
            fMaxBubbleHeight: number
          ): sap.viz.ui5.types.Bubble;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getMaxBubbleWidth maxBubbleWidth}.
           *
           * Set the max value of bubble width values
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `0`.
           */
          setMaxBubbleWidth(
            /**
             * New value for property `maxBubbleWidth`
             */
            fMaxBubbleWidth: number
          ): sap.viz.ui5.types.Bubble;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getMaxPriValue maxPriValue}.
           *
           * Set the max value of primary values
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `0`.
           */
          setMaxPriValue(
            /**
             * New value for property `maxPriValue`
             */
            fMaxPriValue: number
          ): sap.viz.ui5.types.Bubble;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getMaxSecValue maxSecValue}.
           *
           * Set the max value of secondary values
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `0`.
           */
          setMaxSecValue(
            /**
             * New value for property `maxSecValue`
             */
            fMaxSecValue: number
          ): sap.viz.ui5.types.Bubble;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getMinBubbleHeight minBubbleHeight}.
           *
           * Set the minimum value of bubble height values
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `0`.
           */
          setMinBubbleHeight(
            /**
             * New value for property `minBubbleHeight`
             */
            fMinBubbleHeight: number
          ): sap.viz.ui5.types.Bubble;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getMinBubbleWidth minBubbleWidth}.
           *
           * Set the minimum value of bubble width values
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `0`.
           */
          setMinBubbleWidth(
            /**
             * New value for property `minBubbleWidth`
             */
            fMinBubbleWidth: number
          ): sap.viz.ui5.types.Bubble;
          /**
           * Sets a new value for property {@link #getMinMarkerSize minMarkerSize}.
           *
           * Set the minimum size of the data points
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setMinMarkerSize(
            /**
             * New value for property `minMarkerSize`
             */
            iMinMarkerSize: number
          ): sap.viz.ui5.types.Bubble;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getMinPriValue minPriValue}.
           *
           * Set the minimum value of primary values
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `0`.
           */
          setMinPriValue(
            /**
             * New value for property `minPriValue`
             */
            fMinPriValue: number
          ): sap.viz.ui5.types.Bubble;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getMinSecValue minSecValue}.
           *
           * Set the minimum value of secondary values
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `0`.
           */
          setMinSecValue(
            /**
             * New value for property `minSecValue`
             */
            fMinSecValue: number
          ): sap.viz.ui5.types.Bubble;
          /**
           * Sets a new value for property {@link #getShapePalette shapePalette}.
           *
           * Set the shape of the bubbles
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `circle,square,diamond,triangleUp,triangleDown,triangleLeft,triangleRight,cross,intersection`.
           */
          setShapePalette(
            /**
             * New value for property `shapePalette`
             */
            sShapePalette: string[]
          ): sap.viz.ui5.types.Bubble;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getShowNegativeValues showNegativeValues}.
           *
           * Show/hide the data of negetive value.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setShowNegativeValues(
            /**
             * New value for property `showNegativeValues`
             */
            bShowNegativeValues: boolean
          ): sap.viz.ui5.types.Bubble;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getTimeBased timeBased}.
           *
           * Set whether it is time based scatter/bubble
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setTimeBased(
            /**
             * New value for property `timeBased`
             */
            bTimeBased: boolean
          ): sap.viz.ui5.types.Bubble;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for animations in bubble and scatter charts
         */
        class Bubble_animation extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Bubble_animation
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Bubble_animationOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Bubble_animation with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getDataLoading dataLoading}.
           *
           * Set whether the data loading animation is enabled
           *
           * Default value is `true`.
           */
          getDataLoading(): boolean;
          /**
           * Gets current value of property {@link #getDataUpdating dataUpdating}.
           *
           * Set whether the data updating animation is enabled
           *
           * Default value is `true`.
           */
          getDataUpdating(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Bubble_animation.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getResizing resizing}.
           *
           * Set whether the resizing animation is enabled
           *
           * Default value is `true`.
           */
          getResizing(): boolean;
          /**
           * Sets a new value for property {@link #getDataLoading dataLoading}.
           *
           * Set whether the data loading animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setDataLoading(
            /**
             * New value for property `dataLoading`
             */
            bDataLoading: boolean
          ): sap.viz.ui5.types.Bubble_animation;
          /**
           * Sets a new value for property {@link #getDataUpdating dataUpdating}.
           *
           * Set whether the data updating animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setDataUpdating(
            /**
             * New value for property `dataUpdating`
             */
            bDataUpdating: boolean
          ): sap.viz.ui5.types.Bubble_animation;
          /**
           * Sets a new value for property {@link #getResizing resizing}.
           *
           * Set whether the resizing animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setResizing(
            /**
             * New value for property `resizing`
             */
            bResizing: boolean
          ): sap.viz.ui5.types.Bubble_animation;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Set tooltip related properties.
         */
        class Bubble_axisTooltip extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Bubble_axisTooltip
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Bubble_axisTooltipOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Bubble_axisTooltip with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getFormatString formatString}.
           *
           * Set format string for small tooltip.The first one is applied to xAxis and the second one is applied to
           * yAxis.Any character in "MDYHSAmdyhsa#?%0@" is reserved as a token for format code.
           */
          getFormatString(): string[];
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Bubble_axisTooltip.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * enabled/disabled tooltip.
           *
           * Default value is `true`.
           */
          getVisible(): boolean;
          /**
           * Sets a new value for property {@link #getFormatString formatString}.
           *
           * Set format string for small tooltip.The first one is applied to xAxis and the second one is applied to
           * yAxis.Any character in "MDYHSAmdyhsa#?%0@" is reserved as a token for format code.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setFormatString(
            /**
             * New value for property `formatString`
             */
            sFormatString: string[]
          ): sap.viz.ui5.types.Bubble_axisTooltip;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * enabled/disabled tooltip.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Bubble_axisTooltip;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Settings for hoverline properties.
         */
        class Bubble_hoverline extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Bubble_hoverline
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Bubble_hoverlineOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Bubble_hoverline with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Bubble_hoverline.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * Set to enabled/disabled hoverline or not.
           *
           * Default value is `true`.
           */
          getVisible(): boolean;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * Set to enabled/disabled hoverline or not.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Bubble_hoverline;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Module sap.viz.ui5.types.Bullet
         */
        class Bullet extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Bullet
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: BulletOpts
          );

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
           */
          destroyToolTip(): sap.viz.ui5.types.Bullet;
          /**
           * Creates a new subclass of class sap.viz.ui5.types.Bullet with name `sClassName` and enriches it with
           * the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getColorPalette colorPalette}.
           *
           * Set the color palette for the chart.
           *
           * Default value is `#2479BC,#d6d6d6,#EACF5E,#F9AD79,#D16A7C,#8873A2,#3A95B3,#B6D949,#FDD36C,#F47958,#A65084,#0063B1,#0DA841,#FCB71D,#F05620,#B22D6E,#3C368E,#8FB2CF,#95D4AB,#EAE98F,#F9BE92,#EC9A99,#BC98BD,#1EB7B2,#73C03C,#F48323,#EB271B,#D9B5CA,#AED1DA,#DFECB2,#FCDAB0,#F5BCB4`.
           */
          getColorPalette(): string[];
          /**
           * Gets current value of property {@link #getDrawingEffect drawingEffect}.
           *
           * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy.
           * If this value is set to 'normal', the plot area is matte.
           *
           * Default value is `normal`.
           */
          getDrawingEffect(): sap.viz.ui5.types.Bullet_drawingEffect;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getIsRoundCorner isRoundCorner}.
           *
           * Set whether bars have rounded corners
           *
           * Default value is `false`.
           */
          getIsRoundCorner(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Bullet.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getOrientation orientation}.
           *
           * Set the orientation of the plot area.
           *
           * Default value is `vertical`.
           */
          getOrientation(): sap.viz.ui5.types.Bullet_orientation;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
           *
           * Set the color palette for axis 1 in dual charts.
           *
           * Default value is `#8FBADD,#B8D4E9,#7AAED6,#A3C7E3,#3D88C4,#66A1D0,#297CBE,#5295CA,#005BA3,#146FB7,#005395,#0063B1`.
           */
          getPrimaryValuesColorPalette(): string[];
          /**
           * Gets current value of property {@link #getReferenceValuesColorPalette referenceValuesColorPalette}.
           *
           * Set the color palette reference value color in bullet chart.
           *
           * Default value is `#FCDCDA,#FEECDA,#DDF3E4`.
           */
          getReferenceValuesColorPalette(): string[];
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
           *
           * Set the color palette for axis 2 in dual chart.
           *
           * Default value is `#F6A09B,#F9C3C0,#F58E88,#F8B1AD,#F05B52,#F37D76,#EE4A40,#F16C64,#D92419,#ED382D,#C52117,#EB271B`.
           */
          getSecondaryValuesColorPalette(): string[];
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getToolTip toolTip}.
           *
           * Settings for tooltip related properties
           */
          getToolTip(): sap.viz.ui5.types.Bullet_tooltip;
          /**
           * Sets a new value for property {@link #getColorPalette colorPalette}.
           *
           * Set the color palette for the chart.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#2479BC,#d6d6d6,#EACF5E,#F9AD79,#D16A7C,#8873A2,#3A95B3,#B6D949,#FDD36C,#F47958,#A65084,#0063B1,#0DA841,#FCB71D,#F05620,#B22D6E,#3C368E,#8FB2CF,#95D4AB,#EAE98F,#F9BE92,#EC9A99,#BC98BD,#1EB7B2,#73C03C,#F48323,#EB271B,#D9B5CA,#AED1DA,#DFECB2,#FCDAB0,#F5BCB4`.
           */
          setColorPalette(
            /**
             * New value for property `colorPalette`
             */
            sColorPalette: string[]
          ): sap.viz.ui5.types.Bullet;
          /**
           * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
           *
           * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy.
           * If this value is set to 'normal', the plot area is matte.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `normal`.
           */
          setDrawingEffect(
            /**
             * New value for property `drawingEffect`
             */
            sDrawingEffect: sap.viz.ui5.types.Bullet_drawingEffect
          ): sap.viz.ui5.types.Bullet;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getIsRoundCorner isRoundCorner}.
           *
           * Set whether bars have rounded corners
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setIsRoundCorner(
            /**
             * New value for property `isRoundCorner`
             */
            bIsRoundCorner: boolean
          ): sap.viz.ui5.types.Bullet;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getOrientation orientation}.
           *
           * Set the orientation of the plot area.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `vertical`.
           */
          setOrientation(
            /**
             * New value for property `orientation`
             */
            sOrientation: sap.viz.ui5.types.Bullet_orientation
          ): sap.viz.ui5.types.Bullet;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
           *
           * Set the color palette for axis 1 in dual charts.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#8FBADD,#B8D4E9,#7AAED6,#A3C7E3,#3D88C4,#66A1D0,#297CBE,#5295CA,#005BA3,#146FB7,#005395,#0063B1`.
           */
          setPrimaryValuesColorPalette(
            /**
             * New value for property `primaryValuesColorPalette`
             */
            sPrimaryValuesColorPalette: string[]
          ): sap.viz.ui5.types.Bullet;
          /**
           * Sets a new value for property {@link #getReferenceValuesColorPalette referenceValuesColorPalette}.
           *
           * Set the color palette reference value color in bullet chart.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#FCDCDA,#FEECDA,#DDF3E4`.
           */
          setReferenceValuesColorPalette(
            /**
             * New value for property `referenceValuesColorPalette`
             */
            sReferenceValuesColorPalette: string[]
          ): sap.viz.ui5.types.Bullet;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
           *
           * Set the color palette for axis 2 in dual chart.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#F6A09B,#F9C3C0,#F58E88,#F8B1AD,#F05B52,#F37D76,#EE4A40,#F16C64,#D92419,#ED382D,#C52117,#EB271B`.
           */
          setSecondaryValuesColorPalette(
            /**
             * New value for property `secondaryValuesColorPalette`
             */
            sSecondaryValuesColorPalette: string[]
          ): sap.viz.ui5.types.Bullet;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getToolTip toolTip}.
           */
          setToolTip(
            /**
             * The toolTip to set
             */
            oToolTip: sap.viz.ui5.types.Bullet_tooltip
          ): sap.viz.ui5.types.Bullet;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Settings for tooltip related properties
         */
        class Bullet_tooltip extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Bullet_tooltip
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Bullet_tooltipOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Bullet_tooltip with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getEnabled enabled}.
           *
           * Set whether the tooltip is enabled
           *
           * Default value is `true`.
           */
          getEnabled(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Bullet_tooltip.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Sets a new value for property {@link #getEnabled enabled}.
           *
           * Set whether the tooltip is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setEnabled(
            /**
             * New value for property `enabled`
             */
            bEnabled: boolean
          ): sap.viz.ui5.types.Bullet_tooltip;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Module sap.viz.ui5.types.Combination
         */
        class Combination extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Combination
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: CombinationOpts
          );

          /**
           * Destroys the animation in the aggregation {@link #getAnimation animation}.
           */
          destroyAnimation(): sap.viz.ui5.types.Combination;
          /**
           * Destroys the bar in the aggregation {@link #getBar bar}.
           */
          destroyBar(): sap.viz.ui5.types.Combination;
          /**
           * Destroys the dataShape in the aggregation {@link #getDataShape dataShape}.
           */
          destroyDataShape(): sap.viz.ui5.types.Combination;
          /**
           * Destroys the line in the aggregation {@link #getLine line}.
           */
          destroyLine(): sap.viz.ui5.types.Combination;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
           */
          destroyToolTip(): sap.viz.ui5.types.Combination;
          /**
           * Creates a new subclass of class sap.viz.ui5.types.Combination with name `sClassName` and enriches it
           * with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets content of aggregation {@link #getAnimation animation}.
           *
           * Settings for animations in the plot area
           */
          getAnimation(): sap.viz.ui5.types.Combination_animation;
          /**
           * Gets content of aggregation {@link #getBar bar}.
           *
           * Settings for bar properties
           */
          getBar(): sap.viz.ui5.types.Combination_bar;
          /**
           * Gets current value of property {@link #getColorPalette colorPalette}.
           *
           * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension
           * bound to the legend.
           *
           * Default value is `#748CB2,#9CC677,#EACF5E,#F9AD79,#D16A7C,#8873A2,#3A95B3,#B6D949,#FDD36C,#F47958,#A65084,#0063B1,#0DA841,#FCB71D,#F05620,#B22D6E,#3C368E,#8FB2CF,#95D4AB,#EAE98F,#F9BE92,#EC9A99,#BC98BD,#1EB7B2,#73C03C,#F48323,#EB271B,#D9B5CA,#AED1DA,#DFECB2,#FCDAB0,#F5BCB4`.
           */
          getColorPalette(): string[];
          /**
           * Gets content of aggregation {@link #getDataShape dataShape}.
           *
           * Settings for the shape of data series
           */
          getDataShape(): sap.viz.ui5.types.Combination_dataShape;
          /**
           * Gets current value of property {@link #getDrawingEffect drawingEffect}.
           *
           * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy.
           * If this value is set to 'normal', the plot area is matte.
           *
           * Default value is `normal`.
           */
          getDrawingEffect(): sap.viz.ui5.types.Combination_drawingEffect;
          /**
           * Gets current value of property {@link #getFormatRules formatRules}.
           *
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           */
          getFormatRules(): object[];
          /**
           * Gets content of aggregation {@link #getLine line}.
           *
           * Settings for line properties
           */
          getLine(): sap.viz.ui5.types.Combination_line;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Combination.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getOrientation orientation}.
           *
           * Set the orientation of the plot area.
           *
           * Default value is `vertical`.
           */
          getOrientation(): sap.viz.ui5.types.Combination_orientation;
          /**
           * Gets current value of property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
           *
           * Set the color palette for axis 1 in dual charts.
           *
           * Default value is `#8FBADD,#B8D4E9,#7AAED6,#A3C7E3,#3D88C4,#66A1D0,#297CBE,#5295CA,#005BA3,#146FB7,#005395,#0063B1`.
           */
          getPrimaryValuesColorPalette(): string[];
          /**
           * Gets current value of property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
           *
           * Set the color palette for axis 2 in dual chart.
           *
           * Default value is `#F6A09B,#F9C3C0,#F58E88,#F8B1AD,#F05B52,#F37D76,#EE4A40,#F16C64,#D92419,#ED382D,#C52117,#EB271B`.
           */
          getSecondaryValuesColorPalette(): string[];
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getToolTip toolTip}.
           *
           * Settings for the tooltip
           */
          getToolTip(): sap.viz.ui5.types.Combination_tooltip;
          /**
           * Sets the aggregated {@link #getAnimation animation}.
           */
          setAnimation(
            /**
             * The animation to set
             */
            oAnimation: sap.viz.ui5.types.Combination_animation
          ): sap.viz.ui5.types.Combination;
          /**
           * Sets the aggregated {@link #getBar bar}.
           */
          setBar(
            /**
             * The bar to set
             */
            oBar: sap.viz.ui5.types.Combination_bar
          ): sap.viz.ui5.types.Combination;
          /**
           * Sets a new value for property {@link #getColorPalette colorPalette}.
           *
           * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension
           * bound to the legend.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#748CB2,#9CC677,#EACF5E,#F9AD79,#D16A7C,#8873A2,#3A95B3,#B6D949,#FDD36C,#F47958,#A65084,#0063B1,#0DA841,#FCB71D,#F05620,#B22D6E,#3C368E,#8FB2CF,#95D4AB,#EAE98F,#F9BE92,#EC9A99,#BC98BD,#1EB7B2,#73C03C,#F48323,#EB271B,#D9B5CA,#AED1DA,#DFECB2,#FCDAB0,#F5BCB4`.
           */
          setColorPalette(
            /**
             * New value for property `colorPalette`
             */
            sColorPalette: string[]
          ): sap.viz.ui5.types.Combination;
          /**
           * Sets the aggregated {@link #getDataShape dataShape}.
           */
          setDataShape(
            /**
             * The dataShape to set
             */
            oDataShape: sap.viz.ui5.types.Combination_dataShape
          ): sap.viz.ui5.types.Combination;
          /**
           * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
           *
           * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy.
           * If this value is set to 'normal', the plot area is matte.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `normal`.
           */
          setDrawingEffect(
            /**
             * New value for property `drawingEffect`
             */
            sDrawingEffect: sap.viz.ui5.types.Combination_drawingEffect
          ): sap.viz.ui5.types.Combination;
          /**
           * Sets a new value for property {@link #getFormatRules formatRules}.
           *
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setFormatRules(
            /**
             * New value for property `formatRules`
             */
            sFormatRules: object[]
          ): sap.viz.ui5.types.Combination;
          /**
           * Sets the aggregated {@link #getLine line}.
           */
          setLine(
            /**
             * The line to set
             */
            oLine: sap.viz.ui5.types.Combination_line
          ): sap.viz.ui5.types.Combination;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getOrientation orientation}.
           *
           * Set the orientation of the plot area.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `vertical`.
           */
          setOrientation(
            /**
             * New value for property `orientation`
             */
            sOrientation: sap.viz.ui5.types.Combination_orientation
          ): sap.viz.ui5.types.Combination;
          /**
           * Sets a new value for property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
           *
           * Set the color palette for axis 1 in dual charts.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#8FBADD,#B8D4E9,#7AAED6,#A3C7E3,#3D88C4,#66A1D0,#297CBE,#5295CA,#005BA3,#146FB7,#005395,#0063B1`.
           */
          setPrimaryValuesColorPalette(
            /**
             * New value for property `primaryValuesColorPalette`
             */
            sPrimaryValuesColorPalette: string[]
          ): sap.viz.ui5.types.Combination;
          /**
           * Sets a new value for property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
           *
           * Set the color palette for axis 2 in dual chart.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#F6A09B,#F9C3C0,#F58E88,#F8B1AD,#F05B52,#F37D76,#EE4A40,#F16C64,#D92419,#ED382D,#C52117,#EB271B`.
           */
          setSecondaryValuesColorPalette(
            /**
             * New value for property `secondaryValuesColorPalette`
             */
            sSecondaryValuesColorPalette: string[]
          ): sap.viz.ui5.types.Combination;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getToolTip toolTip}.
           */
          setToolTip(
            /**
             * The toolTip to set
             */
            oToolTip: sap.viz.ui5.types.Combination_tooltip
          ): sap.viz.ui5.types.Combination;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for animations in the plot area
         */
        class Combination_animation extends sap.viz.ui5.core
          .BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Combination_animation
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Combination_animationOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Combination_animation with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getDataLoading dataLoading}.
           *
           * Set whether the data loading animation is enabled
           *
           * Default value is `true`.
           */
          getDataLoading(): boolean;
          /**
           * Gets current value of property {@link #getDataUpdating dataUpdating}.
           *
           * Set whether the data updating animation is enabled
           *
           * Default value is `true`.
           */
          getDataUpdating(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Combination_animation.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getResizing resizing}.
           *
           * Set whether the resizing animation is enabled
           *
           * Default value is `true`.
           */
          getResizing(): boolean;
          /**
           * Sets a new value for property {@link #getDataLoading dataLoading}.
           *
           * Set whether the data loading animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setDataLoading(
            /**
             * New value for property `dataLoading`
             */
            bDataLoading: boolean
          ): sap.viz.ui5.types.Combination_animation;
          /**
           * Sets a new value for property {@link #getDataUpdating dataUpdating}.
           *
           * Set whether the data updating animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setDataUpdating(
            /**
             * New value for property `dataUpdating`
             */
            bDataUpdating: boolean
          ): sap.viz.ui5.types.Combination_animation;
          /**
           * Sets a new value for property {@link #getResizing resizing}.
           *
           * Set whether the resizing animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setResizing(
            /**
             * New value for property `resizing`
             */
            bResizing: boolean
          ): sap.viz.ui5.types.Combination_animation;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for bar properties
         */
        class Combination_bar extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Combination_bar
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Combination_barOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Combination_bar with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getIsRoundCorner isRoundCorner}.
           *
           * Set whether the bars have rounded corners
           *
           * Default value is `false`.
           */
          getIsRoundCorner(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Combination_bar.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getIsRoundCorner isRoundCorner}.
           *
           * Set whether the bars have rounded corners
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setIsRoundCorner(
            /**
             * New value for property `isRoundCorner`
             */
            bIsRoundCorner: boolean
          ): sap.viz.ui5.types.Combination_bar;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for the shape of data series
         */
        class Combination_dataShape extends sap.viz.ui5.core
          .BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Combination_dataShape
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Combination_dataShapeOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Combination_dataShape with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Combination_dataShape.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getPrimaryAxis primaryAxis}.
           *
           * Set the shape of data series on the primary axis
           *
           * Default value is `bar,line,line`.
           */
          getPrimaryAxis(): string[];
          /**
           * Gets current value of property {@link #getSecondaryAxis secondaryAxis}.
           *
           * Set the shape of data series on the secondary axis
           *
           * Default value is `line,line,line`.
           */
          getSecondaryAxis(): string[];
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getSecondAxis secondAxis}.
           *
           * Set the shape of data series on the secondary axis (Old version; still works)
           *
           * Default value is `line,line,line`.
           */
          getSecondAxis(): string[];
          /**
           * Sets a new value for property {@link #getPrimaryAxis primaryAxis}.
           *
           * Set the shape of data series on the primary axis
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `bar,line,line`.
           */
          setPrimaryAxis(
            /**
             * New value for property `primaryAxis`
             */
            sPrimaryAxis: string[]
          ): sap.viz.ui5.types.Combination_dataShape;
          /**
           * Sets a new value for property {@link #getSecondaryAxis secondaryAxis}.
           *
           * Set the shape of data series on the secondary axis
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `line,line,line`.
           */
          setSecondaryAxis(
            /**
             * New value for property `secondaryAxis`
             */
            sSecondaryAxis: string[]
          ): sap.viz.ui5.types.Combination_dataShape;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getSecondAxis secondAxis}.
           *
           * Set the shape of data series on the secondary axis (Old version; still works)
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `line,line,line`.
           */
          setSecondAxis(
            /**
             * New value for property `secondAxis`
             */
            sSecondAxis: string[]
          ): sap.viz.ui5.types.Combination_dataShape;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for line properties
         */
        class Combination_line extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Combination_line
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Combination_lineOpts
          );

          /**
           * Destroys the marker in the aggregation {@link #getMarker marker}.
           */
          destroyMarker(): sap.viz.ui5.types.Combination_line;
          /**
           * Creates a new subclass of class sap.viz.ui5.types.Combination_line with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets content of aggregation {@link #getMarker marker}.
           *
           * Settings for the visual markers for data points
           */
          getMarker(): sap.viz.ui5.types.Combination_line_marker;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Combination_line.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getWidth width}.
           *
           * Set the width of lines, ranging from '1' to '7'. If you enter a value outside the range, the line width
           * will default to '2'.
           *
           * Default value is `2`.
           */
          getWidth(): number;
          /**
           * Sets the aggregated {@link #getMarker marker}.
           */
          setMarker(
            /**
             * The marker to set
             */
            oMarker: sap.viz.ui5.types.Combination_line_marker
          ): sap.viz.ui5.types.Combination_line;
          /**
           * Sets a new value for property {@link #getWidth width}.
           *
           * Set the width of lines, ranging from '1' to '7'. If you enter a value outside the range, the line width
           * will default to '2'.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `2`.
           */
          setWidth(
            /**
             * New value for property `width`
             */
            iWidth: number
          ): sap.viz.ui5.types.Combination_line;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for the visual markers for data points
         */
        class Combination_line_marker extends sap.viz.ui5.core
          .BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Combination_line_marker
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Combination_line_markerOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Combination_line_marker with name `sClassName` and
           * enriches it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Combination_line_marker.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getNumber number}.
           *
           * Set the number to enable events for markers when they are invisible. If the total amount of markers is
           * bigger than this value, markers will remain hidden when selected or hovered over. The default value is
           * Number.POSITIVE_INFINITY, which is the largest possible value.
           */
          getNumber(): number;
          /**
           * Gets current value of property {@link #getShape shape}.
           *
           * Set the shape of the data point markers
           *
           * Default value is `circle`.
           */
          getShape(): string[];
          /**
           * Gets current value of property {@link #getSize size}.
           *
           * Set the size of the data point markers, ranging from '4' to '32'. If you enter a value outside the range,
           * the size defaults to '6'.
           *
           * Default value is `6`.
           */
          getSize(): number;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * Set the visibility of the data point markers
           *
           * Default value is `true`.
           */
          getVisible(): boolean;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getNumber number}.
           *
           * Set the number to enable events for markers when they are invisible. If the total amount of markers is
           * bigger than this value, markers will remain hidden when selected or hovered over. The default value is
           * Number.POSITIVE_INFINITY, which is the largest possible value.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setNumber(
            /**
             * New value for property `number`
             */
            iNumber: number
          ): sap.viz.ui5.types.Combination_line_marker;
          /**
           * Sets a new value for property {@link #getShape shape}.
           *
           * Set the shape of the data point markers
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `circle`.
           */
          setShape(
            /**
             * New value for property `shape`
             */
            sShape: string[]
          ): sap.viz.ui5.types.Combination_line_marker;
          /**
           * Sets a new value for property {@link #getSize size}.
           *
           * Set the size of the data point markers, ranging from '4' to '32'. If you enter a value outside the range,
           * the size defaults to '6'.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `6`.
           */
          setSize(
            /**
             * New value for property `size`
             */
            iSize: number
          ): sap.viz.ui5.types.Combination_line_marker;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * Set the visibility of the data point markers
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Combination_line_marker;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Settings for the tooltip
         */
        class Combination_tooltip extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Combination_tooltip
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Combination_tooltipOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Combination_tooltip with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getEnabled enabled}.
           *
           * Set whether the tooltip is enabled
           *
           * Default value is `true`.
           */
          getEnabled(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Combination_tooltip.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Sets a new value for property {@link #getEnabled enabled}.
           *
           * Set whether the tooltip is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setEnabled(
            /**
             * New value for property `enabled`
             */
            bEnabled: boolean
          ): sap.viz.ui5.types.Combination_tooltip;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Module sap.viz.ui5.types.Datalabel
         */
        class Datalabel extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Datalabel
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: DatalabelOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Datalabel with name `sClassName` and enriches it with
           * the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getAutomaticInOutside automaticInOutside}.
           *
           * If set to 'true', the data labels will be automatically placed outside when the data label position property
           * is inside, and vice versa
           *
           * Default value is `true`.
           */
          getAutomaticInOutside(): boolean;
          /**
           * Gets current value of property {@link #getFormatString formatString}.
           *
           * Set the format strings for the data labels. For dual axis charts, the first array is applied to the primary
           * axis and the second array is applied to the second axis. If you enter fewer format strings into an array
           * than there are measures in the respective axis, then the last format string is applied to all remaining
           * measures. The following characters are reserved as tokens for format code: MDYHSAmdyhsa#?%0@. The following
           * is a simple example: [["0.00%"],["0.00%"]].
           */
          getFormatString(): any[];
          /**
           * Gets current value of property {@link #getHideWhenOverlap hideWhenOverlap}.
           *
           * Always show all data labels even they are overlapped
           *
           * Default value is `true`.
           */
          getHideWhenOverlap(): boolean;
          /**
           * @deprecated (since 1.22) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getIsBubbleChart isBubbleChart}.
           *
           * Set whether the chart is a bubble chart
           *
           * Default value is `false`.
           */
          getIsBubbleChart(): boolean;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getIsDonut isDonut}.
           *
           * Set whether the chart is a donut chart. Use only for donut charts.
           *
           * Default value is `false`.
           */
          getIsDonut(): boolean;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getIsGeoChart isGeoChart}.
           *
           * Set whether the chart is a geo chart
           *
           * Default value is `false`.
           */
          getIsGeoChart(): boolean;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getIsPercentMode isPercentMode}.
           *
           * Set whether the chart is a percent chart. Set for percent chart only.
           *
           * Default value is `false`.
           */
          getIsPercentMode(): boolean;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getIsStackMode isStackMode}.
           *
           * Set whether the chart is a stack chart. Set for stack chart only.
           *
           * Default value is `false`.
           */
          getIsStackMode(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Datalabel.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getOrientation orientation}.
           *
           * Set orientation of data labels
           *
           * Default value is `vertical`.
           */
          getOrientation(): sap.viz.ui5.types.Datalabel_orientation;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getOutsidePosition outsidePosition}.
           *
           * If set to 'true', the data label is positioned above the element when it is outside
           *
           * Default value is `up`.
           */
          getOutsidePosition(): sap.viz.ui5.types.Datalabel_outsidePosition;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getOutsideVisible outsideVisible}.
           *
           * If set to 'true', the data label is visible when it is outside
           *
           * Default value is `true`.
           */
          getOutsideVisible(): boolean;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getPaintingMode paintingMode}.
           *
           * Set painting mode of data labels
           *
           * Default value is `rectCoordinate`.
           */
          getPaintingMode(): sap.viz.ui5.types.Datalabel_paintingMode;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getPosition position}.
           *
           * Set position of data labels
           *
           * Default value is `inside`.
           */
          getPosition(): sap.viz.ui5.types.Datalabel_position;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getPositionPreference positionPreference}.
           *
           * If set to 'true', the data label position is defined by the property 'outsidePosition', regardless of
           * whether the data label value is negative
           *
           * Default value is `false`.
           */
          getPositionPreference(): boolean;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getRespectShapeWidth respectShapeWidth}.
           *
           * If set to 'true', the data label is automatically hidden when bubble width isn't enough to show the whole
           * label in single bubble chart.
           *
           * Default value is `false`.
           */
          getRespectShapeWidth(): boolean;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getShowZero showZero}.
           *
           * If set to 'true', the value zero is shown in the data labels
           *
           * Default value is `true`.
           */
          getShowZero(): boolean;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getType type}.
           *
           * Set the type of label
           *
           * Default value is `value`.
           */
          getType(): string;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * Set whether the data labels are visible
           *
           * Default value is `false`.
           */
          getVisible(): boolean;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getAutomaticInOutside automaticInOutside}.
           *
           * If set to 'true', the data labels will be automatically placed outside when the data label position property
           * is inside, and vice versa
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setAutomaticInOutside(
            /**
             * New value for property `automaticInOutside`
             */
            bAutomaticInOutside: boolean
          ): sap.viz.ui5.types.Datalabel;
          /**
           * Sets a new value for property {@link #getFormatString formatString}.
           *
           * Set the format strings for the data labels. For dual axis charts, the first array is applied to the primary
           * axis and the second array is applied to the second axis. If you enter fewer format strings into an array
           * than there are measures in the respective axis, then the last format string is applied to all remaining
           * measures. The following characters are reserved as tokens for format code: MDYHSAmdyhsa#?%0@. The following
           * is a simple example: [["0.00%"],["0.00%"]].
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setFormatString(
            /**
             * New value for property `formatString`
             */
            sFormatString: any[]
          ): sap.viz.ui5.types.Datalabel;
          /**
           * Sets a new value for property {@link #getHideWhenOverlap hideWhenOverlap}.
           *
           * Always show all data labels even they are overlapped
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setHideWhenOverlap(
            /**
             * New value for property `hideWhenOverlap`
             */
            bHideWhenOverlap: boolean
          ): sap.viz.ui5.types.Datalabel;
          /**
           * @deprecated (since 1.22) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getIsBubbleChart isBubbleChart}.
           *
           * Set whether the chart is a bubble chart
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setIsBubbleChart(
            /**
             * New value for property `isBubbleChart`
             */
            bIsBubbleChart: boolean
          ): sap.viz.ui5.types.Datalabel;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getIsDonut isDonut}.
           *
           * Set whether the chart is a donut chart. Use only for donut charts.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setIsDonut(
            /**
             * New value for property `isDonut`
             */
            bIsDonut: boolean
          ): sap.viz.ui5.types.Datalabel;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getIsGeoChart isGeoChart}.
           *
           * Set whether the chart is a geo chart
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setIsGeoChart(
            /**
             * New value for property `isGeoChart`
             */
            bIsGeoChart: boolean
          ): sap.viz.ui5.types.Datalabel;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getIsPercentMode isPercentMode}.
           *
           * Set whether the chart is a percent chart. Set for percent chart only.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setIsPercentMode(
            /**
             * New value for property `isPercentMode`
             */
            bIsPercentMode: boolean
          ): sap.viz.ui5.types.Datalabel;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getIsStackMode isStackMode}.
           *
           * Set whether the chart is a stack chart. Set for stack chart only.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setIsStackMode(
            /**
             * New value for property `isStackMode`
             */
            bIsStackMode: boolean
          ): sap.viz.ui5.types.Datalabel;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getOrientation orientation}.
           *
           * Set orientation of data labels
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `vertical`.
           */
          setOrientation(
            /**
             * New value for property `orientation`
             */
            sOrientation: sap.viz.ui5.types.Datalabel_orientation
          ): sap.viz.ui5.types.Datalabel;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getOutsidePosition outsidePosition}.
           *
           * If set to 'true', the data label is positioned above the element when it is outside
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `up`.
           */
          setOutsidePosition(
            /**
             * New value for property `outsidePosition`
             */
            sOutsidePosition: sap.viz.ui5.types.Datalabel_outsidePosition
          ): sap.viz.ui5.types.Datalabel;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getOutsideVisible outsideVisible}.
           *
           * If set to 'true', the data label is visible when it is outside
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setOutsideVisible(
            /**
             * New value for property `outsideVisible`
             */
            bOutsideVisible: boolean
          ): sap.viz.ui5.types.Datalabel;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getPaintingMode paintingMode}.
           *
           * Set painting mode of data labels
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `rectCoordinate`.
           */
          setPaintingMode(
            /**
             * New value for property `paintingMode`
             */
            sPaintingMode: sap.viz.ui5.types.Datalabel_paintingMode
          ): sap.viz.ui5.types.Datalabel;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getPosition position}.
           *
           * Set position of data labels
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `inside`.
           */
          setPosition(
            /**
             * New value for property `position`
             */
            sPosition: sap.viz.ui5.types.Datalabel_position
          ): sap.viz.ui5.types.Datalabel;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getPositionPreference positionPreference}.
           *
           * If set to 'true', the data label position is defined by the property 'outsidePosition', regardless of
           * whether the data label value is negative
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setPositionPreference(
            /**
             * New value for property `positionPreference`
             */
            bPositionPreference: boolean
          ): sap.viz.ui5.types.Datalabel;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getRespectShapeWidth respectShapeWidth}.
           *
           * If set to 'true', the data label is automatically hidden when bubble width isn't enough to show the whole
           * label in single bubble chart.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setRespectShapeWidth(
            /**
             * New value for property `respectShapeWidth`
             */
            bRespectShapeWidth: boolean
          ): sap.viz.ui5.types.Datalabel;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getShowZero showZero}.
           *
           * If set to 'true', the value zero is shown in the data labels
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setShowZero(
            /**
             * New value for property `showZero`
             */
            bShowZero: boolean
          ): sap.viz.ui5.types.Datalabel;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getType type}.
           *
           * Set the type of label
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `value`.
           */
          setType(
            /**
             * New value for property `type`
             */
            sType: string
          ): sap.viz.ui5.types.Datalabel;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * Set whether the data labels are visible
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Datalabel;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Module sap.viz.ui5.types.Datatransform
         */
        class Datatransform extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Datatransform
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: DatatransformOpts
          );

          /**
           * Destroys the autoBinning in the aggregation {@link #getAutoBinning autoBinning}.
           */
          destroyAutoBinning(): sap.viz.ui5.types.Datatransform;
          /**
           * Destroys the dataSampling in the aggregation {@link #getDataSampling dataSampling}.
           */
          destroyDataSampling(): sap.viz.ui5.types.Datatransform;
          /**
           * Creates a new subclass of class sap.viz.ui5.types.Datatransform with name `sClassName` and enriches it
           * with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets content of aggregation {@link #getAutoBinning autoBinning}.
           *
           * Settings for the auto-binning algorithm
           */
          getAutoBinning(): sap.viz.ui5.types.Datatransform_autoBinning;
          /**
           * Gets content of aggregation {@link #getDataSampling dataSampling}.
           *
           * Settings for the data sampling algorithm
           */
          getDataSampling(): sap.viz.ui5.types.Datatransform_dataSampling;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Datatransform.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Sets the aggregated {@link #getAutoBinning autoBinning}.
           */
          setAutoBinning(
            /**
             * The autoBinning to set
             */
            oAutoBinning: sap.viz.ui5.types.Datatransform_autoBinning
          ): sap.viz.ui5.types.Datatransform;
          /**
           * Sets the aggregated {@link #getDataSampling dataSampling}.
           */
          setDataSampling(
            /**
             * The dataSampling to set
             */
            oDataSampling: sap.viz.ui5.types.Datatransform_dataSampling
          ): sap.viz.ui5.types.Datatransform;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for the auto-binning algorithm
         */
        class Datatransform_autoBinning extends sap.viz.ui5.core
          .BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Datatransform_autoBinning
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Datatransform_autoBinningOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Datatransform_autoBinning with name `sClassName` and
           * enriches it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getBinNumber binNumber}.
           *
           * Set the bin number.
           *
           * Default value is `10`.
           */
          getBinNumber(): number;
          /**
           * Gets current value of property {@link #getEnable enable}.
           *
           * Set whether data auto-binning is enabled.
           *
           * Default value is `false`.
           */
          getEnable(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Datatransform_autoBinning.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Sets a new value for property {@link #getBinNumber binNumber}.
           *
           * Set the bin number.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `10`.
           */
          setBinNumber(
            /**
             * New value for property `binNumber`
             */
            iBinNumber: number
          ): sap.viz.ui5.types.Datatransform_autoBinning;
          /**
           * Sets a new value for property {@link #getEnable enable}.
           *
           * Set whether data auto-binning is enabled.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setEnable(
            /**
             * New value for property `enable`
             */
            bEnable: boolean
          ): sap.viz.ui5.types.Datatransform_autoBinning;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for the data sampling algorithm
         */
        class Datatransform_dataSampling extends sap.viz.ui5.core
          .BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Datatransform_dataSampling
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Datatransform_dataSamplingOpts
          );

          /**
           * Destroys the grid in the aggregation {@link #getGrid grid}.
           */
          destroyGrid(): sap.viz.ui5.types.Datatransform_dataSampling;
          /**
           * Creates a new subclass of class sap.viz.ui5.types.Datatransform_dataSampling with name `sClassName` and
           * enriches it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getEnable enable}.
           *
           * Set whether data sampling is enabled.
           *
           * Default value is `false`.
           */
          getEnable(): boolean;
          /**
           * Gets content of aggregation {@link #getGrid grid}.
           *
           * add documentation for aggregation grid
           */
          getGrid(): sap.viz.ui5.types.Datatransform_dataSampling_grid;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Datatransform_dataSampling.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getNumberPrecondition numberPrecondition}.
           *
           * If the data point is larger than this value, data sampling is triggered.
           *
           * Default value is `3000`.
           */
          getNumberPrecondition(): number;
          /**
           * Gets current value of property {@link #getSizeFactor sizeFactor}.
           *
           * Set the data point percentage in the original dataset
           *
           * Default value is `1`.
           */
          getSizeFactor(): number;
          /**
           * Sets a new value for property {@link #getEnable enable}.
           *
           * Set whether data sampling is enabled.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setEnable(
            /**
             * New value for property `enable`
             */
            bEnable: boolean
          ): sap.viz.ui5.types.Datatransform_dataSampling;
          /**
           * Sets the aggregated {@link #getGrid grid}.
           */
          setGrid(
            /**
             * The grid to set
             */
            oGrid: sap.viz.ui5.types.Datatransform_dataSampling_grid
          ): sap.viz.ui5.types.Datatransform_dataSampling;
          /**
           * Sets a new value for property {@link #getNumberPrecondition numberPrecondition}.
           *
           * If the data point is larger than this value, data sampling is triggered.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `3000`.
           */
          setNumberPrecondition(
            /**
             * New value for property `numberPrecondition`
             */
            iNumberPrecondition: number
          ): sap.viz.ui5.types.Datatransform_dataSampling;
          /**
           * Sets a new value for property {@link #getSizeFactor sizeFactor}.
           *
           * Set the data point percentage in the original dataset
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `1`.
           */
          setSizeFactor(
            /**
             * New value for property `sizeFactor`
             */
            iSizeFactor: number
          ): sap.viz.ui5.types.Datatransform_dataSampling;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Structured Type sap.viz.ui5.types.Datatransform_dataSampling_grid
         */
        class Datatransform_dataSampling_grid extends sap.viz.ui5.core
          .BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Datatransform_dataSampling_grid
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Datatransform_dataSampling_gridOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Datatransform_dataSampling_grid with name `sClassName`
           * and enriches it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getColumn column}.
           *
           * Set the number of columns in the grid.
           *
           * Default value is `3`.
           */
          getColumn(): number;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Datatransform_dataSampling_grid.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getRow row}.
           *
           * Set the number of rows in the grid.
           *
           * Default value is `3`.
           */
          getRow(): number;
          /**
           * Sets a new value for property {@link #getColumn column}.
           *
           * Set the number of columns in the grid.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `3`.
           */
          setColumn(
            /**
             * New value for property `column`
             */
            iColumn: number
          ): sap.viz.ui5.types.Datatransform_dataSampling_grid;
          /**
           * Sets a new value for property {@link #getRow row}.
           *
           * Set the number of rows in the grid.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `3`.
           */
          setRow(
            /**
             * New value for property `row`
             */
            iRow: number
          ): sap.viz.ui5.types.Datatransform_dataSampling_grid;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Module sap.viz.ui5.types.Heatmap
         */
        class Heatmap extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Heatmap
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: HeatmapOpts
          );

          /**
           * Destroys the animation in the aggregation {@link #getAnimation animation}.
           */
          destroyAnimation(): sap.viz.ui5.types.Heatmap;
          /**
           * Destroys the border in the aggregation {@link #getBorder border}.
           */
          destroyBorder(): sap.viz.ui5.types.Heatmap;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
           */
          destroyToolTip(): sap.viz.ui5.types.Heatmap;
          /**
           * Creates a new subclass of class sap.viz.ui5.types.Heatmap with name `sClassName` and enriches it with
           * the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets content of aggregation {@link #getAnimation animation}.
           *
           * Settings for animations in the plot area
           */
          getAnimation(): sap.viz.ui5.types.Heatmap_animation;
          /**
           * Gets content of aggregation {@link #getBorder border}.
           *
           * Settings for the border
           */
          getBorder(): sap.viz.ui5.types.Heatmap_border;
          /**
           * Gets current value of property {@link #getColorPalette colorPalette}.
           *
           * Set the color palette for the various sectors. For example, ["#748CB2", "#9CC677", "#EACF5E", "#F9AD79",
           * "#D16A7C"].
           */
          getColorPalette(): string[];
          /**
           * Gets current value of property {@link #getEndColor endColor}.
           *
           * Set the end color of the heat map
           *
           * Default value is `#73C03C`.
           */
          getEndColor(): string;
          /**
           * Gets current value of property {@link #getFormatRules formatRules}.
           *
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           */
          getFormatRules(): object[];
          /**
           * Gets current value of property {@link #getLegendValues legendValues}.
           *
           * Set the MBC legend values. For example, [10,11,12,13,14,15]. The values in the array should be in ascending
           * order. If the number of values in the array is smaller than the MBC legend segment number, the MBC legend
           * automatically calculates the values according to the data. If the number of values in the legendValues
           * array is larger than MBC legend segment number, then only the first "segment number + 1" values are used.
           */
          getLegendValues(): number[];
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Heatmap.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getStartColor startColor}.
           *
           * Set the starting color of the heat map
           *
           * Default value is `#C2E3A9`.
           */
          getStartColor(): string;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getToolTip toolTip}.
           *
           * Settings for tooltip
           */
          getToolTip(): sap.viz.ui5.types.Heatmap_tooltip;
          /**
           * Sets the aggregated {@link #getAnimation animation}.
           */
          setAnimation(
            /**
             * The animation to set
             */
            oAnimation: sap.viz.ui5.types.Heatmap_animation
          ): sap.viz.ui5.types.Heatmap;
          /**
           * Sets the aggregated {@link #getBorder border}.
           */
          setBorder(
            /**
             * The border to set
             */
            oBorder: sap.viz.ui5.types.Heatmap_border
          ): sap.viz.ui5.types.Heatmap;
          /**
           * Sets a new value for property {@link #getColorPalette colorPalette}.
           *
           * Set the color palette for the various sectors. For example, ["#748CB2", "#9CC677", "#EACF5E", "#F9AD79",
           * "#D16A7C"].
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setColorPalette(
            /**
             * New value for property `colorPalette`
             */
            sColorPalette: string[]
          ): sap.viz.ui5.types.Heatmap;
          /**
           * Sets a new value for property {@link #getEndColor endColor}.
           *
           * Set the end color of the heat map
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#73C03C`.
           */
          setEndColor(
            /**
             * New value for property `endColor`
             */
            sEndColor: string
          ): sap.viz.ui5.types.Heatmap;
          /**
           * Sets a new value for property {@link #getFormatRules formatRules}.
           *
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setFormatRules(
            /**
             * New value for property `formatRules`
             */
            sFormatRules: object[]
          ): sap.viz.ui5.types.Heatmap;
          /**
           * Sets a new value for property {@link #getLegendValues legendValues}.
           *
           * Set the MBC legend values. For example, [10,11,12,13,14,15]. The values in the array should be in ascending
           * order. If the number of values in the array is smaller than the MBC legend segment number, the MBC legend
           * automatically calculates the values according to the data. If the number of values in the legendValues
           * array is larger than MBC legend segment number, then only the first "segment number + 1" values are used.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setLegendValues(
            /**
             * New value for property `legendValues`
             */
            sLegendValues: number[]
          ): sap.viz.ui5.types.Heatmap;
          /**
           * Sets a new value for property {@link #getStartColor startColor}.
           *
           * Set the starting color of the heat map
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#C2E3A9`.
           */
          setStartColor(
            /**
             * New value for property `startColor`
             */
            sStartColor: string
          ): sap.viz.ui5.types.Heatmap;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getToolTip toolTip}.
           */
          setToolTip(
            /**
             * The toolTip to set
             */
            oToolTip: sap.viz.ui5.types.Heatmap_tooltip
          ): sap.viz.ui5.types.Heatmap;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for animations in the plot area
         */
        class Heatmap_animation extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Heatmap_animation
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Heatmap_animationOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Heatmap_animation with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getDataLoading dataLoading}.
           *
           * Set whether the data loading animation is enabled
           *
           * Default value is `true`.
           */
          getDataLoading(): boolean;
          /**
           * Gets current value of property {@link #getDataUpdating dataUpdating}.
           *
           * Set whether the data updating animation is enabled
           *
           * Default value is `true`.
           */
          getDataUpdating(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Heatmap_animation.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getResizing resizing}.
           *
           * Set whether the resizing animation is enabled
           *
           * Default value is `true`.
           */
          getResizing(): boolean;
          /**
           * Sets a new value for property {@link #getDataLoading dataLoading}.
           *
           * Set whether the data loading animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setDataLoading(
            /**
             * New value for property `dataLoading`
             */
            bDataLoading: boolean
          ): sap.viz.ui5.types.Heatmap_animation;
          /**
           * Sets a new value for property {@link #getDataUpdating dataUpdating}.
           *
           * Set whether the data updating animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setDataUpdating(
            /**
             * New value for property `dataUpdating`
             */
            bDataUpdating: boolean
          ): sap.viz.ui5.types.Heatmap_animation;
          /**
           * Sets a new value for property {@link #getResizing resizing}.
           *
           * Set whether the resizing animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setResizing(
            /**
             * New value for property `resizing`
             */
            bResizing: boolean
          ): sap.viz.ui5.types.Heatmap_animation;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for the border
         */
        class Heatmap_border extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Heatmap_border
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Heatmap_borderOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Heatmap_border with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Heatmap_border.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * Set the visibility of the zone edge
           *
           * Default value is `true`.
           */
          getVisible(): boolean;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * Set the visibility of the zone edge
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Heatmap_border;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Settings for tooltip
         */
        class Heatmap_tooltip extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Heatmap_tooltip
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Heatmap_tooltipOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Heatmap_tooltip with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getEnabled enabled}.
           *
           * Set whether the tooltip is enabled
           *
           * Default value is `true`.
           */
          getEnabled(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Heatmap_tooltip.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Sets a new value for property {@link #getEnabled enabled}.
           *
           * Set whether the tooltip is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setEnabled(
            /**
             * New value for property `enabled`
             */
            bEnabled: boolean
          ): sap.viz.ui5.types.Heatmap_tooltip;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Module sap.viz.ui5.types.Legend
         */
        class Legend extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Legend
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: LegendOpts
          );

          /**
           * Destroys the layout in the aggregation {@link #getLayout layout}.
           */
          destroyLayout(): sap.viz.ui5.types.Legend;
          /**
           * Creates a new subclass of class sap.viz.ui5.types.Legend with name `sClassName` and enriches it with
           * the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets content of aggregation {@link #getLayout layout}.
           *
           * Settings for the layout of the legend area
           */
          getLayout(): sap.viz.ui5.types.Legend_layout;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Legend.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Sets the aggregated {@link #getLayout layout}.
           */
          setLayout(
            /**
             * The layout to set
             */
            oLayout: sap.viz.ui5.types.Legend_layout
          ): sap.viz.ui5.types.Legend;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for the layout of the legend area
         */
        class Legend_layout extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Legend_layout
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Legend_layoutOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Legend_layout with name `sClassName` and enriches it
           * with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Legend_layout.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getPosition position}.
           *
           * Set the position of the legend area
           *
           * Default value is `right`.
           */
          getPosition(): sap.viz.ui5.types.Legend_layout_position;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getPriority priority}.
           *
           * Set the priority of the position for the legend area
           *
           * Default value is `1`.
           */
          getPriority(): number;
          /**
           * Sets a new value for property {@link #getPosition position}.
           *
           * Set the position of the legend area
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `right`.
           */
          setPosition(
            /**
             * New value for property `position`
             */
            sPosition: sap.viz.ui5.types.Legend_layout_position
          ): sap.viz.ui5.types.Legend_layout;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getPriority priority}.
           *
           * Set the priority of the position for the legend area
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `1`.
           */
          setPriority(
            /**
             * New value for property `priority`
             */
            iPriority: number
          ): sap.viz.ui5.types.Legend_layout;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Module sap.viz.ui5.types.Line
         */
        class Line extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Line
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: LineOpts
          );

          /**
           * Destroys the animation in the aggregation {@link #getAnimation animation}.
           */
          destroyAnimation(): sap.viz.ui5.types.Line;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the hoverline in the aggregation {@link #getHoverline hoverline}.
           */
          destroyHoverline(): sap.viz.ui5.types.Line;
          /**
           * Destroys the marker in the aggregation {@link #getMarker marker}.
           */
          destroyMarker(): sap.viz.ui5.types.Line;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
           */
          destroyToolTip(): sap.viz.ui5.types.Line;
          /**
           * Creates a new subclass of class sap.viz.ui5.types.Line with name `sClassName` and enriches it with the
           * information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets content of aggregation {@link #getAnimation animation}.
           *
           * Settings for animations.
           */
          getAnimation(): sap.viz.ui5.types.Line_animation;
          /**
           * Gets current value of property {@link #getColorPalette colorPalette}.
           *
           * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension
           * bound to the legend.
           *
           * Default value is `#748CB2,#9CC677,#EACF5E,#F9AD79,#D16A7C,#8873A2,#3A95B3,#B6D949,#FDD36C,#F47958,#A65084,#0063B1,#0DA841,#FCB71D,#F05620,#B22D6E,#3C368E,#8FB2CF,#95D4AB,#EAE98F,#F9BE92,#EC9A99,#BC98BD,#1EB7B2,#73C03C,#F48323,#EB271B,#D9B5CA,#AED1DA,#DFECB2,#FCDAB0,#F5BCB4`.
           */
          getColorPalette(): string[];
          /**
           * Gets current value of property {@link #getDrawingEffect drawingEffect}.
           *
           * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy.
           * If this value is set to 'normal', the plot area is matte.
           *
           * Default value is `normal`.
           */
          getDrawingEffect(): sap.viz.ui5.types.Line_drawingEffect;
          /**
           * Gets current value of property {@link #getFormatRules formatRules}.
           *
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           */
          getFormatRules(): object[];
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getHoverline hoverline}.
           *
           * Settings for the hoverline.
           */
          getHoverline(): sap.viz.ui5.types.Line_hoverline;
          /**
           * Gets content of aggregation {@link #getMarker marker}.
           *
           * Settings for marker/data point graphics
           */
          getMarker(): sap.viz.ui5.types.Line_marker;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Line.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getOrientation orientation}.
           *
           * Set the orientation of the plot area.
           *
           * Default value is `vertical`.
           */
          getOrientation(): sap.viz.ui5.types.Line_orientation;
          /**
           * Gets current value of property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
           *
           * Set the color palette for axis 1 in dual charts.
           *
           * Default value is `#8FBADD,#B8D4E9,#7AAED6,#A3C7E3,#3D88C4,#66A1D0,#297CBE,#5295CA,#005BA3,#146FB7,#005395,#0063B1`.
           */
          getPrimaryValuesColorPalette(): string[];
          /**
           * Gets current value of property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
           *
           * Set the color palette for axis 2 in dual chart.
           *
           * Default value is `#F6A09B,#F9C3C0,#F58E88,#F8B1AD,#F05B52,#F37D76,#EE4A40,#F16C64,#D92419,#ED382D,#C52117,#EB271B`.
           */
          getSecondaryValuesColorPalette(): string[];
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getShowGroupDetail showGroupDetail}.
           *
           * mouse over show one catergory detail
           *
           * Default value is `false`.
           */
          getShowGroupDetail(): boolean;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getToolTip toolTip}.
           *
           * Settings for the tooltip
           */
          getToolTip(): sap.viz.ui5.types.Line_tooltip;
          /**
           * Gets current value of property {@link #getWidth width}.
           *
           * Set the width of the lines, ranging from '1' to '7'. If you enter a value outside that range, the line
           * width defaults to '2'.
           *
           * Default value is `2`.
           */
          getWidth(): number;
          /**
           * Sets the aggregated {@link #getAnimation animation}.
           */
          setAnimation(
            /**
             * The animation to set
             */
            oAnimation: sap.viz.ui5.types.Line_animation
          ): sap.viz.ui5.types.Line;
          /**
           * Sets a new value for property {@link #getColorPalette colorPalette}.
           *
           * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension
           * bound to the legend.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#748CB2,#9CC677,#EACF5E,#F9AD79,#D16A7C,#8873A2,#3A95B3,#B6D949,#FDD36C,#F47958,#A65084,#0063B1,#0DA841,#FCB71D,#F05620,#B22D6E,#3C368E,#8FB2CF,#95D4AB,#EAE98F,#F9BE92,#EC9A99,#BC98BD,#1EB7B2,#73C03C,#F48323,#EB271B,#D9B5CA,#AED1DA,#DFECB2,#FCDAB0,#F5BCB4`.
           */
          setColorPalette(
            /**
             * New value for property `colorPalette`
             */
            sColorPalette: string[]
          ): sap.viz.ui5.types.Line;
          /**
           * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
           *
           * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy.
           * If this value is set to 'normal', the plot area is matte.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `normal`.
           */
          setDrawingEffect(
            /**
             * New value for property `drawingEffect`
             */
            sDrawingEffect: sap.viz.ui5.types.Line_drawingEffect
          ): sap.viz.ui5.types.Line;
          /**
           * Sets a new value for property {@link #getFormatRules formatRules}.
           *
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setFormatRules(
            /**
             * New value for property `formatRules`
             */
            sFormatRules: object[]
          ): sap.viz.ui5.types.Line;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getHoverline hoverline}.
           */
          setHoverline(
            /**
             * The hoverline to set
             */
            oHoverline: sap.viz.ui5.types.Line_hoverline
          ): sap.viz.ui5.types.Line;
          /**
           * Sets the aggregated {@link #getMarker marker}.
           */
          setMarker(
            /**
             * The marker to set
             */
            oMarker: sap.viz.ui5.types.Line_marker
          ): sap.viz.ui5.types.Line;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getOrientation orientation}.
           *
           * Set the orientation of the plot area.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `vertical`.
           */
          setOrientation(
            /**
             * New value for property `orientation`
             */
            sOrientation: sap.viz.ui5.types.Line_orientation
          ): sap.viz.ui5.types.Line;
          /**
           * Sets a new value for property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
           *
           * Set the color palette for axis 1 in dual charts.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#8FBADD,#B8D4E9,#7AAED6,#A3C7E3,#3D88C4,#66A1D0,#297CBE,#5295CA,#005BA3,#146FB7,#005395,#0063B1`.
           */
          setPrimaryValuesColorPalette(
            /**
             * New value for property `primaryValuesColorPalette`
             */
            sPrimaryValuesColorPalette: string[]
          ): sap.viz.ui5.types.Line;
          /**
           * Sets a new value for property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
           *
           * Set the color palette for axis 2 in dual chart.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#F6A09B,#F9C3C0,#F58E88,#F8B1AD,#F05B52,#F37D76,#EE4A40,#F16C64,#D92419,#ED382D,#C52117,#EB271B`.
           */
          setSecondaryValuesColorPalette(
            /**
             * New value for property `secondaryValuesColorPalette`
             */
            sSecondaryValuesColorPalette: string[]
          ): sap.viz.ui5.types.Line;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getShowGroupDetail showGroupDetail}.
           *
           * mouse over show one catergory detail
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setShowGroupDetail(
            /**
             * New value for property `showGroupDetail`
             */
            bShowGroupDetail: boolean
          ): sap.viz.ui5.types.Line;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getToolTip toolTip}.
           */
          setToolTip(
            /**
             * The toolTip to set
             */
            oToolTip: sap.viz.ui5.types.Line_tooltip
          ): sap.viz.ui5.types.Line;
          /**
           * Sets a new value for property {@link #getWidth width}.
           *
           * Set the width of the lines, ranging from '1' to '7'. If you enter a value outside that range, the line
           * width defaults to '2'.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `2`.
           */
          setWidth(
            /**
             * New value for property `width`
             */
            iWidth: number
          ): sap.viz.ui5.types.Line;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for animations.
         */
        class Line_animation extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Line_animation
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Line_animationOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Line_animation with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getDataLoading dataLoading}.
           *
           * Set whether the data loading animation is enabled
           *
           * Default value is `true`.
           */
          getDataLoading(): boolean;
          /**
           * Gets current value of property {@link #getDataUpdating dataUpdating}.
           *
           * Set whether the data updating animation is enabled
           *
           * Default value is `true`.
           */
          getDataUpdating(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Line_animation.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getResizing resizing}.
           *
           * Set whether the resizing animation is enabled
           *
           * Default value is `true`.
           */
          getResizing(): boolean;
          /**
           * Sets a new value for property {@link #getDataLoading dataLoading}.
           *
           * Set whether the data loading animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setDataLoading(
            /**
             * New value for property `dataLoading`
             */
            bDataLoading: boolean
          ): sap.viz.ui5.types.Line_animation;
          /**
           * Sets a new value for property {@link #getDataUpdating dataUpdating}.
           *
           * Set whether the data updating animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setDataUpdating(
            /**
             * New value for property `dataUpdating`
             */
            bDataUpdating: boolean
          ): sap.viz.ui5.types.Line_animation;
          /**
           * Sets a new value for property {@link #getResizing resizing}.
           *
           * Set whether the resizing animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setResizing(
            /**
             * New value for property `resizing`
             */
            bResizing: boolean
          ): sap.viz.ui5.types.Line_animation;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Settings for the hoverline.
         */
        class Line_hoverline extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Line_hoverline
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Line_hoverlineOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Line_hoverline with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Line_hoverline.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * Set the visibility of the hoverline.
           *
           * Default value is `true`.
           */
          getVisible(): boolean;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * Set the visibility of the hoverline.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Line_hoverline;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for marker/data point graphics
         */
        class Line_marker extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Line_marker
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Line_markerOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Line_marker with name `sClassName` and enriches it
           * with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Line_marker.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getNumber number}.
           *
           * Set the number to enable events for markers when they are invisible. If the total amount of markers is
           * bigger than this value, markers will remain hidden when selected or hovered over. The default value is
           * Number.POSITIVE_INFINITY, which is the largest possible value.
           */
          getNumber(): number;
          /**
           * Gets current value of property {@link #getShape shape}.
           *
           * Set the shape of the markers
           *
           * Default value is `circle`.
           */
          getShape(): sap.viz.ui5.types.Line_marker_shape;
          /**
           * Gets current value of property {@link #getSize size}.
           *
           * Set the marker size for data points, ranging from '4' to '32'. If you enter a value outside that range,
           * the marker size defaults to '6'.
           *
           * Default value is `6`.
           */
          getSize(): number;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * Set the visibility of the markers
           *
           * Default value is `true`.
           */
          getVisible(): boolean;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getNumber number}.
           *
           * Set the number to enable events for markers when they are invisible. If the total amount of markers is
           * bigger than this value, markers will remain hidden when selected or hovered over. The default value is
           * Number.POSITIVE_INFINITY, which is the largest possible value.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setNumber(
            /**
             * New value for property `number`
             */
            iNumber: number
          ): sap.viz.ui5.types.Line_marker;
          /**
           * Sets a new value for property {@link #getShape shape}.
           *
           * Set the shape of the markers
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `circle`.
           */
          setShape(
            /**
             * New value for property `shape`
             */
            sShape: sap.viz.ui5.types.Line_marker_shape
          ): sap.viz.ui5.types.Line_marker;
          /**
           * Sets a new value for property {@link #getSize size}.
           *
           * Set the marker size for data points, ranging from '4' to '32'. If you enter a value outside that range,
           * the marker size defaults to '6'.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `6`.
           */
          setSize(
            /**
             * New value for property `size`
             */
            iSize: number
          ): sap.viz.ui5.types.Line_marker;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * Set the visibility of the markers
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Line_marker;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Settings for the tooltip
         */
        class Line_tooltip extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Line_tooltip
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Line_tooltipOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Line_tooltip with name `sClassName` and enriches it
           * with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getEnabled enabled}.
           *
           * Set whether the tooltip is enabled
           *
           * Default value is `true`.
           */
          getEnabled(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Line_tooltip.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Sets a new value for property {@link #getEnabled enabled}.
           *
           * Set whether the tooltip is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setEnabled(
            /**
             * New value for property `enabled`
             */
            bEnabled: boolean
          ): sap.viz.ui5.types.Line_tooltip;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Module sap.viz.ui5.types.Pie
         */
        class Pie extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Pie
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: PieOpts
          );

          /**
           * Destroys the animation in the aggregation {@link #getAnimation animation}.
           */
          destroyAnimation(): sap.viz.ui5.types.Pie;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
           */
          destroyToolTip(): sap.viz.ui5.types.Pie;
          /**
           * Creates a new subclass of class sap.viz.ui5.types.Pie with name `sClassName` and enriches it with the
           * information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets content of aggregation {@link #getAnimation animation}.
           *
           * Settings for animations in the plot area
           */
          getAnimation(): sap.viz.ui5.types.Pie_animation;
          /**
           * Gets current value of property {@link #getColorPalette colorPalette}.
           *
           * Set the color palette for the sectors of the pie chart
           *
           * Default value is `#748CB2,#9CC677,#EACF5E,#F9AD79,#D16A7C,#8873A2,#3A95B3,#B6D949,#FDD36C,#F47958,#A65084,#0063B1,#0DA841,#FCB71D,#F05620,#B22D6E,#3C368E,#8FB2CF,#95D4AB,#EAE98F,#F9BE92,#EC9A99,#BC98BD,#1EB7B2,#73C03C,#F48323,#EB271B,#D9B5CA,#AED1DA,#DFECB2,#FCDAB0,#F5BCB4`.
           */
          getColorPalette(): string[];
          /**
           * Gets current value of property {@link #getDrawingEffect drawingEffect}.
           *
           * Set the drawing effect of the pie
           *
           * Default value is `normal`.
           */
          getDrawingEffect(): sap.viz.ui5.types.Pie_drawingEffect;
          /**
           * Gets current value of property {@link #getFormatRules formatRules}.
           *
           * Rules to format data points, sample: [{condition: [{Key1:"Value1", Key2:"Value2"}], color:"#00ff00"},
           * {condition: [{Key3:"Value3"}], color:"#00ffff"}]. Each rule has two properties: "condition" and "color".
           * The relation among the condition object in "condition" array is "OR", which means the data point that
           * met any condition in the array will apply the "color". If multiple rules could apply on the same data
           * point, the last rule would take effect.
           */
          getFormatRules(): object[];
          /**
           * Gets current value of property {@link #getIsDonut isDonut}.
           *
           * Set the chart to display as a donut or a pie. If this value is set to 'true', the chart displays as a
           * donut. If this value is set to 'false', the chart displays as a pie.
           *
           * Default value is `false`.
           */
          getIsDonut(): boolean;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getIsGeoPie isGeoPie}.
           *
           * Set whether the chart displays as a geo pie chart. If this value is set to 'true', the chart displays
           * as a geo pie chart. If this value is set to 'false', the chart does not display as a geo pie chart.
           *
           * Default value is `false`.
           */
          getIsGeoPie(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Pie.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getPlotScale plotScale}.
           *
           * Set the plot scale of the pie
           *
           * Default value is `1`.
           */
          getPlotScale(): number;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getToolTip toolTip}.
           *
           * Settings for tooltip related properties
           */
          getToolTip(): sap.viz.ui5.types.Pie_tooltip;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getValign valign}.
           *
           * Set the vertical aligment of the chart
           *
           * Default value is `top`.
           */
          getValign(): sap.viz.ui5.types.Pie_valign;
          /**
           * Sets the aggregated {@link #getAnimation animation}.
           */
          setAnimation(
            /**
             * The animation to set
             */
            oAnimation: sap.viz.ui5.types.Pie_animation
          ): sap.viz.ui5.types.Pie;
          /**
           * Sets a new value for property {@link #getColorPalette colorPalette}.
           *
           * Set the color palette for the sectors of the pie chart
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#748CB2,#9CC677,#EACF5E,#F9AD79,#D16A7C,#8873A2,#3A95B3,#B6D949,#FDD36C,#F47958,#A65084,#0063B1,#0DA841,#FCB71D,#F05620,#B22D6E,#3C368E,#8FB2CF,#95D4AB,#EAE98F,#F9BE92,#EC9A99,#BC98BD,#1EB7B2,#73C03C,#F48323,#EB271B,#D9B5CA,#AED1DA,#DFECB2,#FCDAB0,#F5BCB4`.
           */
          setColorPalette(
            /**
             * New value for property `colorPalette`
             */
            sColorPalette: string[]
          ): sap.viz.ui5.types.Pie;
          /**
           * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
           *
           * Set the drawing effect of the pie
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `normal`.
           */
          setDrawingEffect(
            /**
             * New value for property `drawingEffect`
             */
            sDrawingEffect: sap.viz.ui5.types.Pie_drawingEffect
          ): sap.viz.ui5.types.Pie;
          /**
           * Sets a new value for property {@link #getFormatRules formatRules}.
           *
           * Rules to format data points, sample: [{condition: [{Key1:"Value1", Key2:"Value2"}], color:"#00ff00"},
           * {condition: [{Key3:"Value3"}], color:"#00ffff"}]. Each rule has two properties: "condition" and "color".
           * The relation among the condition object in "condition" array is "OR", which means the data point that
           * met any condition in the array will apply the "color". If multiple rules could apply on the same data
           * point, the last rule would take effect.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setFormatRules(
            /**
             * New value for property `formatRules`
             */
            sFormatRules: object[]
          ): sap.viz.ui5.types.Pie;
          /**
           * Sets a new value for property {@link #getIsDonut isDonut}.
           *
           * Set the chart to display as a donut or a pie. If this value is set to 'true', the chart displays as a
           * donut. If this value is set to 'false', the chart displays as a pie.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setIsDonut(
            /**
             * New value for property `isDonut`
             */
            bIsDonut: boolean
          ): sap.viz.ui5.types.Pie;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getIsGeoPie isGeoPie}.
           *
           * Set whether the chart displays as a geo pie chart. If this value is set to 'true', the chart displays
           * as a geo pie chart. If this value is set to 'false', the chart does not display as a geo pie chart.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setIsGeoPie(
            /**
             * New value for property `isGeoPie`
             */
            bIsGeoPie: boolean
          ): sap.viz.ui5.types.Pie;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getPlotScale plotScale}.
           *
           * Set the plot scale of the pie
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `1`.
           */
          setPlotScale(
            /**
             * New value for property `plotScale`
             */
            fPlotScale: number
          ): sap.viz.ui5.types.Pie;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getToolTip toolTip}.
           */
          setToolTip(
            /**
             * The toolTip to set
             */
            oToolTip: sap.viz.ui5.types.Pie_tooltip
          ): sap.viz.ui5.types.Pie;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getValign valign}.
           *
           * Set the vertical aligment of the chart
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `top`.
           */
          setValign(
            /**
             * New value for property `valign`
             */
            sValign: sap.viz.ui5.types.Pie_valign
          ): sap.viz.ui5.types.Pie;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for animations in the plot area
         */
        class Pie_animation extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Pie_animation
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Pie_animationOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Pie_animation with name `sClassName` and enriches it
           * with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getDataLoading dataLoading}.
           *
           * Set whether the data loading animation is enabled
           *
           * Default value is `true`.
           */
          getDataLoading(): boolean;
          /**
           * Gets current value of property {@link #getDataUpdating dataUpdating}.
           *
           * Set whether the data updating animation is enabled
           *
           * Default value is `true`.
           */
          getDataUpdating(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Pie_animation.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getResizing resizing}.
           *
           * Set whether the resizing animation is enabled
           *
           * Default value is `true`.
           */
          getResizing(): boolean;
          /**
           * Sets a new value for property {@link #getDataLoading dataLoading}.
           *
           * Set whether the data loading animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setDataLoading(
            /**
             * New value for property `dataLoading`
             */
            bDataLoading: boolean
          ): sap.viz.ui5.types.Pie_animation;
          /**
           * Sets a new value for property {@link #getDataUpdating dataUpdating}.
           *
           * Set whether the data updating animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setDataUpdating(
            /**
             * New value for property `dataUpdating`
             */
            bDataUpdating: boolean
          ): sap.viz.ui5.types.Pie_animation;
          /**
           * Sets a new value for property {@link #getResizing resizing}.
           *
           * Set whether the resizing animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setResizing(
            /**
             * New value for property `resizing`
             */
            bResizing: boolean
          ): sap.viz.ui5.types.Pie_animation;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Settings for tooltip related properties
         */
        class Pie_tooltip extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Pie_tooltip
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Pie_tooltipOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Pie_tooltip with name `sClassName` and enriches it
           * with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getFormatString formatString}.
           *
           * Set format string of tooltip. The first string is applied to value and the second is applied to percentage.Any
           * character in "MDYHSAmdyhsa#?%0@" is reserved as a token for format code.
           */
          getFormatString(): string[];
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Pie_tooltip.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getPercentageFormat percentageFormat}.
           *
           * Set the number format of the percentage label in tooltip
           *
           * Default value is `.0%`.
           */
          getPercentageFormat(): string;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getValueFormat valueFormat}.
           *
           * Set the number format of the measure value in tooltip
           *
           * Default value is `n`.
           */
          getValueFormat(): string;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * Set whether tooltip is enabled
           *
           * Default value is `true`.
           */
          getVisible(): boolean;
          /**
           * Sets a new value for property {@link #getFormatString formatString}.
           *
           * Set format string of tooltip. The first string is applied to value and the second is applied to percentage.Any
           * character in "MDYHSAmdyhsa#?%0@" is reserved as a token for format code.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setFormatString(
            /**
             * New value for property `formatString`
             */
            sFormatString: string[]
          ): sap.viz.ui5.types.Pie_tooltip;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getPercentageFormat percentageFormat}.
           *
           * Set the number format of the percentage label in tooltip
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `.0%`.
           */
          setPercentageFormat(
            /**
             * New value for property `percentageFormat`
             */
            sPercentageFormat: string
          ): sap.viz.ui5.types.Pie_tooltip;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getValueFormat valueFormat}.
           *
           * Set the number format of the measure value in tooltip
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `n`.
           */
          setValueFormat(
            /**
             * New value for property `valueFormat`
             */
            sValueFormat: string
          ): sap.viz.ui5.types.Pie_tooltip;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * Set whether tooltip is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Pie_tooltip;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Module sap.viz.ui5.types.RootContainer
         */
        class RootContainer extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.RootContainer
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: RootContainerOpts
          );

          /**
           * Destroys the layout in the aggregation {@link #getLayout layout}.
           */
          destroyLayout(): sap.viz.ui5.types.RootContainer;
          /**
           * Creates a new subclass of class sap.viz.ui5.types.RootContainer with name `sClassName` and enriches it
           * with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets content of aggregation {@link #getLayout layout}.
           *
           * Settings for the layout of the root container
           */
          getLayout(): sap.viz.ui5.types.RootContainer_layout;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.RootContainer.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Sets the aggregated {@link #getLayout layout}.
           */
          setLayout(
            /**
             * The layout to set
             */
            oLayout: sap.viz.ui5.types.RootContainer_layout
          ): sap.viz.ui5.types.RootContainer;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for the layout of the root container
         */
        class RootContainer_layout extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.RootContainer_layout
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: RootContainer_layoutOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.RootContainer_layout with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getAdjustPolicy adjustPolicy}.
           *
           * Indicates the layout adjust policy
           */
          getAdjustPolicy(): string;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getHgap hgap}.
           *
           * Horizontal gap value between UI components
           *
           * Default value is `8`.
           */
          getHgap(): number;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getHideAxisTitleFirst hideAxisTitleFirst}.
           *
           * Hide axis title firstly if the space is limited.
           *
           * Default value is `true`.
           */
          getHideAxisTitleFirst(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.RootContainer_layout.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getPadding padding}.
           *
           * Set the universal padding value. This single value is applied to all sides of the chart. Individual settings
           * for each edge are also supported.
           *
           * Default value is `24`.
           */
          getPadding(): number;
          /**
           * Gets current value of property {@link #getPaddingBottom paddingBottom}.
           *
           * Set the padding value for the bottom side
           */
          getPaddingBottom(): number;
          /**
           * Gets current value of property {@link #getPaddingLeft paddingLeft}.
           *
           * Set the padding value for the left side
           */
          getPaddingLeft(): number;
          /**
           * Gets current value of property {@link #getPaddingRight paddingRight}.
           *
           * Set the padding value for the right side
           */
          getPaddingRight(): number;
          /**
           * Gets current value of property {@link #getPaddingTop paddingTop}.
           *
           * Set the padding value for the top side
           */
          getPaddingTop(): number;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getVgap vgap}.
           *
           * Vertical gap value between UI components
           *
           * Default value is `8`.
           */
          getVgap(): number;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getAdjustPolicy adjustPolicy}.
           *
           * Indicates the layout adjust policy
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setAdjustPolicy(
            /**
             * New value for property `adjustPolicy`
             */
            sAdjustPolicy: string
          ): sap.viz.ui5.types.RootContainer_layout;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getHgap hgap}.
           *
           * Horizontal gap value between UI components
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `8`.
           */
          setHgap(
            /**
             * New value for property `hgap`
             */
            iHgap: number
          ): sap.viz.ui5.types.RootContainer_layout;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getHideAxisTitleFirst hideAxisTitleFirst}.
           *
           * Hide axis title firstly if the space is limited.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setHideAxisTitleFirst(
            /**
             * New value for property `hideAxisTitleFirst`
             */
            bHideAxisTitleFirst: boolean
          ): sap.viz.ui5.types.RootContainer_layout;
          /**
           * Sets a new value for property {@link #getPadding padding}.
           *
           * Set the universal padding value. This single value is applied to all sides of the chart. Individual settings
           * for each edge are also supported.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `24`.
           */
          setPadding(
            /**
             * New value for property `padding`
             */
            iPadding: number
          ): sap.viz.ui5.types.RootContainer_layout;
          /**
           * Sets a new value for property {@link #getPaddingBottom paddingBottom}.
           *
           * Set the padding value for the bottom side
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setPaddingBottom(
            /**
             * New value for property `paddingBottom`
             */
            iPaddingBottom: number
          ): sap.viz.ui5.types.RootContainer_layout;
          /**
           * Sets a new value for property {@link #getPaddingLeft paddingLeft}.
           *
           * Set the padding value for the left side
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setPaddingLeft(
            /**
             * New value for property `paddingLeft`
             */
            iPaddingLeft: number
          ): sap.viz.ui5.types.RootContainer_layout;
          /**
           * Sets a new value for property {@link #getPaddingRight paddingRight}.
           *
           * Set the padding value for the right side
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setPaddingRight(
            /**
             * New value for property `paddingRight`
             */
            iPaddingRight: number
          ): sap.viz.ui5.types.RootContainer_layout;
          /**
           * Sets a new value for property {@link #getPaddingTop paddingTop}.
           *
           * Set the padding value for the top side
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setPaddingTop(
            /**
             * New value for property `paddingTop`
             */
            iPaddingTop: number
          ): sap.viz.ui5.types.RootContainer_layout;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getVgap vgap}.
           *
           * Vertical gap value between UI components
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `8`.
           */
          setVgap(
            /**
             * New value for property `vgap`
             */
            iVgap: number
          ): sap.viz.ui5.types.RootContainer_layout;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Module sap.viz.ui5.types.Scatter
         */
        class Scatter extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Scatter
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: ScatterOpts
          );

          /**
           * Destroys the animation in the aggregation {@link #getAnimation animation}.
           */
          destroyAnimation(): sap.viz.ui5.types.Scatter;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the axisTooltip in the aggregation {@link #getAxisTooltip axisTooltip}.
           */
          destroyAxisTooltip(): sap.viz.ui5.types.Scatter;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the hoverline in the aggregation {@link #getHoverline hoverline}.
           */
          destroyHoverline(): sap.viz.ui5.types.Scatter;
          /**
           * Creates a new subclass of class sap.viz.ui5.types.Scatter with name `sClassName` and enriches it with
           * the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets content of aggregation {@link #getAnimation animation}.
           *
           * Settings for animations in bubble and scatter charts
           */
          getAnimation(): sap.viz.ui5.types.Scatter_animation;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getAxisTooltip axisTooltip}.
           *
           * Set tooltip related properties.
           */
          getAxisTooltip(): sap.viz.ui5.types.Scatter_axisTooltip;
          /**
           * Gets current value of property {@link #getColorPalette colorPalette}.
           *
           * Set the color of the bubbles
           *
           * Default value is `#748CB2,#9CC677,#EACF5E,#F9AD79,#D16A7C,#8873A2,#3A95B3,#B6D949,#FDD36C,#F47958,#A65084,#0063B1,#0DA841,#FCB71D,#F05620,#B22D6E,#3C368E,#8FB2CF,#95D4AB,#EAE98F,#F9BE92,#EC9A99,#BC98BD,#1EB7B2,#73C03C,#F48323,#EB271B,#D9B5CA,#AED1DA,#DFECB2,#FCDAB0,#F5BCB4`.
           */
          getColorPalette(): string[];
          /**
           * Gets current value of property {@link #getDrawingEffect drawingEffect}.
           *
           * Set the drawing effect for the bubbles
           *
           * Default value is `normal`.
           */
          getDrawingEffect(): sap.viz.ui5.types.Scatter_drawingEffect;
          /**
           * Gets current value of property {@link #getFormatRules formatRules}.
           *
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           */
          getFormatRules(): object[];
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getHoverline hoverline}.
           *
           * Settings for hoverline properties.
           */
          getHoverline(): sap.viz.ui5.types.Scatter_hoverline;
          /**
           * Gets current value of property {@link #getMarkerSize markerSize}.
           *
           * Set the marker size for data points. The available range is from '4' to '32'.
           *
           * Default value is `10`.
           */
          getMarkerSize(): number;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getMaxPriValue maxPriValue}.
           *
           * Set the max value of primary values
           *
           * Default value is `0`.
           */
          getMaxPriValue(): number;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getMaxSecValue maxSecValue}.
           *
           * Set the max value of secondary values
           *
           * Default value is `0`.
           */
          getMaxSecValue(): number;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Scatter.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getMinPriValue minPriValue}.
           *
           * Set the minimum value of primary values
           *
           * Default value is `0`.
           */
          getMinPriValue(): number;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getMinSecValue minSecValue}.
           *
           * Set the minimum value of secondary values
           *
           * Default value is `0`.
           */
          getMinSecValue(): number;
          /**
           * Gets current value of property {@link #getShapePalette shapePalette}.
           *
           * Set the shape of the bubbles
           *
           * Default value is `circle,square,diamond,triangleUp,triangleDown,triangleLeft,triangleRight,cross,intersection`.
           */
          getShapePalette(): string[];
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getShowNegativeValues showNegativeValues}.
           *
           * Show/hide the data of negetive value.
           *
           * Default value is `true`.
           */
          getShowNegativeValues(): boolean;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getTimeBased timeBased}.
           *
           * Set whether it is time based scatter/bubble
           *
           * Default value is `false`.
           */
          getTimeBased(): boolean;
          /**
           * Sets the aggregated {@link #getAnimation animation}.
           */
          setAnimation(
            /**
             * The animation to set
             */
            oAnimation: sap.viz.ui5.types.Scatter_animation
          ): sap.viz.ui5.types.Scatter;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getAxisTooltip axisTooltip}.
           */
          setAxisTooltip(
            /**
             * The axisTooltip to set
             */
            oAxisTooltip: sap.viz.ui5.types.Scatter_axisTooltip
          ): sap.viz.ui5.types.Scatter;
          /**
           * Sets a new value for property {@link #getColorPalette colorPalette}.
           *
           * Set the color of the bubbles
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#748CB2,#9CC677,#EACF5E,#F9AD79,#D16A7C,#8873A2,#3A95B3,#B6D949,#FDD36C,#F47958,#A65084,#0063B1,#0DA841,#FCB71D,#F05620,#B22D6E,#3C368E,#8FB2CF,#95D4AB,#EAE98F,#F9BE92,#EC9A99,#BC98BD,#1EB7B2,#73C03C,#F48323,#EB271B,#D9B5CA,#AED1DA,#DFECB2,#FCDAB0,#F5BCB4`.
           */
          setColorPalette(
            /**
             * New value for property `colorPalette`
             */
            sColorPalette: string[]
          ): sap.viz.ui5.types.Scatter;
          /**
           * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
           *
           * Set the drawing effect for the bubbles
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `normal`.
           */
          setDrawingEffect(
            /**
             * New value for property `drawingEffect`
             */
            sDrawingEffect: sap.viz.ui5.types.Scatter_drawingEffect
          ): sap.viz.ui5.types.Scatter;
          /**
           * Sets a new value for property {@link #getFormatRules formatRules}.
           *
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setFormatRules(
            /**
             * New value for property `formatRules`
             */
            sFormatRules: object[]
          ): sap.viz.ui5.types.Scatter;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getHoverline hoverline}.
           */
          setHoverline(
            /**
             * The hoverline to set
             */
            oHoverline: sap.viz.ui5.types.Scatter_hoverline
          ): sap.viz.ui5.types.Scatter;
          /**
           * Sets a new value for property {@link #getMarkerSize markerSize}.
           *
           * Set the marker size for data points. The available range is from '4' to '32'.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `10`.
           */
          setMarkerSize(
            /**
             * New value for property `markerSize`
             */
            iMarkerSize: number
          ): sap.viz.ui5.types.Scatter;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getMaxPriValue maxPriValue}.
           *
           * Set the max value of primary values
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `0`.
           */
          setMaxPriValue(
            /**
             * New value for property `maxPriValue`
             */
            fMaxPriValue: number
          ): sap.viz.ui5.types.Scatter;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getMaxSecValue maxSecValue}.
           *
           * Set the max value of secondary values
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `0`.
           */
          setMaxSecValue(
            /**
             * New value for property `maxSecValue`
             */
            fMaxSecValue: number
          ): sap.viz.ui5.types.Scatter;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getMinPriValue minPriValue}.
           *
           * Set the minimum value of primary values
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `0`.
           */
          setMinPriValue(
            /**
             * New value for property `minPriValue`
             */
            fMinPriValue: number
          ): sap.viz.ui5.types.Scatter;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getMinSecValue minSecValue}.
           *
           * Set the minimum value of secondary values
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `0`.
           */
          setMinSecValue(
            /**
             * New value for property `minSecValue`
             */
            fMinSecValue: number
          ): sap.viz.ui5.types.Scatter;
          /**
           * Sets a new value for property {@link #getShapePalette shapePalette}.
           *
           * Set the shape of the bubbles
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `circle,square,diamond,triangleUp,triangleDown,triangleLeft,triangleRight,cross,intersection`.
           */
          setShapePalette(
            /**
             * New value for property `shapePalette`
             */
            sShapePalette: string[]
          ): sap.viz.ui5.types.Scatter;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getShowNegativeValues showNegativeValues}.
           *
           * Show/hide the data of negetive value.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setShowNegativeValues(
            /**
             * New value for property `showNegativeValues`
             */
            bShowNegativeValues: boolean
          ): sap.viz.ui5.types.Scatter;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getTimeBased timeBased}.
           *
           * Set whether it is time based scatter/bubble
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setTimeBased(
            /**
             * New value for property `timeBased`
             */
            bTimeBased: boolean
          ): sap.viz.ui5.types.Scatter;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for animations in bubble and scatter charts
         */
        class Scatter_animation extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Scatter_animation
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Scatter_animationOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Scatter_animation with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getDataLoading dataLoading}.
           *
           * Set whether the data loading animation is enabled
           *
           * Default value is `true`.
           */
          getDataLoading(): boolean;
          /**
           * Gets current value of property {@link #getDataUpdating dataUpdating}.
           *
           * Set whether the data updating animation is enabled
           *
           * Default value is `true`.
           */
          getDataUpdating(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Scatter_animation.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getResizing resizing}.
           *
           * Set whether the resizing animation is enabled
           *
           * Default value is `true`.
           */
          getResizing(): boolean;
          /**
           * Sets a new value for property {@link #getDataLoading dataLoading}.
           *
           * Set whether the data loading animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setDataLoading(
            /**
             * New value for property `dataLoading`
             */
            bDataLoading: boolean
          ): sap.viz.ui5.types.Scatter_animation;
          /**
           * Sets a new value for property {@link #getDataUpdating dataUpdating}.
           *
           * Set whether the data updating animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setDataUpdating(
            /**
             * New value for property `dataUpdating`
             */
            bDataUpdating: boolean
          ): sap.viz.ui5.types.Scatter_animation;
          /**
           * Sets a new value for property {@link #getResizing resizing}.
           *
           * Set whether the resizing animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setResizing(
            /**
             * New value for property `resizing`
             */
            bResizing: boolean
          ): sap.viz.ui5.types.Scatter_animation;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Set tooltip related properties.
         */
        class Scatter_axisTooltip extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Scatter_axisTooltip
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Scatter_axisTooltipOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Scatter_axisTooltip with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getFormatString formatString}.
           *
           * Set format string for small tooltip.The first one is applied to xAxis and the second one is applied to
           * yAxis.Any character in "MDYHSAmdyhsa#?%0@" is reserved as a token for format code.
           */
          getFormatString(): string[];
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Scatter_axisTooltip.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * enabled/disabled tooltip.
           *
           * Default value is `true`.
           */
          getVisible(): boolean;
          /**
           * Sets a new value for property {@link #getFormatString formatString}.
           *
           * Set format string for small tooltip.The first one is applied to xAxis and the second one is applied to
           * yAxis.Any character in "MDYHSAmdyhsa#?%0@" is reserved as a token for format code.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setFormatString(
            /**
             * New value for property `formatString`
             */
            sFormatString: string[]
          ): sap.viz.ui5.types.Scatter_axisTooltip;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * enabled/disabled tooltip.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Scatter_axisTooltip;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Settings for hoverline properties.
         */
        class Scatter_hoverline extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Scatter_hoverline
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Scatter_hoverlineOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Scatter_hoverline with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Scatter_hoverline.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * Set to enabled/disabled hoverline or not.
           *
           * Default value is `true`.
           */
          getVisible(): boolean;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * Set to enabled/disabled hoverline or not.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Scatter_hoverline;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Module sap.viz.ui5.types.StackedVerticalBar
         */
        class StackedVerticalBar extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.StackedVerticalBar
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: StackedVerticalBarOpts
          );

          /**
           * Destroys the animation in the aggregation {@link #getAnimation animation}.
           */
          destroyAnimation(): sap.viz.ui5.types.StackedVerticalBar;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
           */
          destroyToolTip(): sap.viz.ui5.types.StackedVerticalBar;
          /**
           * Creates a new subclass of class sap.viz.ui5.types.StackedVerticalBar with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets content of aggregation {@link #getAnimation animation}.
           *
           * Settings for animations in the plot area
           */
          getAnimation(): sap.viz.ui5.types.StackedVerticalBar_animation;
          /**
           * Gets current value of property {@link #getColorPalette colorPalette}.
           *
           * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension
           * bound to the legend.
           *
           * Default value is `#748CB2,#9CC677,#EACF5E,#F9AD79,#D16A7C,#8873A2,#3A95B3,#B6D949,#FDD36C,#F47958,#A65084,#0063B1,#0DA841,#FCB71D,#F05620,#B22D6E,#3C368E,#8FB2CF,#95D4AB,#EAE98F,#F9BE92,#EC9A99,#BC98BD,#1EB7B2,#73C03C,#F48323,#EB271B,#D9B5CA,#AED1DA,#DFECB2,#FCDAB0,#F5BCB4`.
           */
          getColorPalette(): string[];
          /**
           * Gets current value of property {@link #getDrawingEffect drawingEffect}.
           *
           * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy.
           * If this value is set to 'normal', the plot area is matte.
           *
           * Default value is `normal`.
           */
          getDrawingEffect(): sap.viz.ui5.types.StackedVerticalBar_drawingEffect;
          /**
           * Gets current value of property {@link #getFormatRules formatRules}.
           *
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           */
          getFormatRules(): object[];
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getIsRoundCorner isRoundCorner}.
           *
           * Set whether bars have rounded corners
           *
           * Default value is `false`.
           */
          getIsRoundCorner(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.StackedVerticalBar.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getMode mode}.
           *
           * Set the display mode for stacked vertical bar charts
           *
           * Default value is `comparison`.
           */
          getMode(): sap.viz.ui5.types.StackedVerticalBar_mode;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getOrientation orientation}.
           *
           * Set the orientation of the plot area.
           *
           * Default value is `vertical`.
           */
          getOrientation(): sap.viz.ui5.types.StackedVerticalBar_orientation;
          /**
           * Gets current value of property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
           *
           * Set the color palette for axis 1 in dual charts.
           *
           * Default value is `#8FBADD,#B8D4E9,#7AAED6,#A3C7E3,#3D88C4,#66A1D0,#297CBE,#5295CA,#005BA3,#146FB7,#005395,#0063B1`.
           */
          getPrimaryValuesColorPalette(): string[];
          /**
           * Gets current value of property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
           *
           * Set the color palette for axis 2 in dual chart.
           *
           * Default value is `#F6A09B,#F9C3C0,#F58E88,#F8B1AD,#F05B52,#F37D76,#EE4A40,#F16C64,#D92419,#ED382D,#C52117,#EB271B`.
           */
          getSecondaryValuesColorPalette(): string[];
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getToolTip toolTip}.
           *
           * Settings for tooltip related properties
           */
          getToolTip(): sap.viz.ui5.types.StackedVerticalBar_tooltip;
          /**
           * Sets the aggregated {@link #getAnimation animation}.
           */
          setAnimation(
            /**
             * The animation to set
             */
            oAnimation: sap.viz.ui5.types.StackedVerticalBar_animation
          ): sap.viz.ui5.types.StackedVerticalBar;
          /**
           * Sets a new value for property {@link #getColorPalette colorPalette}.
           *
           * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension
           * bound to the legend.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#748CB2,#9CC677,#EACF5E,#F9AD79,#D16A7C,#8873A2,#3A95B3,#B6D949,#FDD36C,#F47958,#A65084,#0063B1,#0DA841,#FCB71D,#F05620,#B22D6E,#3C368E,#8FB2CF,#95D4AB,#EAE98F,#F9BE92,#EC9A99,#BC98BD,#1EB7B2,#73C03C,#F48323,#EB271B,#D9B5CA,#AED1DA,#DFECB2,#FCDAB0,#F5BCB4`.
           */
          setColorPalette(
            /**
             * New value for property `colorPalette`
             */
            sColorPalette: string[]
          ): sap.viz.ui5.types.StackedVerticalBar;
          /**
           * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
           *
           * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy.
           * If this value is set to 'normal', the plot area is matte.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `normal`.
           */
          setDrawingEffect(
            /**
             * New value for property `drawingEffect`
             */
            sDrawingEffect: sap.viz.ui5.types.StackedVerticalBar_drawingEffect
          ): sap.viz.ui5.types.StackedVerticalBar;
          /**
           * Sets a new value for property {@link #getFormatRules formatRules}.
           *
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setFormatRules(
            /**
             * New value for property `formatRules`
             */
            sFormatRules: object[]
          ): sap.viz.ui5.types.StackedVerticalBar;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getIsRoundCorner isRoundCorner}.
           *
           * Set whether bars have rounded corners
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setIsRoundCorner(
            /**
             * New value for property `isRoundCorner`
             */
            bIsRoundCorner: boolean
          ): sap.viz.ui5.types.StackedVerticalBar;
          /**
           * Sets a new value for property {@link #getMode mode}.
           *
           * Set the display mode for stacked vertical bar charts
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `comparison`.
           */
          setMode(
            /**
             * New value for property `mode`
             */
            sMode: sap.viz.ui5.types.StackedVerticalBar_mode
          ): sap.viz.ui5.types.StackedVerticalBar;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getOrientation orientation}.
           *
           * Set the orientation of the plot area.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `vertical`.
           */
          setOrientation(
            /**
             * New value for property `orientation`
             */
            sOrientation: sap.viz.ui5.types.StackedVerticalBar_orientation
          ): sap.viz.ui5.types.StackedVerticalBar;
          /**
           * Sets a new value for property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
           *
           * Set the color palette for axis 1 in dual charts.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#8FBADD,#B8D4E9,#7AAED6,#A3C7E3,#3D88C4,#66A1D0,#297CBE,#5295CA,#005BA3,#146FB7,#005395,#0063B1`.
           */
          setPrimaryValuesColorPalette(
            /**
             * New value for property `primaryValuesColorPalette`
             */
            sPrimaryValuesColorPalette: string[]
          ): sap.viz.ui5.types.StackedVerticalBar;
          /**
           * Sets a new value for property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
           *
           * Set the color palette for axis 2 in dual chart.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#F6A09B,#F9C3C0,#F58E88,#F8B1AD,#F05B52,#F37D76,#EE4A40,#F16C64,#D92419,#ED382D,#C52117,#EB271B`.
           */
          setSecondaryValuesColorPalette(
            /**
             * New value for property `secondaryValuesColorPalette`
             */
            sSecondaryValuesColorPalette: string[]
          ): sap.viz.ui5.types.StackedVerticalBar;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getToolTip toolTip}.
           */
          setToolTip(
            /**
             * The toolTip to set
             */
            oToolTip: sap.viz.ui5.types.StackedVerticalBar_tooltip
          ): sap.viz.ui5.types.StackedVerticalBar;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for animations in the plot area
         */
        class StackedVerticalBar_animation extends sap.viz.ui5.core
          .BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.StackedVerticalBar_animation
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: StackedVerticalBar_animationOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.StackedVerticalBar_animation with name `sClassName`
           * and enriches it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getDataLoading dataLoading}.
           *
           * Set whether the data loading animation is enabled
           *
           * Default value is `true`.
           */
          getDataLoading(): boolean;
          /**
           * Gets current value of property {@link #getDataUpdating dataUpdating}.
           *
           * Set whether the data updating animation is enabled
           *
           * Default value is `true`.
           */
          getDataUpdating(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.StackedVerticalBar_animation.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getResizing resizing}.
           *
           * Set whether the resizing animation is enabled
           *
           * Default value is `true`.
           */
          getResizing(): boolean;
          /**
           * Sets a new value for property {@link #getDataLoading dataLoading}.
           *
           * Set whether the data loading animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setDataLoading(
            /**
             * New value for property `dataLoading`
             */
            bDataLoading: boolean
          ): sap.viz.ui5.types.StackedVerticalBar_animation;
          /**
           * Sets a new value for property {@link #getDataUpdating dataUpdating}.
           *
           * Set whether the data updating animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setDataUpdating(
            /**
             * New value for property `dataUpdating`
             */
            bDataUpdating: boolean
          ): sap.viz.ui5.types.StackedVerticalBar_animation;
          /**
           * Sets a new value for property {@link #getResizing resizing}.
           *
           * Set whether the resizing animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setResizing(
            /**
             * New value for property `resizing`
             */
            bResizing: boolean
          ): sap.viz.ui5.types.StackedVerticalBar_animation;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Settings for tooltip related properties
         */
        class StackedVerticalBar_tooltip extends sap.viz.ui5.core
          .BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.StackedVerticalBar_tooltip
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: StackedVerticalBar_tooltipOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.StackedVerticalBar_tooltip with name `sClassName` and
           * enriches it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getEnabled enabled}.
           *
           * Set whether the tooltip is enabled
           *
           * Default value is `true`.
           */
          getEnabled(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.StackedVerticalBar_tooltip.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Sets a new value for property {@link #getEnabled enabled}.
           *
           * Set whether the tooltip is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setEnabled(
            /**
             * New value for property `enabled`
             */
            bEnabled: boolean
          ): sap.viz.ui5.types.StackedVerticalBar_tooltip;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Module sap.viz.ui5.types.Title
         */
        class Title extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Title
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: TitleOpts
          );

          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the layout in the aggregation {@link #getLayout layout}.
           */
          destroyLayout(): sap.viz.ui5.types.Title;
          /**
           * Creates a new subclass of class sap.viz.ui5.types.Title with name `sClassName` and enriches it with the
           * information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getAlignment alignment}.
           *
           * Set the alignment of the main title
           *
           * Default value is `center`.
           */
          getAlignment(): sap.viz.ui5.types.Title_alignment;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getLayout layout}.
           *
           * Settings for layout of title
           */
          getLayout(): sap.viz.ui5.types.Title_layout;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Title.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getText text}.
           *
           * Set the text of the main title
           */
          getText(): string;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * Set the visibility of the main title
           *
           * Default value is `false`.
           */
          getVisible(): boolean;
          /**
           * Sets a new value for property {@link #getAlignment alignment}.
           *
           * Set the alignment of the main title
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `center`.
           */
          setAlignment(
            /**
             * New value for property `alignment`
             */
            sAlignment: sap.viz.ui5.types.Title_alignment
          ): sap.viz.ui5.types.Title;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getLayout layout}.
           */
          setLayout(
            /**
             * The layout to set
             */
            oLayout: sap.viz.ui5.types.Title_layout
          ): sap.viz.ui5.types.Title;
          /**
           * Sets a new value for property {@link #getText text}.
           *
           * Set the text of the main title
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setText(
            /**
             * New value for property `text`
             */
            sText: string
          ): sap.viz.ui5.types.Title;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * Set the visibility of the main title
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Title;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Settings for layout of title
         */
        class Title_layout extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Title_layout
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Title_layoutOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Title_layout with name `sClassName` and enriches it
           * with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Title_layout.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getPosition position}.
           *
           * Set the position of the title
           *
           * Default value is `right`.
           */
          getPosition(): string;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getPriority priority}.
           *
           * Set the priority of the position for the title
           *
           * Default value is `0`.
           */
          getPriority(): number;
          /**
           * Sets a new value for property {@link #getPosition position}.
           *
           * Set the position of the title
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `right`.
           */
          setPosition(
            /**
             * New value for property `position`
             */
            sPosition: string
          ): sap.viz.ui5.types.Title_layout;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getPriority priority}.
           *
           * Set the priority of the position for the title
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `0`.
           */
          setPriority(
            /**
             * New value for property `priority`
             */
            iPriority: number
          ): sap.viz.ui5.types.Title_layout;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Module sap.viz.ui5.types.Tooltip
         */
        class Tooltip extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Tooltip
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: TooltipOpts
          );

          /**
           * Destroys the background in the aggregation {@link #getBackground background}.
           */
          destroyBackground(): sap.viz.ui5.types.Tooltip;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the bodyDimensionLabel in the aggregation {@link #getBodyDimensionLabel bodyDimensionLabel}.
           */
          destroyBodyDimensionLabel(): sap.viz.ui5.types.Tooltip;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the bodyDimensionValue in the aggregation {@link #getBodyDimensionValue bodyDimensionValue}.
           */
          destroyBodyDimensionValue(): sap.viz.ui5.types.Tooltip;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the bodyMeasureLabel in the aggregation {@link #getBodyMeasureLabel bodyMeasureLabel}.
           */
          destroyBodyMeasureLabel(): sap.viz.ui5.types.Tooltip;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the bodyMeasureValue in the aggregation {@link #getBodyMeasureValue bodyMeasureValue}.
           */
          destroyBodyMeasureValue(): sap.viz.ui5.types.Tooltip;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the closeButton in the aggregation {@link #getCloseButton closeButton}.
           */
          destroyCloseButton(): sap.viz.ui5.types.Tooltip;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the footerLabel in the aggregation {@link #getFooterLabel footerLabel}.
           */
          destroyFooterLabel(): sap.viz.ui5.types.Tooltip;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the separationLine in the aggregation {@link #getSeparationLine separationLine}.
           */
          destroySeparationLine(): sap.viz.ui5.types.Tooltip;
          /**
           * Creates a new subclass of class sap.viz.ui5.types.Tooltip with name `sClassName` and enriches it with
           * the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets content of aggregation {@link #getBackground background}.
           *
           * Define the background style of the tooltip.
           */
          getBackground(): sap.viz.ui5.types.Tooltip_background;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getBodyDimensionLabel bodyDimensionLabel}.
           *
           * Define the color of the dimension name of the tooltip body.
           */
          getBodyDimensionLabel(): sap.viz.ui5.types.Tooltip_bodyDimensionLabel;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getBodyDimensionValue bodyDimensionValue}.
           *
           * Define the color of the dimension value of the tooltip body.
           */
          getBodyDimensionValue(): sap.viz.ui5.types.Tooltip_bodyDimensionValue;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getBodyMeasureLabel bodyMeasureLabel}.
           *
           * Define the color of the measure name of the tooltip body.
           */
          getBodyMeasureLabel(): sap.viz.ui5.types.Tooltip_bodyMeasureLabel;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getBodyMeasureValue bodyMeasureValue}.
           *
           * Define the color of the measure value of the tooltip body.
           */
          getBodyMeasureValue(): sap.viz.ui5.types.Tooltip_bodyMeasureValue;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getCloseButton closeButton}.
           *
           * Define the background and border color of tooltip close button.
           */
          getCloseButton(): sap.viz.ui5.types.Tooltip_closeButton;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getDrawingEffect drawingEffect}.
           *
           * Set the drawing effect for the tooltip
           *
           * Default value is `normal`.
           */
          getDrawingEffect(): sap.viz.ui5.types.Tooltip_drawingEffect;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getFooterLabel footerLabel}.
           *
           * Define the style of the label of the tooltip footer.
           */
          getFooterLabel(): sap.viz.ui5.types.Tooltip_footerLabel;
          /**
           * Gets current value of property {@link #getFormatString formatString}.
           *
           * Set the format strings for text in the tooltip. For dual axis charts, the first array is applied to the
           * primary axis and the second array is applied to the second axis. If you enter fewer format strings into
           * an array than there are measures in the respective axis, then the last format string is applied to all
           * remaining measures. The following characters are reserved as tokens for format code: MDYHSAmdyhsa#?%0@.The
           * following is an example of an array for a chart with two measures: [["#,##0.00 DM;-#,##.00 DM","#,##.00;-#,##.00"]].
           */
          getFormatString(): any[];
          /**
           * Gets current value of property {@link #getLayinChart layinChart}.
           *
           * Set whether the tooltip appears in the chart area
           *
           * Default value is `true`.
           */
          getLayinChart(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Tooltip.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getPostRender postRender}.
           *
           * A callback function can be specified as a parameter and passed to chart options when the user calls the
           * createViz function. This callback function is called after the tooltip is rendered. The user can select
           * and change dom elements' properties under the tooltip element.
           */
          getPostRender(): any;
          /**
           * Gets current value of property {@link #getPreRender preRender}.
           *
           * A callback function can be specified as a parameter and passed to chart options when the user calls the
           * createViz function. This callback function is called before the tooltip is rendered. The input parameter
           * is a dom element, which is at the bottom of the tooltip. Any dom element such as a button can be appended
           * to this parent node. It can only be called when the tooltip is in actionMode.
           */
          getPreRender(): any;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getSeparationLine separationLine}.
           *
           * Define the color of the value of the tooltip separation line.
           */
          getSeparationLine(): sap.viz.ui5.types.Tooltip_separationLine;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * Set the visibility of the tooltip
           *
           * Default value is `true`.
           */
          getVisible(): boolean;
          /**
           * Sets the aggregated {@link #getBackground background}.
           */
          setBackground(
            /**
             * The background to set
             */
            oBackground: sap.viz.ui5.types.Tooltip_background
          ): sap.viz.ui5.types.Tooltip;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getBodyDimensionLabel bodyDimensionLabel}.
           */
          setBodyDimensionLabel(
            /**
             * The bodyDimensionLabel to set
             */
            oBodyDimensionLabel: sap.viz.ui5.types.Tooltip_bodyDimensionLabel
          ): sap.viz.ui5.types.Tooltip;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getBodyDimensionValue bodyDimensionValue}.
           */
          setBodyDimensionValue(
            /**
             * The bodyDimensionValue to set
             */
            oBodyDimensionValue: sap.viz.ui5.types.Tooltip_bodyDimensionValue
          ): sap.viz.ui5.types.Tooltip;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getBodyMeasureLabel bodyMeasureLabel}.
           */
          setBodyMeasureLabel(
            /**
             * The bodyMeasureLabel to set
             */
            oBodyMeasureLabel: sap.viz.ui5.types.Tooltip_bodyMeasureLabel
          ): sap.viz.ui5.types.Tooltip;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getBodyMeasureValue bodyMeasureValue}.
           */
          setBodyMeasureValue(
            /**
             * The bodyMeasureValue to set
             */
            oBodyMeasureValue: sap.viz.ui5.types.Tooltip_bodyMeasureValue
          ): sap.viz.ui5.types.Tooltip;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getCloseButton closeButton}.
           */
          setCloseButton(
            /**
             * The closeButton to set
             */
            oCloseButton: sap.viz.ui5.types.Tooltip_closeButton
          ): sap.viz.ui5.types.Tooltip;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
           *
           * Set the drawing effect for the tooltip
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `normal`.
           */
          setDrawingEffect(
            /**
             * New value for property `drawingEffect`
             */
            sDrawingEffect: sap.viz.ui5.types.Tooltip_drawingEffect
          ): sap.viz.ui5.types.Tooltip;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getFooterLabel footerLabel}.
           */
          setFooterLabel(
            /**
             * The footerLabel to set
             */
            oFooterLabel: sap.viz.ui5.types.Tooltip_footerLabel
          ): sap.viz.ui5.types.Tooltip;
          /**
           * Sets a new value for property {@link #getFormatString formatString}.
           *
           * Set the format strings for text in the tooltip. For dual axis charts, the first array is applied to the
           * primary axis and the second array is applied to the second axis. If you enter fewer format strings into
           * an array than there are measures in the respective axis, then the last format string is applied to all
           * remaining measures. The following characters are reserved as tokens for format code: MDYHSAmdyhsa#?%0@.The
           * following is an example of an array for a chart with two measures: [["#,##0.00 DM;-#,##.00 DM","#,##.00;-#,##.00"]].
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setFormatString(
            /**
             * New value for property `formatString`
             */
            sFormatString: any[]
          ): sap.viz.ui5.types.Tooltip;
          /**
           * Sets a new value for property {@link #getLayinChart layinChart}.
           *
           * Set whether the tooltip appears in the chart area
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setLayinChart(
            /**
             * New value for property `layinChart`
             */
            bLayinChart: boolean
          ): sap.viz.ui5.types.Tooltip;
          /**
           * Sets a new value for property {@link #getPostRender postRender}.
           *
           * A callback function can be specified as a parameter and passed to chart options when the user calls the
           * createViz function. This callback function is called after the tooltip is rendered. The user can select
           * and change dom elements' properties under the tooltip element.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setPostRender(
            /**
             * New value for property `postRender`
             */
            oPostRender: any
          ): sap.viz.ui5.types.Tooltip;
          /**
           * Sets a new value for property {@link #getPreRender preRender}.
           *
           * A callback function can be specified as a parameter and passed to chart options when the user calls the
           * createViz function. This callback function is called before the tooltip is rendered. The input parameter
           * is a dom element, which is at the bottom of the tooltip. Any dom element such as a button can be appended
           * to this parent node. It can only be called when the tooltip is in actionMode.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setPreRender(
            /**
             * New value for property `preRender`
             */
            oPreRender: any
          ): sap.viz.ui5.types.Tooltip;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getSeparationLine separationLine}.
           */
          setSeparationLine(
            /**
             * The separationLine to set
             */
            oSeparationLine: sap.viz.ui5.types.Tooltip_separationLine
          ): sap.viz.ui5.types.Tooltip;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * Set the visibility of the tooltip
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Tooltip;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Define the background style of the tooltip.
         */
        class Tooltip_background extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Tooltip_background
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Tooltip_backgroundOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Tooltip_background with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getBorderColor borderColor}.
           *
           * Define the background border color of the tooltip.
           *
           * Default value is `#cccccc`.
           */
          getBorderColor(): string;
          /**
           * Gets current value of property {@link #getColor color}.
           *
           * Define the background color of the tooltip.
           *
           * Default value is `#ffffff`.
           */
          getColor(): string;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Tooltip_background.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Sets a new value for property {@link #getBorderColor borderColor}.
           *
           * Define the background border color of the tooltip.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#cccccc`.
           */
          setBorderColor(
            /**
             * New value for property `borderColor`
             */
            sBorderColor: string
          ): sap.viz.ui5.types.Tooltip_background;
          /**
           * Sets a new value for property {@link #getColor color}.
           *
           * Define the background color of the tooltip.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#ffffff`.
           */
          setColor(
            /**
             * New value for property `color`
             */
            sColor: string
          ): sap.viz.ui5.types.Tooltip_background;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Define the color of the dimension name of the tooltip body.
         */
        class Tooltip_bodyDimensionLabel extends sap.viz.ui5.core
          .BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Tooltip_bodyDimensionLabel
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Tooltip_bodyDimensionLabelOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Tooltip_bodyDimensionLabel with name `sClassName` and
           * enriches it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getColor color}.
           *
           * Property color
           *
           * Default value is `#666666`.
           */
          getColor(): string;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Tooltip_bodyDimensionLabel.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Sets a new value for property {@link #getColor color}.
           *
           * Property color
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#666666`.
           */
          setColor(
            /**
             * New value for property `color`
             */
            sColor: string
          ): sap.viz.ui5.types.Tooltip_bodyDimensionLabel;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Define the color of the dimension value of the tooltip body.
         */
        class Tooltip_bodyDimensionValue extends sap.viz.ui5.core
          .BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Tooltip_bodyDimensionValue
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Tooltip_bodyDimensionValueOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Tooltip_bodyDimensionValue with name `sClassName` and
           * enriches it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getColor color}.
           *
           * Property color
           *
           * Default value is `#666666`.
           */
          getColor(): string;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Tooltip_bodyDimensionValue.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Sets a new value for property {@link #getColor color}.
           *
           * Property color
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#666666`.
           */
          setColor(
            /**
             * New value for property `color`
             */
            sColor: string
          ): sap.viz.ui5.types.Tooltip_bodyDimensionValue;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Define the color of the measure name of the tooltip body.
         */
        class Tooltip_bodyMeasureLabel extends sap.viz.ui5.core
          .BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Tooltip_bodyMeasureLabel
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Tooltip_bodyMeasureLabelOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Tooltip_bodyMeasureLabel with name `sClassName` and
           * enriches it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getColor color}.
           *
           * Property color
           *
           * Default value is `#666666`.
           */
          getColor(): string;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Tooltip_bodyMeasureLabel.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Sets a new value for property {@link #getColor color}.
           *
           * Property color
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#666666`.
           */
          setColor(
            /**
             * New value for property `color`
             */
            sColor: string
          ): sap.viz.ui5.types.Tooltip_bodyMeasureLabel;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Define the color of the measure value of the tooltip body.
         */
        class Tooltip_bodyMeasureValue extends sap.viz.ui5.core
          .BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Tooltip_bodyMeasureValue
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Tooltip_bodyMeasureValueOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Tooltip_bodyMeasureValue with name `sClassName` and
           * enriches it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getColor color}.
           *
           * Property color
           *
           * Default value is `#000000`.
           */
          getColor(): string;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Tooltip_bodyMeasureValue.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Sets a new value for property {@link #getColor color}.
           *
           * Property color
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#000000`.
           */
          setColor(
            /**
             * New value for property `color`
             */
            sColor: string
          ): sap.viz.ui5.types.Tooltip_bodyMeasureValue;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Define the background and border color of tooltip close button.
         */
        class Tooltip_closeButton extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Tooltip_closeButton
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Tooltip_closeButtonOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Tooltip_closeButton with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getBackgroundColor backgroundColor}.
           *
           * Property backgroundColor
           *
           * Default value is `#ffffff`.
           */
          getBackgroundColor(): string;
          /**
           * Gets current value of property {@link #getBorderColor borderColor}.
           *
           * Property borderColor
           *
           * Default value is `#cccccc`.
           */
          getBorderColor(): string;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Tooltip_closeButton.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Sets a new value for property {@link #getBackgroundColor backgroundColor}.
           *
           * Property backgroundColor
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#ffffff`.
           */
          setBackgroundColor(
            /**
             * New value for property `backgroundColor`
             */
            sBackgroundColor: string
          ): sap.viz.ui5.types.Tooltip_closeButton;
          /**
           * Sets a new value for property {@link #getBorderColor borderColor}.
           *
           * Property borderColor
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#cccccc`.
           */
          setBorderColor(
            /**
             * New value for property `borderColor`
             */
            sBorderColor: string
          ): sap.viz.ui5.types.Tooltip_closeButton;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Define the style of the label of the tooltip footer.
         */
        class Tooltip_footerLabel extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Tooltip_footerLabel
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Tooltip_footerLabelOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Tooltip_footerLabel with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getColor color}.
           *
           * Define the color of the label of the tooltip footer.
           *
           * Default value is `#000000`.
           */
          getColor(): string;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Tooltip_footerLabel.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Sets a new value for property {@link #getColor color}.
           *
           * Define the color of the label of the tooltip footer.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#000000`.
           */
          setColor(
            /**
             * New value for property `color`
             */
            sColor: string
          ): sap.viz.ui5.types.Tooltip_footerLabel;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Define the color of the value of the tooltip separation line.
         */
        class Tooltip_separationLine extends sap.viz.ui5.core
          .BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Tooltip_separationLine
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Tooltip_separationLineOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Tooltip_separationLine with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getBorderBottomColor borderBottomColor}.
           *
           * Property borderBottomColor
           *
           * Default value is `#a7a9ac`.
           */
          getBorderBottomColor(): string;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Tooltip_separationLine.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Sets a new value for property {@link #getBorderBottomColor borderBottomColor}.
           *
           * Property borderBottomColor
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#a7a9ac`.
           */
          setBorderBottomColor(
            /**
             * New value for property `borderBottomColor`
             */
            sBorderBottomColor: string
          ): sap.viz.ui5.types.Tooltip_separationLine;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Module sap.viz.ui5.types.Treemap
         */
        class Treemap extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Treemap
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: TreemapOpts
          );

          /**
           * Destroys the animation in the aggregation {@link #getAnimation animation}.
           */
          destroyAnimation(): sap.viz.ui5.types.Treemap;
          /**
           * Destroys the border in the aggregation {@link #getBorder border}.
           */
          destroyBorder(): sap.viz.ui5.types.Treemap;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
           */
          destroyToolTip(): sap.viz.ui5.types.Treemap;
          /**
           * Creates a new subclass of class sap.viz.ui5.types.Treemap with name `sClassName` and enriches it with
           * the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets content of aggregation {@link #getAnimation animation}.
           *
           * Settings for animations in the plot area
           */
          getAnimation(): sap.viz.ui5.types.Treemap_animation;
          /**
           * Gets content of aggregation {@link #getBorder border}.
           *
           * Settings for the border
           */
          getBorder(): sap.viz.ui5.types.Treemap_border;
          /**
           * Gets current value of property {@link #getColorPalette colorPalette}.
           *
           * Set the color palette for the various sectors. For example, ["#748CB2", "#9CC677", "#EACF5E", "#F9AD79",
           * "#D16A7C"].
           */
          getColorPalette(): string[];
          /**
           * Gets current value of property {@link #getEndColor endColor}.
           *
           * Set the end color of the tree map
           *
           * Default value is `#73C03C`.
           */
          getEndColor(): string;
          /**
           * Gets current value of property {@link #getFormatRules formatRules}.
           *
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           */
          getFormatRules(): object[];
          /**
           * Gets current value of property {@link #getLegendValues legendValues}.
           *
           * Set the MBC legend values. For example, [10,11,12,13,14,15]. The values in the array should be in ascending
           * order. If the number of values in the array is smaller than the MBC legend segment number, the MBC legend
           * automatically calculates the values according to the data. If the number of values in the legendValues
           * array is larger than MBC legend segment number, then only the first "segment number + 1" values are used.
           */
          getLegendValues(): number[];
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Treemap.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getStartColor startColor}.
           *
           * Set the starting color of the tree map
           *
           * Default value is `#C2E3A9`.
           */
          getStartColor(): string;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getToolTip toolTip}.
           *
           * Settings for tooltip
           */
          getToolTip(): sap.viz.ui5.types.Treemap_tooltip;
          /**
           * Sets the aggregated {@link #getAnimation animation}.
           */
          setAnimation(
            /**
             * The animation to set
             */
            oAnimation: sap.viz.ui5.types.Treemap_animation
          ): sap.viz.ui5.types.Treemap;
          /**
           * Sets the aggregated {@link #getBorder border}.
           */
          setBorder(
            /**
             * The border to set
             */
            oBorder: sap.viz.ui5.types.Treemap_border
          ): sap.viz.ui5.types.Treemap;
          /**
           * Sets a new value for property {@link #getColorPalette colorPalette}.
           *
           * Set the color palette for the various sectors. For example, ["#748CB2", "#9CC677", "#EACF5E", "#F9AD79",
           * "#D16A7C"].
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setColorPalette(
            /**
             * New value for property `colorPalette`
             */
            sColorPalette: string[]
          ): sap.viz.ui5.types.Treemap;
          /**
           * Sets a new value for property {@link #getEndColor endColor}.
           *
           * Set the end color of the tree map
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#73C03C`.
           */
          setEndColor(
            /**
             * New value for property `endColor`
             */
            sEndColor: string
          ): sap.viz.ui5.types.Treemap;
          /**
           * Sets a new value for property {@link #getFormatRules formatRules}.
           *
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setFormatRules(
            /**
             * New value for property `formatRules`
             */
            sFormatRules: object[]
          ): sap.viz.ui5.types.Treemap;
          /**
           * Sets a new value for property {@link #getLegendValues legendValues}.
           *
           * Set the MBC legend values. For example, [10,11,12,13,14,15]. The values in the array should be in ascending
           * order. If the number of values in the array is smaller than the MBC legend segment number, the MBC legend
           * automatically calculates the values according to the data. If the number of values in the legendValues
           * array is larger than MBC legend segment number, then only the first "segment number + 1" values are used.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setLegendValues(
            /**
             * New value for property `legendValues`
             */
            sLegendValues: number[]
          ): sap.viz.ui5.types.Treemap;
          /**
           * Sets a new value for property {@link #getStartColor startColor}.
           *
           * Set the starting color of the tree map
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#C2E3A9`.
           */
          setStartColor(
            /**
             * New value for property `startColor`
             */
            sStartColor: string
          ): sap.viz.ui5.types.Treemap;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getToolTip toolTip}.
           */
          setToolTip(
            /**
             * The toolTip to set
             */
            oToolTip: sap.viz.ui5.types.Treemap_tooltip
          ): sap.viz.ui5.types.Treemap;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for animations in the plot area
         */
        class Treemap_animation extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Treemap_animation
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Treemap_animationOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Treemap_animation with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getDataLoading dataLoading}.
           *
           * Set whether the data loading animation is enabled
           *
           * Default value is `true`.
           */
          getDataLoading(): boolean;
          /**
           * Gets current value of property {@link #getDataUpdating dataUpdating}.
           *
           * Set whether the data updating animation is enabled
           *
           * Default value is `true`.
           */
          getDataUpdating(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Treemap_animation.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getResizing resizing}.
           *
           * Set whether the resizing animation is enabled
           *
           * Default value is `true`.
           */
          getResizing(): boolean;
          /**
           * Sets a new value for property {@link #getDataLoading dataLoading}.
           *
           * Set whether the data loading animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setDataLoading(
            /**
             * New value for property `dataLoading`
             */
            bDataLoading: boolean
          ): sap.viz.ui5.types.Treemap_animation;
          /**
           * Sets a new value for property {@link #getDataUpdating dataUpdating}.
           *
           * Set whether the data updating animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setDataUpdating(
            /**
             * New value for property `dataUpdating`
             */
            bDataUpdating: boolean
          ): sap.viz.ui5.types.Treemap_animation;
          /**
           * Sets a new value for property {@link #getResizing resizing}.
           *
           * Set whether the resizing animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setResizing(
            /**
             * New value for property `resizing`
             */
            bResizing: boolean
          ): sap.viz.ui5.types.Treemap_animation;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for the border
         */
        class Treemap_border extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Treemap_border
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Treemap_borderOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Treemap_border with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Treemap_border.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getVisible visible}.
           *
           * Set the visibility of the zone edge
           *
           * Default value is `true`.
           */
          getVisible(): boolean;
          /**
           * Sets a new value for property {@link #getVisible visible}.
           *
           * Set the visibility of the zone edge
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setVisible(
            /**
             * New value for property `visible`
             */
            bVisible: boolean
          ): sap.viz.ui5.types.Treemap_border;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Settings for tooltip
         */
        class Treemap_tooltip extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.Treemap_tooltip
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: Treemap_tooltipOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.Treemap_tooltip with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getEnabled enabled}.
           *
           * Set whether the tooltip is enabled
           *
           * Default value is `true`.
           */
          getEnabled(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.Treemap_tooltip.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Sets a new value for property {@link #getEnabled enabled}.
           *
           * Set whether the tooltip is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setEnabled(
            /**
             * New value for property `enabled`
             */
            bEnabled: boolean
          ): sap.viz.ui5.types.Treemap_tooltip;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Module sap.viz.ui5.types.VerticalBar
         */
        class VerticalBar extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.VerticalBar
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: VerticalBarOpts
          );

          /**
           * Destroys the animation in the aggregation {@link #getAnimation animation}.
           */
          destroyAnimation(): sap.viz.ui5.types.VerticalBar;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
           */
          destroyToolTip(): sap.viz.ui5.types.VerticalBar;
          /**
           * Creates a new subclass of class sap.viz.ui5.types.VerticalBar with name `sClassName` and enriches it
           * with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets content of aggregation {@link #getAnimation animation}.
           *
           * Settings for animations in the plot area
           */
          getAnimation(): sap.viz.ui5.types.VerticalBar_animation;
          /**
           * Gets current value of property {@link #getColorPalette colorPalette}.
           *
           * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension
           * bound to the legend.
           *
           * Default value is `#748CB2,#9CC677,#EACF5E,#F9AD79,#D16A7C,#8873A2,#3A95B3,#B6D949,#FDD36C,#F47958,#A65084,#0063B1,#0DA841,#FCB71D,#F05620,#B22D6E,#3C368E,#8FB2CF,#95D4AB,#EAE98F,#F9BE92,#EC9A99,#BC98BD,#1EB7B2,#73C03C,#F48323,#EB271B,#D9B5CA,#AED1DA,#DFECB2,#FCDAB0,#F5BCB4`.
           */
          getColorPalette(): string[];
          /**
           * Gets current value of property {@link #getDrawingEffect drawingEffect}.
           *
           * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy.
           * If this value is set to 'normal', the plot area is matte.
           *
           * Default value is `normal`.
           */
          getDrawingEffect(): sap.viz.ui5.types.VerticalBar_drawingEffect;
          /**
           * Gets current value of property {@link #getFormatRules formatRules}.
           *
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           */
          getFormatRules(): object[];
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getIsRoundCorner isRoundCorner}.
           *
           * Set whether bars have rounded corners
           *
           * Default value is `false`.
           */
          getIsRoundCorner(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.VerticalBar.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getOrientation orientation}.
           *
           * Set the orientation of the plot area.
           *
           * Default value is `vertical`.
           */
          getOrientation(): sap.viz.ui5.types.VerticalBar_orientation;
          /**
           * Gets current value of property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
           *
           * Set the color palette for axis 1 in dual charts.
           *
           * Default value is `#8FBADD,#B8D4E9,#7AAED6,#A3C7E3,#3D88C4,#66A1D0,#297CBE,#5295CA,#005BA3,#146FB7,#005395,#0063B1`.
           */
          getPrimaryValuesColorPalette(): string[];
          /**
           * Gets current value of property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
           *
           * Set the color palette for axis 2 in dual chart.
           *
           * Default value is `#F6A09B,#F9C3C0,#F58E88,#F8B1AD,#F05B52,#F37D76,#EE4A40,#F16C64,#D92419,#ED382D,#C52117,#EB271B`.
           */
          getSecondaryValuesColorPalette(): string[];
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets content of aggregation {@link #getToolTip toolTip}.
           *
           * Settings for tooltip related properties
           */
          getToolTip(): sap.viz.ui5.types.VerticalBar_tooltip;
          /**
           * Sets the aggregated {@link #getAnimation animation}.
           */
          setAnimation(
            /**
             * The animation to set
             */
            oAnimation: sap.viz.ui5.types.VerticalBar_animation
          ): sap.viz.ui5.types.VerticalBar;
          /**
           * Sets a new value for property {@link #getColorPalette colorPalette}.
           *
           * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension
           * bound to the legend.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#748CB2,#9CC677,#EACF5E,#F9AD79,#D16A7C,#8873A2,#3A95B3,#B6D949,#FDD36C,#F47958,#A65084,#0063B1,#0DA841,#FCB71D,#F05620,#B22D6E,#3C368E,#8FB2CF,#95D4AB,#EAE98F,#F9BE92,#EC9A99,#BC98BD,#1EB7B2,#73C03C,#F48323,#EB271B,#D9B5CA,#AED1DA,#DFECB2,#FCDAB0,#F5BCB4`.
           */
          setColorPalette(
            /**
             * New value for property `colorPalette`
             */
            sColorPalette: string[]
          ): sap.viz.ui5.types.VerticalBar;
          /**
           * Sets a new value for property {@link #getDrawingEffect drawingEffect}.
           *
           * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy.
           * If this value is set to 'normal', the plot area is matte.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `normal`.
           */
          setDrawingEffect(
            /**
             * New value for property `drawingEffect`
             */
            sDrawingEffect: sap.viz.ui5.types.VerticalBar_drawingEffect
          ): sap.viz.ui5.types.VerticalBar;
          /**
           * Sets a new value for property {@link #getFormatRules formatRules}.
           *
           * Sample value for formatRules: [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition:
           * [{Key3:Value3}], color:"#00ffff"}]. Each rule has two properties: the "condition" and the "color". Value1,
           * Value2 and Value3 are values.  The value of a dimension may be  1, Single value (string),
           * like "China" .  2. Array (enumeration), like ["UK","USA"] .  The value of a measure may be
           *  1, Single value (number), like 20 .  2. Arry (enumeration), like [121,122] .  3. Object
           * (range), like {min:100, max 200} . Min and max are inclusive. If users want to inlcude 200, but not 100
           * in the range, they may use {min:100.00001, max:200}. If users want values larger than 100, they may write
           * {min:100}.  The color is applied if one or more conditions in the condition array is met. If multiple
           * rules could apply on the same data point, it is the last rule that takes effect.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           */
          setFormatRules(
            /**
             * New value for property `formatRules`
             */
            sFormatRules: object[]
          ): sap.viz.ui5.types.VerticalBar;
          /**
           * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getIsRoundCorner isRoundCorner}.
           *
           * Set whether bars have rounded corners
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `false`.
           */
          setIsRoundCorner(
            /**
             * New value for property `isRoundCorner`
             */
            bIsRoundCorner: boolean
          ): sap.viz.ui5.types.VerticalBar;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getOrientation orientation}.
           *
           * Set the orientation of the plot area.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `vertical`.
           */
          setOrientation(
            /**
             * New value for property `orientation`
             */
            sOrientation: sap.viz.ui5.types.VerticalBar_orientation
          ): sap.viz.ui5.types.VerticalBar;
          /**
           * Sets a new value for property {@link #getPrimaryValuesColorPalette primaryValuesColorPalette}.
           *
           * Set the color palette for axis 1 in dual charts.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#8FBADD,#B8D4E9,#7AAED6,#A3C7E3,#3D88C4,#66A1D0,#297CBE,#5295CA,#005BA3,#146FB7,#005395,#0063B1`.
           */
          setPrimaryValuesColorPalette(
            /**
             * New value for property `primaryValuesColorPalette`
             */
            sPrimaryValuesColorPalette: string[]
          ): sap.viz.ui5.types.VerticalBar;
          /**
           * Sets a new value for property {@link #getSecondaryValuesColorPalette secondaryValuesColorPalette}.
           *
           * Set the color palette for axis 2 in dual chart.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `#F6A09B,#F9C3C0,#F58E88,#F8B1AD,#F05B52,#F37D76,#EE4A40,#F16C64,#D92419,#ED382D,#C52117,#EB271B`.
           */
          setSecondaryValuesColorPalette(
            /**
             * New value for property `secondaryValuesColorPalette`
             */
            sSecondaryValuesColorPalette: string[]
          ): sap.viz.ui5.types.VerticalBar;
          /**
           * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets the aggregated {@link #getToolTip toolTip}.
           */
          setToolTip(
            /**
             * The toolTip to set
             */
            oToolTip: sap.viz.ui5.types.VerticalBar_tooltip
          ): sap.viz.ui5.types.VerticalBar;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Settings for animations in the plot area
         */
        class VerticalBar_animation extends sap.viz.ui5.core
          .BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.VerticalBar_animation
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: VerticalBar_animationOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.VerticalBar_animation with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getDataLoading dataLoading}.
           *
           * Set whether the data loading animation is enabled
           *
           * Default value is `true`.
           */
          getDataLoading(): boolean;
          /**
           * Gets current value of property {@link #getDataUpdating dataUpdating}.
           *
           * Set whether the data updating animation is enabled
           *
           * Default value is `true`.
           */
          getDataUpdating(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.VerticalBar_animation.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Gets current value of property {@link #getResizing resizing}.
           *
           * Set whether the resizing animation is enabled
           *
           * Default value is `true`.
           */
          getResizing(): boolean;
          /**
           * Sets a new value for property {@link #getDataLoading dataLoading}.
           *
           * Set whether the data loading animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setDataLoading(
            /**
             * New value for property `dataLoading`
             */
            bDataLoading: boolean
          ): sap.viz.ui5.types.VerticalBar_animation;
          /**
           * Sets a new value for property {@link #getDataUpdating dataUpdating}.
           *
           * Set whether the data updating animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setDataUpdating(
            /**
             * New value for property `dataUpdating`
             */
            bDataUpdating: boolean
          ): sap.viz.ui5.types.VerticalBar_animation;
          /**
           * Sets a new value for property {@link #getResizing resizing}.
           *
           * Set whether the resizing animation is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setResizing(
            /**
             * New value for property `resizing`
             */
            bResizing: boolean
          ): sap.viz.ui5.types.VerticalBar_animation;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.12) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Settings for tooltip related properties
         */
        class VerticalBar_tooltip extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.VerticalBar_tooltip
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: VerticalBar_tooltipOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.VerticalBar_tooltip with name `sClassName` and enriches
           * it with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Gets current value of property {@link #getEnabled enabled}.
           *
           * Set whether the tooltip is enabled
           *
           * Default value is `true`.
           */
          getEnabled(): boolean;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.VerticalBar_tooltip.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * Sets a new value for property {@link #getEnabled enabled}.
           *
           * Set whether the tooltip is enabled
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `true`.
           */
          setEnabled(
            /**
             * New value for property `enabled`
             */
            bEnabled: boolean
          ): sap.viz.ui5.types.VerticalBar_tooltip;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * Module sap.viz.ui5.types.XYContainer
         */
        class XYContainer extends sap.viz.ui5.core.BaseStructuredType {
          /**
           * Constructor for a new sap.viz.ui5.types.XYContainer
           *
           * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
           * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
           * of the syntax of the settings object.
           */
          constructor(
            /**
             * id for the new control, generated automatically if no id is given
             */
            sId?: string,
            /**
             * initial settings for the new control
             */
            mSettings?: XYContainerOpts
          );

          /**
           * Creates a new subclass of class sap.viz.ui5.types.XYContainer with name `sClassName` and enriches it
           * with the information contained in `oClassInfo`.
           *
           * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseStructuredType.extend}.
           */
          // @ts-ignore
          static extend(
            /**
             * Name of the class being created
             */
            sClassName: string,
            /**
             * Object literal with information about the class
             */
            oClassInfo?: object,
            /**
             * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
             */
            FNMetaImpl?: Function
          ): Function;
          /**
           * Returns a metadata object for class sap.viz.ui5.types.XYContainer.
           */
          // @ts-ignore
          static getMetadata(): sap.ui.base.Metadata;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Gets current value of property {@link #getYAngle yAngle}.
           *
           * Set the angle for the pie chart. This value should be between '-180' and '180'.
           *
           * Default value is `0`.
           */
          getYAngle(): number;
          /**
           * @deprecated (since 1.20) - This Property has been deprecated. This interface will be removed from the
           * SAPUI5 delivery in one of the next releases.
           *
           * Sets a new value for property {@link #getYAngle yAngle}.
           *
           * Set the angle for the pie chart. This value should be between '-180' and '180'.
           *
           * When called with a value of `null` or `undefined`, the default value of the property will be restored.
           *
           * Default value is `0`.
           */
          setYAngle(
            /**
             * New value for property `yAngle`
             */
            fYAngle: number
          ): sap.viz.ui5.types.XYContainer;
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Area_drawingEffect
         */
        enum Area_drawingEffect {
          /**
           * Value glossy
           */
          glossy,
          /**
           * Value normal
           */
          normal
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Area_marker_shape
         */
        enum Area_marker_shape {
          /**
           * Value circle
           */
          circle,
          /**
           * Value cross
           */
          cross,
          /**
           * Value diamond
           */
          diamond,
          /**
           * Value intersection
           */
          intersection,
          /**
           * Value triangleDown
           */
          triangleDown,
          /**
           * Value triangleLeft
           */
          triangleLeft,
          /**
           * Value triangleRight
           */
          triangleRight,
          /**
           * Value triangleUp
           */
          triangleUp
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Area_mode
         */
        enum Area_mode {
          /**
           * Value comparison
           */
          comparison,
          /**
           * Value percentage
           */
          percentage
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Area_orientation
         */
        enum Area_orientation {
          /**
           * Value horizontal
           */
          horizontal,
          /**
           * Value vertical
           */
          vertical
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Axis_gridline_type
         */
        enum Axis_gridline_type {
          /**
           * Value dotted
           */
          dotted,
          /**
           * Value incised
           */
          incised,
          /**
           * Value line
           */
          line
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Axis_label_unitFormatType
         */
        enum Axis_label_unitFormatType {
          /**
           * Value FinancialUnits
           */
          FinancialUnits,
          /**
           * Value MetricUnits
           */
          MetricUnits
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Axis_position
         */
        enum Axis_position {
          /**
           * Value bottom
           */
          bottom,
          /**
           * Value left
           */
          left,
          /**
           * Value right
           */
          right,
          /**
           * Value top
           */
          top
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Axis_type
         */
        enum Axis_type {
          /**
           * Value category
           */
          category,
          /**
           * Value timeValue
           */
          timeValue,
          /**
           * Value value
           */
          value
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Background_direction
         */
        enum Background_direction {
          /**
           * Value horizontal
           */
          horizontal,
          /**
           * Value vertical
           */
          vertical
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Background_drawingEffect
         */
        enum Background_drawingEffect {
          /**
           * Value glossy
           */
          glossy,
          /**
           * Value normal
           */
          normal
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Bar_drawingEffect
         */
        enum Bar_drawingEffect {
          /**
           * Value glossy
           */
          glossy,
          /**
           * Value normal
           */
          normal
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Bar_orientation
         */
        enum Bar_orientation {
          /**
           * Value horizontal
           */
          horizontal,
          /**
           * Value vertical
           */
          vertical
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Bubble_drawingEffect
         */
        enum Bubble_drawingEffect {
          /**
           * Value glossy
           */
          glossy,
          /**
           * Value normal
           */
          normal
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Bullet_drawingEffect
         */
        enum Bullet_drawingEffect {
          /**
           * Value glossy
           */
          glossy,
          /**
           * Value normal
           */
          normal
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Bullet_orientation
         */
        enum Bullet_orientation {
          /**
           * Value horizontal
           */
          horizontal,
          /**
           * Value vertical
           */
          vertical
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Combination_drawingEffect
         */
        enum Combination_drawingEffect {
          /**
           * Value glossy
           */
          glossy,
          /**
           * Value normal
           */
          normal
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Combination_orientation
         */
        enum Combination_orientation {
          /**
           * Value horizontal
           */
          horizontal,
          /**
           * Value vertical
           */
          vertical
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Datalabel_orientation
         */
        enum Datalabel_orientation {
          /**
           * Value horizontal
           */
          horizontal,
          /**
           * Value vertical
           */
          vertical
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Datalabel_outsidePosition
         */
        enum Datalabel_outsidePosition {
          /**
           * Value down
           */
          down,
          /**
           * Value left
           */
          left,
          /**
           * Value right
           */
          right,
          /**
           * Value up
           */
          up
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Datalabel_paintingMode
         */
        enum Datalabel_paintingMode {
          /**
           * Value polarCoordinate
           */
          polarCoordinate,
          /**
           * Value rectCoordinate
           */
          rectCoordinate
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Datalabel_position
         */
        enum Datalabel_position {
          /**
           * Value inside
           */
          inside,
          /**
           * Value outside
           */
          outside
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Legend_layout_position
         */
        enum Legend_layout_position {
          /**
           * Value bottom
           */
          bottom,
          /**
           * Value left
           */
          left,
          /**
           * Value right
           */
          right,
          /**
           * Value top
           */
          top
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Line_drawingEffect
         */
        enum Line_drawingEffect {
          /**
           * Value glossy
           */
          glossy,
          /**
           * Value normal
           */
          normal
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Line_marker_shape
         */
        enum Line_marker_shape {
          /**
           * Value circle
           */
          circle,
          /**
           * Value cross
           */
          cross,
          /**
           * Value diamond
           */
          diamond,
          /**
           * Value intersection
           */
          intersection,
          /**
           * Value triangleDown
           */
          triangleDown,
          /**
           * Value triangleLeft
           */
          triangleLeft,
          /**
           * Value triangleRight
           */
          triangleRight,
          /**
           * Value triangleUp
           */
          triangleUp
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Line_orientation
         */
        enum Line_orientation {
          /**
           * Value horizontal
           */
          horizontal,
          /**
           * Value vertical
           */
          vertical
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Pie_drawingEffect
         */
        enum Pie_drawingEffect {
          /**
           * Value glossy
           */
          glossy,
          /**
           * Value normal
           */
          normal
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Pie_valign
         */
        enum Pie_valign {
          /**
           * Value center
           */
          center,
          /**
           * Value top
           */
          top
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Scatter_drawingEffect
         */
        enum Scatter_drawingEffect {
          /**
           * Value glossy
           */
          glossy,
          /**
           * Value normal
           */
          normal
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.StackedVerticalBar_drawingEffect
         */
        enum StackedVerticalBar_drawingEffect {
          /**
           * Value glossy
           */
          glossy,
          /**
           * Value normal
           */
          normal
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.StackedVerticalBar_mode
         */
        enum StackedVerticalBar_mode {
          /**
           * Value comparison
           */
          comparison,
          /**
           * Value percentage
           */
          percentage
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.StackedVerticalBar_orientation
         */
        enum StackedVerticalBar_orientation {
          /**
           * Value horizontal
           */
          horizontal,
          /**
           * Value vertical
           */
          vertical
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Title_alignment
         */
        enum Title_alignment {
          /**
           * Value center
           */
          center,
          /**
           * Value left
           */
          left,
          /**
           * Value right
           */
          right
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.Tooltip_drawingEffect
         */
        enum Tooltip_drawingEffect {
          /**
           * Value glossy
           */
          glossy,
          /**
           * Value normal
           */
          normal
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.VerticalBar_drawingEffect
         */
        enum VerticalBar_drawingEffect {
          /**
           * Value glossy
           */
          glossy,
          /**
           * Value normal
           */
          normal
        }
        /**
         * @SINCE 1.7.2
         * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
         * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
         * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
         * distribution for backward compatibility.
         *
         * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
         * VizFrame} control to benefit from new charting enhancements and timely support. **
         *
         * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
         * make sure you evaluate it thoroughly before migration.
         * @EXPERIMENTAL (since 1.7.2)
         *
         * List (Enum) type sap.viz.ui5.types.VerticalBar_orientation
         */
        enum VerticalBar_orientation {
          /**
           * Value horizontal
           */
          horizontal,
          /**
           * Value vertical
           */
          vertical
        }
      }

      interface AreaOpts extends sap.viz.ui5.core.BaseChartOpts {
        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        showTooltip?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Module sap.viz.modules.rootContainer
         */
        general?: sap.viz.ui5.types.RootContainer;

        /**
         * Module sap.viz.modules.controller.interaction
         */
        interaction?: sap.viz.ui5.types.controller.Interaction;

        /**
         * Module sap.viz.modules.title
         */
        title?: sap.viz.ui5.types.Title;

        /**
         * Module sap.viz.modules.legend
         */
        legendGroup?: sap.viz.ui5.types.Legend;

        /**
         * Module sap.viz.modules.legend.common
         */
        legend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.chart.elements.Tooltip
         */
        toolTip?: sap.viz.ui5.types.Tooltip;

        /**
         * Module sap.viz.modules.xycontainer
         */
        xyContainer?: sap.viz.ui5.types.XYContainer;

        /**
         * Module sap.viz.modules.datalabel
         */
        dataLabel?: sap.viz.ui5.types.Datalabel;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.axis
         */
        xAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.background
         */
        background?: sap.viz.ui5.types.Background;

        /**
         * Module sap.viz.modules.area
         */
        plotArea?: sap.viz.ui5.types.Area;
      }

      interface Area100Opts extends sap.viz.ui5.core.BaseChartOpts {
        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        showTooltip?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Module sap.viz.modules.rootContainer
         */
        general?: sap.viz.ui5.types.RootContainer;

        /**
         * Module sap.viz.modules.controller.interaction
         */
        interaction?: sap.viz.ui5.types.controller.Interaction;

        /**
         * Module sap.viz.modules.title
         */
        title?: sap.viz.ui5.types.Title;

        /**
         * Module sap.viz.modules.legend
         */
        legendGroup?: sap.viz.ui5.types.Legend;

        /**
         * Module sap.viz.modules.legend.common
         */
        legend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.chart.elements.Tooltip
         */
        toolTip?: sap.viz.ui5.types.Tooltip;

        /**
         * Module sap.viz.modules.xycontainer
         */
        xyContainer?: sap.viz.ui5.types.XYContainer;

        /**
         * Module sap.viz.modules.datalabel
         */
        dataLabel?: sap.viz.ui5.types.Datalabel;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.axis
         */
        xAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.background
         */
        background?: sap.viz.ui5.types.Background;

        /**
         * Module sap.viz.modules.area
         */
        plotArea?: sap.viz.ui5.types.Area;
      }

      interface BarOpts extends sap.viz.ui5.core.BaseChartOpts {
        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        showTooltip?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Module sap.viz.modules.rootContainer
         */
        general?: sap.viz.ui5.types.RootContainer;

        /**
         * Module sap.viz.modules.controller.interaction
         */
        interaction?: sap.viz.ui5.types.controller.Interaction;

        /**
         * Module sap.viz.modules.title
         */
        title?: sap.viz.ui5.types.Title;

        /**
         * Module sap.viz.modules.legend
         */
        legendGroup?: sap.viz.ui5.types.Legend;

        /**
         * Module sap.viz.modules.legend.common
         */
        legend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.chart.elements.Tooltip
         */
        toolTip?: sap.viz.ui5.types.Tooltip;

        /**
         * Module sap.viz.modules.xycontainer
         */
        xyContainer?: sap.viz.ui5.types.XYContainer;

        /**
         * Module sap.viz.modules.datalabel
         */
        dataLabel?: sap.viz.ui5.types.Datalabel;

        /**
         * Module sap.viz.modules.axis
         */
        xAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.background
         */
        background?: sap.viz.ui5.types.Background;

        /**
         * Module sap.viz.modules.bar
         */
        plotArea?: sap.viz.ui5.types.Bar;
      }

      interface BubbleOpts extends sap.viz.ui5.core.BaseChartOpts {
        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        showTooltip?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Module sap.viz.modules.rootContainer
         */
        general?: sap.viz.ui5.types.RootContainer;

        /**
         * Module sap.viz.modules.title
         */
        title?: sap.viz.ui5.types.Title;

        /**
         * Module sap.viz.modules.legend
         */
        legendGroup?: sap.viz.ui5.types.Legend;

        /**
         * Module sap.viz.modules.legend.common
         */
        legend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.modules.legend.common
         */
        sizeLegend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.modules.xycontainer
         */
        xyContainer?: sap.viz.ui5.types.XYContainer;

        /**
         * Module sap.viz.modules.datalabel
         */
        dataLabel?: sap.viz.ui5.types.Datalabel;

        /**
         * Module sap.viz.modules.axis
         */
        xAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.background
         */
        background?: sap.viz.ui5.types.Background;

        /**
         * Module sap.viz.modules.bubble
         */
        plotArea?: sap.viz.ui5.types.Bubble;

        /**
         * Module sap.viz.chart.elements.Tooltip
         */
        toolTip?: sap.viz.ui5.types.Tooltip;

        /**
         * Module sap.viz.modules.controller.interaction
         */
        interaction?: sap.viz.ui5.types.controller.Interaction;
      }

      interface BulletOpts extends sap.viz.ui5.core.BaseChartOpts {
        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        showTooltip?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Module sap.viz.modules.rootContainer
         */
        general?: sap.viz.ui5.types.RootContainer;

        /**
         * Module sap.viz.modules.controller.interaction
         */
        interaction?: sap.viz.ui5.types.controller.Interaction;

        /**
         * Module sap.viz.modules.title
         */
        title?: sap.viz.ui5.types.Title;

        /**
         * Module sap.viz.chart.elements.Tooltip
         */
        toolTip?: sap.viz.ui5.types.Tooltip;

        /**
         * Module sap.viz.modules.xycontainer
         */
        xyContainer?: sap.viz.ui5.types.XYContainer;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.background
         */
        background?: sap.viz.ui5.types.Background;

        /**
         * Module sap.viz.modules.bullet
         */
        plotArea?: sap.viz.ui5.types.Bullet;

        /**
         * Module sap.viz.modules.axis
         */
        xAxis2?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis2?: sap.viz.ui5.types.Axis;
      }

      interface ColumnOpts extends sap.viz.ui5.core.BaseChartOpts {
        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        showTooltip?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Module sap.viz.modules.rootContainer
         */
        general?: sap.viz.ui5.types.RootContainer;

        /**
         * Module sap.viz.modules.controller.interaction
         */
        interaction?: sap.viz.ui5.types.controller.Interaction;

        /**
         * Module sap.viz.modules.title
         */
        title?: sap.viz.ui5.types.Title;

        /**
         * Module sap.viz.modules.legend
         */
        legendGroup?: sap.viz.ui5.types.Legend;

        /**
         * Module sap.viz.modules.legend.common
         */
        legend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.chart.elements.Tooltip
         */
        toolTip?: sap.viz.ui5.types.Tooltip;

        /**
         * Module sap.viz.modules.xycontainer
         */
        xyContainer?: sap.viz.ui5.types.XYContainer;

        /**
         * Module sap.viz.modules.datalabel
         */
        dataLabel?: sap.viz.ui5.types.Datalabel;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.axis
         */
        xAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.background
         */
        background?: sap.viz.ui5.types.Background;

        /**
         * Module sap.viz.modules.verticalbar
         */
        plotArea?: sap.viz.ui5.types.VerticalBar;
      }

      interface CombinationOpts extends sap.viz.ui5.core.BaseChartOpts {
        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        showTooltip?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Module sap.viz.modules.rootContainer
         */
        general?: sap.viz.ui5.types.RootContainer;

        /**
         * Module sap.viz.modules.controller.interaction
         */
        interaction?: sap.viz.ui5.types.controller.Interaction;

        /**
         * Module sap.viz.modules.title
         */
        title?: sap.viz.ui5.types.Title;

        /**
         * Module sap.viz.modules.legend
         */
        legendGroup?: sap.viz.ui5.types.Legend;

        /**
         * Module sap.viz.modules.legend.common
         */
        legend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.chart.elements.Tooltip
         */
        toolTip?: sap.viz.ui5.types.Tooltip;

        /**
         * Module sap.viz.modules.xycontainer
         */
        xyContainer?: sap.viz.ui5.types.XYContainer;

        /**
         * Module sap.viz.modules.datalabel
         */
        dataLabel?: sap.viz.ui5.types.Datalabel;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.axis
         */
        xAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.background
         */
        background?: sap.viz.ui5.types.Background;

        /**
         * Module sap.viz.modules.combination
         */
        plotArea?: sap.viz.ui5.types.Combination;
      }

      interface DonutOpts extends sap.viz.ui5.core.BaseChartOpts {
        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        showTooltip?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Module sap.viz.modules.rootContainer
         */
        general?: sap.viz.ui5.types.RootContainer;

        /**
         * Module sap.viz.modules.title
         */
        title?: sap.viz.ui5.types.Title;

        /**
         * Module sap.viz.modules.legend
         */
        legendGroup?: sap.viz.ui5.types.Legend;

        /**
         * Module sap.viz.modules.legend.common
         */
        legend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.modules.xycontainer
         */
        xyContainer?: sap.viz.ui5.types.XYContainer;

        /**
         * Module sap.viz.modules.pie
         */
        plotArea?: sap.viz.ui5.types.Pie;

        /**
         * Module sap.viz.modules.datalabel
         */
        dataLabel?: sap.viz.ui5.types.Datalabel;

        /**
         * Module sap.viz.modules.controller.interaction
         */
        interaction?: sap.viz.ui5.types.controller.Interaction;

        /**
         * Module sap.viz.chart.elements.Tooltip
         */
        toolTip?: sap.viz.ui5.types.Tooltip;

        /**
         * Module sap.viz.modules.datatransform
         */
        dataTransform?: sap.viz.ui5.types.Datatransform;
      }

      interface DualBarOpts extends sap.viz.ui5.core.BaseChartOpts {
        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        showTooltip?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Module sap.viz.modules.rootContainer
         */
        general?: sap.viz.ui5.types.RootContainer;

        /**
         * Module sap.viz.modules.controller.interaction
         */
        interaction?: sap.viz.ui5.types.controller.Interaction;

        /**
         * Module sap.viz.modules.title
         */
        title?: sap.viz.ui5.types.Title;

        /**
         * Module sap.viz.modules.legend
         */
        legendGroup?: sap.viz.ui5.types.Legend;

        /**
         * Module sap.viz.modules.legend.common
         */
        legend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.chart.elements.Tooltip
         */
        toolTip?: sap.viz.ui5.types.Tooltip;

        /**
         * Module sap.viz.modules.xycontainer
         */
        xyContainer?: sap.viz.ui5.types.XYContainer;

        /**
         * Module sap.viz.modules.datalabel
         */
        dataLabel?: sap.viz.ui5.types.Datalabel;

        /**
         * Module sap.viz.modules.axis
         */
        xAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.background
         */
        background?: sap.viz.ui5.types.Background;

        /**
         * Module sap.viz.modules.bar
         */
        plotArea?: sap.viz.ui5.types.Bar;

        /**
         * Module sap.viz.modules.axis
         */
        xAxis2?: sap.viz.ui5.types.Axis;
      }

      interface DualColumnOpts extends sap.viz.ui5.core.BaseChartOpts {
        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        showTooltip?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Module sap.viz.modules.rootContainer
         */
        general?: sap.viz.ui5.types.RootContainer;

        /**
         * Module sap.viz.modules.controller.interaction
         */
        interaction?: sap.viz.ui5.types.controller.Interaction;

        /**
         * Module sap.viz.modules.title
         */
        title?: sap.viz.ui5.types.Title;

        /**
         * Module sap.viz.modules.legend
         */
        legendGroup?: sap.viz.ui5.types.Legend;

        /**
         * Module sap.viz.modules.legend.common
         */
        legend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.chart.elements.Tooltip
         */
        toolTip?: sap.viz.ui5.types.Tooltip;

        /**
         * Module sap.viz.modules.xycontainer
         */
        xyContainer?: sap.viz.ui5.types.XYContainer;

        /**
         * Module sap.viz.modules.datalabel
         */
        dataLabel?: sap.viz.ui5.types.Datalabel;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.axis
         */
        xAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.background
         */
        background?: sap.viz.ui5.types.Background;

        /**
         * Module sap.viz.modules.verticalbar
         */
        plotArea?: sap.viz.ui5.types.VerticalBar;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis2?: sap.viz.ui5.types.Axis;
      }

      interface DualCombinationOpts extends sap.viz.ui5.core.BaseChartOpts {
        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        showTooltip?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Module sap.viz.modules.rootContainer
         */
        general?: sap.viz.ui5.types.RootContainer;

        /**
         * Module sap.viz.modules.controller.interaction
         */
        interaction?: sap.viz.ui5.types.controller.Interaction;

        /**
         * Module sap.viz.modules.title
         */
        title?: sap.viz.ui5.types.Title;

        /**
         * Module sap.viz.modules.legend
         */
        legendGroup?: sap.viz.ui5.types.Legend;

        /**
         * Module sap.viz.modules.legend.common
         */
        legend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.chart.elements.Tooltip
         */
        toolTip?: sap.viz.ui5.types.Tooltip;

        /**
         * Module sap.viz.modules.xycontainer
         */
        xyContainer?: sap.viz.ui5.types.XYContainer;

        /**
         * Module sap.viz.modules.datalabel
         */
        dataLabel?: sap.viz.ui5.types.Datalabel;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.axis
         */
        xAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.background
         */
        background?: sap.viz.ui5.types.Background;

        /**
         * Module sap.viz.modules.combination
         */
        plotArea?: sap.viz.ui5.types.Combination;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis2?: sap.viz.ui5.types.Axis;
      }

      interface DualLineOpts extends sap.viz.ui5.core.BaseChartOpts {
        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        showTooltip?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Module sap.viz.modules.rootContainer
         */
        general?: sap.viz.ui5.types.RootContainer;

        /**
         * Module sap.viz.modules.controller.interaction
         */
        interaction?: sap.viz.ui5.types.controller.Interaction;

        /**
         * Module sap.viz.modules.title
         */
        title?: sap.viz.ui5.types.Title;

        /**
         * Module sap.viz.modules.legend
         */
        legendGroup?: sap.viz.ui5.types.Legend;

        /**
         * Module sap.viz.modules.legend.common
         */
        legend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.chart.elements.Tooltip
         */
        toolTip?: sap.viz.ui5.types.Tooltip;

        /**
         * Module sap.viz.modules.xycontainer
         */
        xyContainer?: sap.viz.ui5.types.XYContainer;

        /**
         * Module sap.viz.modules.datalabel
         */
        dataLabel?: sap.viz.ui5.types.Datalabel;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.axis
         */
        xAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.background
         */
        background?: sap.viz.ui5.types.Background;

        /**
         * Module sap.viz.modules.line
         */
        plotArea?: sap.viz.ui5.types.Line;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis2?: sap.viz.ui5.types.Axis;
      }

      interface DualStackedColumnOpts extends sap.viz.ui5.core.BaseChartOpts {
        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        showTooltip?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Module sap.viz.modules.rootContainer
         */
        general?: sap.viz.ui5.types.RootContainer;

        /**
         * Module sap.viz.modules.controller.interaction
         */
        interaction?: sap.viz.ui5.types.controller.Interaction;

        /**
         * Module sap.viz.modules.title
         */
        title?: sap.viz.ui5.types.Title;

        /**
         * Module sap.viz.modules.legend
         */
        legendGroup?: sap.viz.ui5.types.Legend;

        /**
         * Module sap.viz.modules.legend.common
         */
        legend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.chart.elements.Tooltip
         */
        toolTip?: sap.viz.ui5.types.Tooltip;

        /**
         * Module sap.viz.modules.xycontainer
         */
        xyContainer?: sap.viz.ui5.types.XYContainer;

        /**
         * Module sap.viz.modules.datalabel
         */
        dataLabel?: sap.viz.ui5.types.Datalabel;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.axis
         */
        xAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.background
         */
        background?: sap.viz.ui5.types.Background;

        /**
         * Module sap.viz.modules.stackedverticalbar
         */
        plotArea?: sap.viz.ui5.types.StackedVerticalBar;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis2?: sap.viz.ui5.types.Axis;
      }

      interface DualStackedColumn100Opts
        extends sap.viz.ui5.core.BaseChartOpts {
        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        showTooltip?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Module sap.viz.modules.rootContainer
         */
        general?: sap.viz.ui5.types.RootContainer;

        /**
         * Module sap.viz.modules.controller.interaction
         */
        interaction?: sap.viz.ui5.types.controller.Interaction;

        /**
         * Module sap.viz.modules.title
         */
        title?: sap.viz.ui5.types.Title;

        /**
         * Module sap.viz.modules.legend
         */
        legendGroup?: sap.viz.ui5.types.Legend;

        /**
         * Module sap.viz.modules.legend.common
         */
        legend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.chart.elements.Tooltip
         */
        toolTip?: sap.viz.ui5.types.Tooltip;

        /**
         * Module sap.viz.modules.xycontainer
         */
        xyContainer?: sap.viz.ui5.types.XYContainer;

        /**
         * Module sap.viz.modules.datalabel
         */
        dataLabel?: sap.viz.ui5.types.Datalabel;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.axis
         */
        xAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.background
         */
        background?: sap.viz.ui5.types.Background;

        /**
         * Module sap.viz.modules.stackedverticalbar
         */
        plotArea?: sap.viz.ui5.types.StackedVerticalBar;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis2?: sap.viz.ui5.types.Axis;
      }

      interface HeatmapOpts extends sap.viz.ui5.core.BaseChartOpts {
        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        showTooltip?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Module sap.viz.modules.rootContainer
         */
        general?: sap.viz.ui5.types.RootContainer;

        /**
         * Module sap.viz.modules.title
         */
        title?: sap.viz.ui5.types.Title;

        /**
         * Module sap.viz.modules.legend
         */
        legendGroup?: sap.viz.ui5.types.Legend;

        /**
         * Module sap.viz.modules.legend.common
         */
        legend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.modules.xycontainer
         */
        xyContainer?: sap.viz.ui5.types.XYContainer;

        /**
         * Module sap.viz.modules.datalabel
         */
        dataLabel?: sap.viz.ui5.types.Datalabel;

        /**
         * Module sap.viz.modules.axis
         */
        xAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.heatmap
         */
        plotArea?: sap.viz.ui5.types.Heatmap;

        /**
         * Module sap.viz.chart.elements.Tooltip
         */
        toolTip?: sap.viz.ui5.types.Tooltip;

        /**
         * Module sap.viz.modules.controller.interaction
         */
        interaction?: sap.viz.ui5.types.controller.Interaction;
      }

      interface HorizontalAreaOpts extends sap.viz.ui5.core.BaseChartOpts {
        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        showTooltip?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Module sap.viz.modules.rootContainer
         */
        general?: sap.viz.ui5.types.RootContainer;

        /**
         * Module sap.viz.modules.controller.interaction
         */
        interaction?: sap.viz.ui5.types.controller.Interaction;

        /**
         * Module sap.viz.modules.title
         */
        title?: sap.viz.ui5.types.Title;

        /**
         * Module sap.viz.modules.legend
         */
        legendGroup?: sap.viz.ui5.types.Legend;

        /**
         * Module sap.viz.modules.legend.common
         */
        legend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.chart.elements.Tooltip
         */
        toolTip?: sap.viz.ui5.types.Tooltip;

        /**
         * Module sap.viz.modules.xycontainer
         */
        xyContainer?: sap.viz.ui5.types.XYContainer;

        /**
         * Module sap.viz.modules.datalabel
         */
        dataLabel?: sap.viz.ui5.types.Datalabel;

        /**
         * Module sap.viz.modules.axis
         */
        xAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.background
         */
        background?: sap.viz.ui5.types.Background;

        /**
         * Module sap.viz.modules.area
         */
        plotArea?: sap.viz.ui5.types.Area;
      }

      interface HorizontalArea100Opts extends sap.viz.ui5.core.BaseChartOpts {
        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        showTooltip?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Module sap.viz.modules.rootContainer
         */
        general?: sap.viz.ui5.types.RootContainer;

        /**
         * Module sap.viz.modules.controller.interaction
         */
        interaction?: sap.viz.ui5.types.controller.Interaction;

        /**
         * Module sap.viz.modules.title
         */
        title?: sap.viz.ui5.types.Title;

        /**
         * Module sap.viz.modules.legend
         */
        legendGroup?: sap.viz.ui5.types.Legend;

        /**
         * Module sap.viz.modules.legend.common
         */
        legend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.chart.elements.Tooltip
         */
        toolTip?: sap.viz.ui5.types.Tooltip;

        /**
         * Module sap.viz.modules.xycontainer
         */
        xyContainer?: sap.viz.ui5.types.XYContainer;

        /**
         * Module sap.viz.modules.datalabel
         */
        dataLabel?: sap.viz.ui5.types.Datalabel;

        /**
         * Module sap.viz.modules.axis
         */
        xAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.background
         */
        background?: sap.viz.ui5.types.Background;

        /**
         * Module sap.viz.modules.area
         */
        plotArea?: sap.viz.ui5.types.Area;
      }

      interface LineOpts extends sap.viz.ui5.core.BaseChartOpts {
        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        showTooltip?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Module sap.viz.modules.rootContainer
         */
        general?: sap.viz.ui5.types.RootContainer;

        /**
         * Module sap.viz.modules.controller.interaction
         */
        interaction?: sap.viz.ui5.types.controller.Interaction;

        /**
         * Module sap.viz.modules.title
         */
        title?: sap.viz.ui5.types.Title;

        /**
         * Module sap.viz.modules.legend
         */
        legendGroup?: sap.viz.ui5.types.Legend;

        /**
         * Module sap.viz.modules.legend.common
         */
        legend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.chart.elements.Tooltip
         */
        toolTip?: sap.viz.ui5.types.Tooltip;

        /**
         * Module sap.viz.modules.xycontainer
         */
        xyContainer?: sap.viz.ui5.types.XYContainer;

        /**
         * Module sap.viz.modules.datalabel
         */
        dataLabel?: sap.viz.ui5.types.Datalabel;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.axis
         */
        xAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.background
         */
        background?: sap.viz.ui5.types.Background;

        /**
         * Module sap.viz.modules.line
         */
        plotArea?: sap.viz.ui5.types.Line;
      }

      interface PieOpts extends sap.viz.ui5.core.BaseChartOpts {
        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        showTooltip?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Module sap.viz.modules.rootContainer
         */
        general?: sap.viz.ui5.types.RootContainer;

        /**
         * Module sap.viz.modules.title
         */
        title?: sap.viz.ui5.types.Title;

        /**
         * Module sap.viz.modules.legend
         */
        legendGroup?: sap.viz.ui5.types.Legend;

        /**
         * Module sap.viz.modules.legend.common
         */
        legend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.modules.xycontainer
         */
        xyContainer?: sap.viz.ui5.types.XYContainer;

        /**
         * Module sap.viz.modules.pie
         */
        plotArea?: sap.viz.ui5.types.Pie;

        /**
         * Module sap.viz.modules.datalabel
         */
        dataLabel?: sap.viz.ui5.types.Datalabel;

        /**
         * Module sap.viz.modules.controller.interaction
         */
        interaction?: sap.viz.ui5.types.controller.Interaction;

        /**
         * Module sap.viz.chart.elements.Tooltip
         */
        toolTip?: sap.viz.ui5.types.Tooltip;

        /**
         * Module sap.viz.modules.datatransform
         */
        dataTransform?: sap.viz.ui5.types.Datatransform;
      }

      interface ScatterOpts extends sap.viz.ui5.core.BaseChartOpts {
        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        showTooltip?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Module sap.viz.modules.rootContainer
         */
        general?: sap.viz.ui5.types.RootContainer;

        /**
         * Module sap.viz.modules.title
         */
        title?: sap.viz.ui5.types.Title;

        /**
         * Module sap.viz.modules.legend
         */
        legendGroup?: sap.viz.ui5.types.Legend;

        /**
         * Module sap.viz.modules.legend.common
         */
        legend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.modules.xycontainer
         */
        xyContainer?: sap.viz.ui5.types.XYContainer;

        /**
         * Module sap.viz.modules.datalabel
         */
        dataLabel?: sap.viz.ui5.types.Datalabel;

        /**
         * Module sap.viz.modules.axis
         */
        xAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.background
         */
        background?: sap.viz.ui5.types.Background;

        /**
         * Module sap.viz.modules.scatter
         */
        plotArea?: sap.viz.ui5.types.Scatter;

        /**
         * Module sap.viz.chart.elements.Tooltip
         */
        toolTip?: sap.viz.ui5.types.Tooltip;

        /**
         * Module sap.viz.modules.controller.interaction
         */
        interaction?: sap.viz.ui5.types.controller.Interaction;

        /**
         * Module sap.viz.modules.datatransform
         */
        dataTransform?: sap.viz.ui5.types.Datatransform;
      }

      interface StackedColumnOpts extends sap.viz.ui5.core.BaseChartOpts {
        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        showTooltip?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Module sap.viz.modules.rootContainer
         */
        general?: sap.viz.ui5.types.RootContainer;

        /**
         * Module sap.viz.modules.controller.interaction
         */
        interaction?: sap.viz.ui5.types.controller.Interaction;

        /**
         * Module sap.viz.modules.title
         */
        title?: sap.viz.ui5.types.Title;

        /**
         * Module sap.viz.modules.legend
         */
        legendGroup?: sap.viz.ui5.types.Legend;

        /**
         * Module sap.viz.modules.legend.common
         */
        legend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.chart.elements.Tooltip
         */
        toolTip?: sap.viz.ui5.types.Tooltip;

        /**
         * Module sap.viz.modules.xycontainer
         */
        xyContainer?: sap.viz.ui5.types.XYContainer;

        /**
         * Module sap.viz.modules.datalabel
         */
        dataLabel?: sap.viz.ui5.types.Datalabel;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.axis
         */
        xAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.background
         */
        background?: sap.viz.ui5.types.Background;

        /**
         * Module sap.viz.modules.stackedverticalbar
         */
        plotArea?: sap.viz.ui5.types.StackedVerticalBar;
      }

      interface StackedColumn100Opts extends sap.viz.ui5.core.BaseChartOpts {
        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        showTooltip?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Module sap.viz.modules.rootContainer
         */
        general?: sap.viz.ui5.types.RootContainer;

        /**
         * Module sap.viz.modules.controller.interaction
         */
        interaction?: sap.viz.ui5.types.controller.Interaction;

        /**
         * Module sap.viz.modules.title
         */
        title?: sap.viz.ui5.types.Title;

        /**
         * Module sap.viz.modules.legend
         */
        legendGroup?: sap.viz.ui5.types.Legend;

        /**
         * Module sap.viz.modules.legend.common
         */
        legend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.chart.elements.Tooltip
         */
        toolTip?: sap.viz.ui5.types.Tooltip;

        /**
         * Module sap.viz.modules.xycontainer
         */
        xyContainer?: sap.viz.ui5.types.XYContainer;

        /**
         * Module sap.viz.modules.datalabel
         */
        dataLabel?: sap.viz.ui5.types.Datalabel;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.axis
         */
        xAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.background
         */
        background?: sap.viz.ui5.types.Background;

        /**
         * Module sap.viz.modules.stackedverticalbar
         */
        plotArea?: sap.viz.ui5.types.StackedVerticalBar;
      }

      interface TimeBubbleOpts extends sap.viz.ui5.core.BaseChartOpts {
        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        showTooltip?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Module sap.viz.modules.rootContainer
         */
        general?: sap.viz.ui5.types.RootContainer;

        /**
         * Module sap.viz.modules.title
         */
        title?: sap.viz.ui5.types.Title;

        /**
         * Module sap.viz.modules.legend
         */
        legendGroup?: sap.viz.ui5.types.Legend;

        /**
         * Module sap.viz.modules.legend.common
         */
        legend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.modules.legend.common
         */
        sizeLegend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.modules.xycontainer
         */
        xyContainer?: sap.viz.ui5.types.XYContainer;

        /**
         * Module sap.viz.modules.datalabel
         */
        dataLabel?: sap.viz.ui5.types.Datalabel;

        /**
         * Module sap.viz.modules.axis
         */
        xAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.axis
         */
        yAxis?: sap.viz.ui5.types.Axis;

        /**
         * Module sap.viz.modules.background
         */
        background?: sap.viz.ui5.types.Background;

        /**
         * Module sap.viz.modules.bubble
         */
        plotArea?: sap.viz.ui5.types.Bubble;

        /**
         * Module sap.viz.chart.elements.Tooltip
         */
        toolTip?: sap.viz.ui5.types.Tooltip;

        /**
         * Module sap.viz.modules.controller.interaction
         */
        interaction?: sap.viz.ui5.types.controller.Interaction;
      }

      interface TreemapOpts extends sap.viz.ui5.core.BaseChartOpts {
        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        showTooltip?: Function;

        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Module sap.viz.modules.rootContainer
         */
        general?: sap.viz.ui5.types.RootContainer;

        /**
         * Module sap.viz.modules.title
         */
        title?: sap.viz.ui5.types.Title;

        /**
         * Module sap.viz.modules.legend
         */
        legendGroup?: sap.viz.ui5.types.Legend;

        /**
         * Module sap.viz.modules.legend.common
         */
        legend?: sap.viz.ui5.types.legend.Common;

        /**
         * Module sap.viz.modules.xycontainer
         */
        xyContainer?: sap.viz.ui5.types.XYContainer;

        /**
         * Module sap.viz.modules.datalabel
         */
        dataLabel?: sap.viz.ui5.types.Datalabel;

        /**
         * Module sap.viz.modules.treemap
         */
        plotArea?: sap.viz.ui5.types.Treemap;

        /**
         * Module sap.viz.chart.elements.Tooltip
         */
        toolTip?: sap.viz.ui5.types.Tooltip;

        /**
         * Module sap.viz.modules.controller.interaction
         */
        interaction?: sap.viz.ui5.types.controller.Interaction;
      }

      interface VizContainerOpts
        extends sap.viz.ui5.controls.common.BaseControlOpts {
        /**
         * Type for visualization.
         */
        vizType?: string;

        /**
         * Css for visualization.
         */
        vizCss?: string;

        /**
         * Properties for visualization.
         */
        vizProperties?: object;

        /**
         * Enable morphing for visualization.
         */
        enableMorphing?: boolean;

        /**
         * Dispatches "feedsChanged" event when the feeding changes due to add/remove/change feeding items on feeding
         * panel, drag and drop object onto VizFrame, or switch chart type by UI operation. Application should listen
         * to "feedsChanged" event to get the corresponding data and set it back to VizFrame to to update the visualization
         * with the new data.
         */
        feedsChanged?: Function;

        /**
         * Dispatches "vizTypeChanged" event when viz type was changed
         */
        vizTypeChanged?: Function;

        /**
         * Dispatches "vizDefinitionChanged" event when viz definition was changed.
         */
        vizDefinitionChanged?: Function;

        /**
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        selectData?: Function;

        /**
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        deselectData?: Function;

        /**
         * Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed
         * in accordance with the following format.{name:"showTooltip",data:{body:[{ //data of one group name:"...",val:[{
         * //data of one row color:"...",label:"...",shape:"...",value:"..."},"..."]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."}}}
         */
        showTooltip?: Function;

        /**
         * Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        hideTooltip?: Function;

        /**
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        initialized?: Function;

        /**
         * Dataset for chart.
         */
        vizData?: sap.viz.ui5.data.Dataset;

        /**
         * Available sap.viz.ui5.controls.common.feeds.AnalysisObject for object picker popup UI
         */
        analysisObjectsForPicker?:
          | sap.viz.ui5.controls.common.feeds.AnalysisObject[]
          | sap.viz.ui5.controls.common.feeds.AnalysisObject;

        /**
         * All feeds for chart.
         */
        feeds?:
          | sap.viz.ui5.controls.common.feeds.FeedItem[]
          | sap.viz.ui5.controls.common.feeds.FeedItem;
      }
      /**
       * @SINCE 1.7.2
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       * @EXPERIMENTAL (since 1.7.2)
       *
       * Chart sap.viz.ui5.Area
       */
      class Area extends sap.viz.ui5.core.BaseChart {
        /**
         * Constructor for a new sap.viz.ui5.Area
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: AreaOpts
        );

        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Area`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Area` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Area` itself
           */
          oListener?: object
        ): sap.viz.ui5.Area;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Area`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Area` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Area` itself
           */
          oListener?: object
        ): sap.viz.ui5.Area;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Area`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Area` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Area` itself
           */
          oListener?: object
        ): sap.viz.ui5.Area;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Area`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Area` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Area` itself
           */
          oListener?: object
        ): sap.viz.ui5.Area;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Area`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Area` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Area` itself
           */
          oListener?: object
        ): sap.viz.ui5.Area;
        /**
         * Destroys the background in the aggregation {@link #getBackground background}.
         */
        destroyBackground(): sap.viz.ui5.Area;
        /**
         * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
         */
        destroyDataLabel(): sap.viz.ui5.Area;
        /**
         * Destroys the general in the aggregation {@link #getGeneral general}.
         */
        destroyGeneral(): sap.viz.ui5.Area;
        /**
         * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
         */
        destroyInteraction(): sap.viz.ui5.Area;
        /**
         * Destroys the legend in the aggregation {@link #getLegend legend}.
         */
        destroyLegend(): sap.viz.ui5.Area;
        /**
         * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
         */
        destroyLegendGroup(): sap.viz.ui5.Area;
        /**
         * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
         */
        destroyPlotArea(): sap.viz.ui5.Area;
        /**
         * Destroys the title in the aggregation {@link #getTitle title}.
         */
        destroyTitle(): sap.viz.ui5.Area;
        /**
         * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
         */
        destroyToolTip(): sap.viz.ui5.Area;
        /**
         * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
         */
        destroyXAxis(): sap.viz.ui5.Area;
        /**
         * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
         */
        destroyXyContainer(): sap.viz.ui5.Area;
        /**
         * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
         */
        destroyYAxis(): sap.viz.ui5.Area;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Area`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Area;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Area`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Area;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.Area`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Area;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.Area`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Area;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Area`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Area;
        /**
         * Creates a new subclass of class sap.viz.ui5.Area with name `sClassName` and enriches it with the information
         * contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Area;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Area;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Area;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Area;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Area;
        /**
         * Gets content of aggregation {@link #getBackground background}.
         *
         * Module sap.viz.modules.background
         */
        getBackground(): sap.viz.ui5.types.Background;
        /**
         * Gets content of aggregation {@link #getDataLabel dataLabel}.
         *
         * Module sap.viz.modules.datalabel
         */
        getDataLabel(): sap.viz.ui5.types.Datalabel;
        /**
         * Gets content of aggregation {@link #getGeneral general}.
         *
         * Module sap.viz.modules.rootContainer
         */
        getGeneral(): sap.viz.ui5.types.RootContainer;
        /**
         * Gets content of aggregation {@link #getInteraction interaction}.
         *
         * Module sap.viz.modules.controller.interaction
         */
        getInteraction(): sap.viz.ui5.types.controller.Interaction;
        /**
         * Gets content of aggregation {@link #getLegend legend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getLegendGroup legendGroup}.
         *
         * Module sap.viz.modules.legend
         */
        getLegendGroup(): sap.viz.ui5.types.Legend;
        /**
         * Returns a metadata object for class sap.viz.ui5.Area.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets content of aggregation {@link #getPlotArea plotArea}.
         *
         * Module sap.viz.modules.area
         */
        getPlotArea(): sap.viz.ui5.types.Area;
        /**
         * Gets content of aggregation {@link #getTitle title}.
         *
         * Module sap.viz.modules.title
         */
        getTitle(): sap.viz.ui5.types.Title;
        /**
         * Gets content of aggregation {@link #getToolTip toolTip}.
         *
         * Module sap.viz.chart.elements.Tooltip
         */
        getToolTip(): sap.viz.ui5.types.Tooltip;
        /**
         * Gets content of aggregation {@link #getXAxis xAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getXAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getXyContainer xyContainer}.
         *
         * Module sap.viz.modules.xycontainer
         */
        getXyContainer(): sap.viz.ui5.types.XYContainer;
        /**
         * Gets content of aggregation {@link #getYAxis yAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis(): sap.viz.ui5.types.Axis;
        /**
         * Sets the aggregated {@link #getBackground background}.
         */
        setBackground(
          /**
           * The background to set
           */
          oBackground: sap.viz.ui5.types.Background
        ): sap.viz.ui5.Area;
        /**
         * Sets the aggregated {@link #getDataLabel dataLabel}.
         */
        setDataLabel(
          /**
           * The dataLabel to set
           */
          oDataLabel: sap.viz.ui5.types.Datalabel
        ): sap.viz.ui5.Area;
        /**
         * Sets the aggregated {@link #getGeneral general}.
         */
        setGeneral(
          /**
           * The general to set
           */
          oGeneral: sap.viz.ui5.types.RootContainer
        ): sap.viz.ui5.Area;
        /**
         * Sets the aggregated {@link #getInteraction interaction}.
         */
        setInteraction(
          /**
           * The interaction to set
           */
          oInteraction: sap.viz.ui5.types.controller.Interaction
        ): sap.viz.ui5.Area;
        /**
         * Sets the aggregated {@link #getLegend legend}.
         */
        setLegend(
          /**
           * The legend to set
           */
          oLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.Area;
        /**
         * Sets the aggregated {@link #getLegendGroup legendGroup}.
         */
        setLegendGroup(
          /**
           * The legendGroup to set
           */
          oLegendGroup: sap.viz.ui5.types.Legend
        ): sap.viz.ui5.Area;
        /**
         * Sets the aggregated {@link #getPlotArea plotArea}.
         */
        setPlotArea(
          /**
           * The plotArea to set
           */
          oPlotArea: sap.viz.ui5.types.Area
        ): sap.viz.ui5.Area;
        /**
         * Sets the aggregated {@link #getTitle title}.
         */
        setTitle(
          /**
           * The title to set
           */
          oTitle: sap.viz.ui5.types.Title
        ): sap.viz.ui5.Area;
        /**
         * Sets the aggregated {@link #getToolTip toolTip}.
         */
        setToolTip(
          /**
           * The toolTip to set
           */
          oToolTip: sap.viz.ui5.types.Tooltip
        ): sap.viz.ui5.Area;
        /**
         * Sets the aggregated {@link #getXAxis xAxis}.
         */
        setXAxis(
          /**
           * The xAxis to set
           */
          oXAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.Area;
        /**
         * Sets the aggregated {@link #getXyContainer xyContainer}.
         */
        setXyContainer(
          /**
           * The xyContainer to set
           */
          oXyContainer: sap.viz.ui5.types.XYContainer
        ): sap.viz.ui5.Area;
        /**
         * Sets the aggregated {@link #getYAxis yAxis}.
         */
        setYAxis(
          /**
           * The yAxis to set
           */
          oYAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.Area;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Area`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Area` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Area` itself
           */
          oListener?: object
        ): sap.viz.ui5.Area;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Area`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Area` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Area` itself
           */
          oListener?: object
        ): sap.viz.ui5.Area;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Area`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Area` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Area` itself
           */
          oListener?: object
        ): sap.viz.ui5.Area;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Area`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Area` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Area` itself
           */
          oListener?: object
        ): sap.viz.ui5.Area;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Area`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Area` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Area` itself
           */
          oListener?: object
        ): sap.viz.ui5.Area;
      }
      /**
       * @SINCE 1.7.2
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       * @EXPERIMENTAL (since 1.7.2)
       *
       * Chart sap.viz.ui5.Area100
       */
      class Area100 extends sap.viz.ui5.core.BaseChart {
        /**
         * Constructor for a new sap.viz.ui5.Area100
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: Area100Opts
        );

        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Area100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Area100` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Area100` itself
           */
          oListener?: object
        ): sap.viz.ui5.Area100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Area100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Area100` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Area100` itself
           */
          oListener?: object
        ): sap.viz.ui5.Area100;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Area100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Area100` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Area100` itself
           */
          oListener?: object
        ): sap.viz.ui5.Area100;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Area100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Area100` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Area100` itself
           */
          oListener?: object
        ): sap.viz.ui5.Area100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Area100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Area100` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Area100` itself
           */
          oListener?: object
        ): sap.viz.ui5.Area100;
        /**
         * Destroys the background in the aggregation {@link #getBackground background}.
         */
        destroyBackground(): sap.viz.ui5.Area100;
        /**
         * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
         */
        destroyDataLabel(): sap.viz.ui5.Area100;
        /**
         * Destroys the general in the aggregation {@link #getGeneral general}.
         */
        destroyGeneral(): sap.viz.ui5.Area100;
        /**
         * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
         */
        destroyInteraction(): sap.viz.ui5.Area100;
        /**
         * Destroys the legend in the aggregation {@link #getLegend legend}.
         */
        destroyLegend(): sap.viz.ui5.Area100;
        /**
         * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
         */
        destroyLegendGroup(): sap.viz.ui5.Area100;
        /**
         * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
         */
        destroyPlotArea(): sap.viz.ui5.Area100;
        /**
         * Destroys the title in the aggregation {@link #getTitle title}.
         */
        destroyTitle(): sap.viz.ui5.Area100;
        /**
         * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
         */
        destroyToolTip(): sap.viz.ui5.Area100;
        /**
         * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
         */
        destroyXAxis(): sap.viz.ui5.Area100;
        /**
         * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
         */
        destroyXyContainer(): sap.viz.ui5.Area100;
        /**
         * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
         */
        destroyYAxis(): sap.viz.ui5.Area100;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Area100`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Area100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Area100`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Area100;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.Area100`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Area100;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.Area100`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Area100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Area100`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Area100;
        /**
         * Creates a new subclass of class sap.viz.ui5.Area100 with name `sClassName` and enriches it with the information
         * contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Area100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Area100;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Area100;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Area100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Area100;
        /**
         * Gets content of aggregation {@link #getBackground background}.
         *
         * Module sap.viz.modules.background
         */
        getBackground(): sap.viz.ui5.types.Background;
        /**
         * Gets content of aggregation {@link #getDataLabel dataLabel}.
         *
         * Module sap.viz.modules.datalabel
         */
        getDataLabel(): sap.viz.ui5.types.Datalabel;
        /**
         * Gets content of aggregation {@link #getGeneral general}.
         *
         * Module sap.viz.modules.rootContainer
         */
        getGeneral(): sap.viz.ui5.types.RootContainer;
        /**
         * Gets content of aggregation {@link #getInteraction interaction}.
         *
         * Module sap.viz.modules.controller.interaction
         */
        getInteraction(): sap.viz.ui5.types.controller.Interaction;
        /**
         * Gets content of aggregation {@link #getLegend legend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getLegendGroup legendGroup}.
         *
         * Module sap.viz.modules.legend
         */
        getLegendGroup(): sap.viz.ui5.types.Legend;
        /**
         * Returns a metadata object for class sap.viz.ui5.Area100.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets content of aggregation {@link #getPlotArea plotArea}.
         *
         * Module sap.viz.modules.area
         */
        getPlotArea(): sap.viz.ui5.types.Area;
        /**
         * Gets content of aggregation {@link #getTitle title}.
         *
         * Module sap.viz.modules.title
         */
        getTitle(): sap.viz.ui5.types.Title;
        /**
         * Gets content of aggregation {@link #getToolTip toolTip}.
         *
         * Module sap.viz.chart.elements.Tooltip
         */
        getToolTip(): sap.viz.ui5.types.Tooltip;
        /**
         * Gets content of aggregation {@link #getXAxis xAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getXAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getXyContainer xyContainer}.
         *
         * Module sap.viz.modules.xycontainer
         */
        getXyContainer(): sap.viz.ui5.types.XYContainer;
        /**
         * Gets content of aggregation {@link #getYAxis yAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis(): sap.viz.ui5.types.Axis;
        /**
         * Sets the aggregated {@link #getBackground background}.
         */
        setBackground(
          /**
           * The background to set
           */
          oBackground: sap.viz.ui5.types.Background
        ): sap.viz.ui5.Area100;
        /**
         * Sets the aggregated {@link #getDataLabel dataLabel}.
         */
        setDataLabel(
          /**
           * The dataLabel to set
           */
          oDataLabel: sap.viz.ui5.types.Datalabel
        ): sap.viz.ui5.Area100;
        /**
         * Sets the aggregated {@link #getGeneral general}.
         */
        setGeneral(
          /**
           * The general to set
           */
          oGeneral: sap.viz.ui5.types.RootContainer
        ): sap.viz.ui5.Area100;
        /**
         * Sets the aggregated {@link #getInteraction interaction}.
         */
        setInteraction(
          /**
           * The interaction to set
           */
          oInteraction: sap.viz.ui5.types.controller.Interaction
        ): sap.viz.ui5.Area100;
        /**
         * Sets the aggregated {@link #getLegend legend}.
         */
        setLegend(
          /**
           * The legend to set
           */
          oLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.Area100;
        /**
         * Sets the aggregated {@link #getLegendGroup legendGroup}.
         */
        setLegendGroup(
          /**
           * The legendGroup to set
           */
          oLegendGroup: sap.viz.ui5.types.Legend
        ): sap.viz.ui5.Area100;
        /**
         * Sets the aggregated {@link #getPlotArea plotArea}.
         */
        setPlotArea(
          /**
           * The plotArea to set
           */
          oPlotArea: sap.viz.ui5.types.Area
        ): sap.viz.ui5.Area100;
        /**
         * Sets the aggregated {@link #getTitle title}.
         */
        setTitle(
          /**
           * The title to set
           */
          oTitle: sap.viz.ui5.types.Title
        ): sap.viz.ui5.Area100;
        /**
         * Sets the aggregated {@link #getToolTip toolTip}.
         */
        setToolTip(
          /**
           * The toolTip to set
           */
          oToolTip: sap.viz.ui5.types.Tooltip
        ): sap.viz.ui5.Area100;
        /**
         * Sets the aggregated {@link #getXAxis xAxis}.
         */
        setXAxis(
          /**
           * The xAxis to set
           */
          oXAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.Area100;
        /**
         * Sets the aggregated {@link #getXyContainer xyContainer}.
         */
        setXyContainer(
          /**
           * The xyContainer to set
           */
          oXyContainer: sap.viz.ui5.types.XYContainer
        ): sap.viz.ui5.Area100;
        /**
         * Sets the aggregated {@link #getYAxis yAxis}.
         */
        setYAxis(
          /**
           * The yAxis to set
           */
          oYAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.Area100;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Area100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Area100` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Area100` itself
           */
          oListener?: object
        ): sap.viz.ui5.Area100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Area100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Area100` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Area100` itself
           */
          oListener?: object
        ): sap.viz.ui5.Area100;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Area100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Area100` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Area100` itself
           */
          oListener?: object
        ): sap.viz.ui5.Area100;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Area100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Area100` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Area100` itself
           */
          oListener?: object
        ): sap.viz.ui5.Area100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Area100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Area100` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Area100` itself
           */
          oListener?: object
        ): sap.viz.ui5.Area100;
      }
      /**
       * @SINCE 1.7.2
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       *
       * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
       * VizFrame}**(`new sap.viz.ui5.controls.VizFrame({'vizType': 'bar'})`) **control to benefit from new charting
       * enhancements and timely support. **
       *
       * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
       * make sure you evaluate it thoroughly before migration.
       * @EXPERIMENTAL (since 1.7.2)
       *
       * Chart sap.viz.ui5.Bar
       */
      class Bar extends sap.viz.ui5.core.BaseChart {
        /**
         * Constructor for a new sap.viz.ui5.Bar
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: BarOpts
        );

        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Bar`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bar` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bar` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bar;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Bar`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bar` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bar` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bar;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Bar`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bar` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bar` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bar;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Bar`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bar` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bar` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bar;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Bar`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bar` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bar` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bar;
        /**
         * Destroys the background in the aggregation {@link #getBackground background}.
         */
        destroyBackground(): sap.viz.ui5.Bar;
        /**
         * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
         */
        destroyDataLabel(): sap.viz.ui5.Bar;
        /**
         * Destroys the general in the aggregation {@link #getGeneral general}.
         */
        destroyGeneral(): sap.viz.ui5.Bar;
        /**
         * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
         */
        destroyInteraction(): sap.viz.ui5.Bar;
        /**
         * Destroys the legend in the aggregation {@link #getLegend legend}.
         */
        destroyLegend(): sap.viz.ui5.Bar;
        /**
         * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
         */
        destroyLegendGroup(): sap.viz.ui5.Bar;
        /**
         * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
         */
        destroyPlotArea(): sap.viz.ui5.Bar;
        /**
         * Destroys the title in the aggregation {@link #getTitle title}.
         */
        destroyTitle(): sap.viz.ui5.Bar;
        /**
         * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
         */
        destroyToolTip(): sap.viz.ui5.Bar;
        /**
         * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
         */
        destroyXAxis(): sap.viz.ui5.Bar;
        /**
         * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
         */
        destroyXyContainer(): sap.viz.ui5.Bar;
        /**
         * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
         */
        destroyYAxis(): sap.viz.ui5.Bar;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Bar`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Bar;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Bar`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Bar;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.Bar`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Bar;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.Bar`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Bar;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Bar`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Bar;
        /**
         * Creates a new subclass of class sap.viz.ui5.Bar with name `sClassName` and enriches it with the information
         * contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Bar;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Bar;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Bar;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Bar;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Bar;
        /**
         * Gets content of aggregation {@link #getBackground background}.
         *
         * Module sap.viz.modules.background
         */
        getBackground(): sap.viz.ui5.types.Background;
        /**
         * Gets content of aggregation {@link #getDataLabel dataLabel}.
         *
         * Module sap.viz.modules.datalabel
         */
        getDataLabel(): sap.viz.ui5.types.Datalabel;
        /**
         * Gets content of aggregation {@link #getGeneral general}.
         *
         * Module sap.viz.modules.rootContainer
         */
        getGeneral(): sap.viz.ui5.types.RootContainer;
        /**
         * Gets content of aggregation {@link #getInteraction interaction}.
         *
         * Module sap.viz.modules.controller.interaction
         */
        getInteraction(): sap.viz.ui5.types.controller.Interaction;
        /**
         * Gets content of aggregation {@link #getLegend legend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getLegendGroup legendGroup}.
         *
         * Module sap.viz.modules.legend
         */
        getLegendGroup(): sap.viz.ui5.types.Legend;
        /**
         * Returns a metadata object for class sap.viz.ui5.Bar.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets content of aggregation {@link #getPlotArea plotArea}.
         *
         * Module sap.viz.modules.bar
         */
        getPlotArea(): sap.viz.ui5.types.Bar;
        /**
         * Gets content of aggregation {@link #getTitle title}.
         *
         * Module sap.viz.modules.title
         */
        getTitle(): sap.viz.ui5.types.Title;
        /**
         * Gets content of aggregation {@link #getToolTip toolTip}.
         *
         * Module sap.viz.chart.elements.Tooltip
         */
        getToolTip(): sap.viz.ui5.types.Tooltip;
        /**
         * Gets content of aggregation {@link #getXAxis xAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getXAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getXyContainer xyContainer}.
         *
         * Module sap.viz.modules.xycontainer
         */
        getXyContainer(): sap.viz.ui5.types.XYContainer;
        /**
         * Gets content of aggregation {@link #getYAxis yAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis(): sap.viz.ui5.types.Axis;
        /**
         * Sets the aggregated {@link #getBackground background}.
         */
        setBackground(
          /**
           * The background to set
           */
          oBackground: sap.viz.ui5.types.Background
        ): sap.viz.ui5.Bar;
        /**
         * Sets the aggregated {@link #getDataLabel dataLabel}.
         */
        setDataLabel(
          /**
           * The dataLabel to set
           */
          oDataLabel: sap.viz.ui5.types.Datalabel
        ): sap.viz.ui5.Bar;
        /**
         * Sets the aggregated {@link #getGeneral general}.
         */
        setGeneral(
          /**
           * The general to set
           */
          oGeneral: sap.viz.ui5.types.RootContainer
        ): sap.viz.ui5.Bar;
        /**
         * Sets the aggregated {@link #getInteraction interaction}.
         */
        setInteraction(
          /**
           * The interaction to set
           */
          oInteraction: sap.viz.ui5.types.controller.Interaction
        ): sap.viz.ui5.Bar;
        /**
         * Sets the aggregated {@link #getLegend legend}.
         */
        setLegend(
          /**
           * The legend to set
           */
          oLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.Bar;
        /**
         * Sets the aggregated {@link #getLegendGroup legendGroup}.
         */
        setLegendGroup(
          /**
           * The legendGroup to set
           */
          oLegendGroup: sap.viz.ui5.types.Legend
        ): sap.viz.ui5.Bar;
        /**
         * Sets the aggregated {@link #getPlotArea plotArea}.
         */
        setPlotArea(
          /**
           * The plotArea to set
           */
          oPlotArea: sap.viz.ui5.types.Bar
        ): sap.viz.ui5.Bar;
        /**
         * Sets the aggregated {@link #getTitle title}.
         */
        setTitle(
          /**
           * The title to set
           */
          oTitle: sap.viz.ui5.types.Title
        ): sap.viz.ui5.Bar;
        /**
         * Sets the aggregated {@link #getToolTip toolTip}.
         */
        setToolTip(
          /**
           * The toolTip to set
           */
          oToolTip: sap.viz.ui5.types.Tooltip
        ): sap.viz.ui5.Bar;
        /**
         * Sets the aggregated {@link #getXAxis xAxis}.
         */
        setXAxis(
          /**
           * The xAxis to set
           */
          oXAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.Bar;
        /**
         * Sets the aggregated {@link #getXyContainer xyContainer}.
         */
        setXyContainer(
          /**
           * The xyContainer to set
           */
          oXyContainer: sap.viz.ui5.types.XYContainer
        ): sap.viz.ui5.Bar;
        /**
         * Sets the aggregated {@link #getYAxis yAxis}.
         */
        setYAxis(
          /**
           * The yAxis to set
           */
          oYAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.Bar;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Bar`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bar` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bar` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bar;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Bar`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bar` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bar` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bar;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Bar`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bar` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bar` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bar;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Bar`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bar` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bar` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bar;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Bar`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bar` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bar` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bar;
      }
      /**
       * @SINCE 1.7.2
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       *
       * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
       * VizFrame}**(`new sap.viz.ui5.controls.VizFrame({'vizType': 'bubble'})`) **control to benefit from new
       * charting enhancements and timely support. **
       *
       * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
       * make sure you evaluate it thoroughly before migration.
       * @EXPERIMENTAL (since 1.7.2)
       *
       * Chart sap.viz.ui5.Bubble
       */
      class Bubble extends sap.viz.ui5.core.BaseChart {
        /**
         * Constructor for a new sap.viz.ui5.Bubble
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: BubbleOpts
        );

        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Bubble`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bubble` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bubble` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bubble;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Bubble`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bubble` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bubble` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bubble;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Bubble`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bubble` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bubble` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bubble;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Bubble`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bubble` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bubble` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bubble;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Bubble`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bubble` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bubble` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bubble;
        /**
         * Destroys the background in the aggregation {@link #getBackground background}.
         */
        destroyBackground(): sap.viz.ui5.Bubble;
        /**
         * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
         */
        destroyDataLabel(): sap.viz.ui5.Bubble;
        /**
         * Destroys the general in the aggregation {@link #getGeneral general}.
         */
        destroyGeneral(): sap.viz.ui5.Bubble;
        /**
         * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
         */
        destroyInteraction(): sap.viz.ui5.Bubble;
        /**
         * Destroys the legend in the aggregation {@link #getLegend legend}.
         */
        destroyLegend(): sap.viz.ui5.Bubble;
        /**
         * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
         */
        destroyLegendGroup(): sap.viz.ui5.Bubble;
        /**
         * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
         */
        destroyPlotArea(): sap.viz.ui5.Bubble;
        /**
         * Destroys the sizeLegend in the aggregation {@link #getSizeLegend sizeLegend}.
         */
        destroySizeLegend(): sap.viz.ui5.Bubble;
        /**
         * Destroys the title in the aggregation {@link #getTitle title}.
         */
        destroyTitle(): sap.viz.ui5.Bubble;
        /**
         * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
         */
        destroyToolTip(): sap.viz.ui5.Bubble;
        /**
         * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
         */
        destroyXAxis(): sap.viz.ui5.Bubble;
        /**
         * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
         */
        destroyXyContainer(): sap.viz.ui5.Bubble;
        /**
         * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
         */
        destroyYAxis(): sap.viz.ui5.Bubble;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Bubble`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Bubble;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Bubble`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Bubble;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.Bubble`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Bubble;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.Bubble`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Bubble;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Bubble`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Bubble;
        /**
         * Creates a new subclass of class sap.viz.ui5.Bubble with name `sClassName` and enriches it with the information
         * contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Bubble;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Bubble;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Bubble;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Bubble;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Bubble;
        /**
         * Gets content of aggregation {@link #getBackground background}.
         *
         * Module sap.viz.modules.background
         */
        getBackground(): sap.viz.ui5.types.Background;
        /**
         * Gets content of aggregation {@link #getDataLabel dataLabel}.
         *
         * Module sap.viz.modules.datalabel
         */
        getDataLabel(): sap.viz.ui5.types.Datalabel;
        /**
         * Gets content of aggregation {@link #getGeneral general}.
         *
         * Module sap.viz.modules.rootContainer
         */
        getGeneral(): sap.viz.ui5.types.RootContainer;
        /**
         * Gets content of aggregation {@link #getInteraction interaction}.
         *
         * Module sap.viz.modules.controller.interaction
         */
        getInteraction(): sap.viz.ui5.types.controller.Interaction;
        /**
         * Gets content of aggregation {@link #getLegend legend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getLegendGroup legendGroup}.
         *
         * Module sap.viz.modules.legend
         */
        getLegendGroup(): sap.viz.ui5.types.Legend;
        /**
         * Returns a metadata object for class sap.viz.ui5.Bubble.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets content of aggregation {@link #getPlotArea plotArea}.
         *
         * Module sap.viz.modules.bubble
         */
        getPlotArea(): sap.viz.ui5.types.Bubble;
        /**
         * Gets content of aggregation {@link #getSizeLegend sizeLegend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getSizeLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getTitle title}.
         *
         * Module sap.viz.modules.title
         */
        getTitle(): sap.viz.ui5.types.Title;
        /**
         * Gets content of aggregation {@link #getToolTip toolTip}.
         *
         * Module sap.viz.chart.elements.Tooltip
         */
        getToolTip(): sap.viz.ui5.types.Tooltip;
        /**
         * Gets content of aggregation {@link #getXAxis xAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getXAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getXyContainer xyContainer}.
         *
         * Module sap.viz.modules.xycontainer
         */
        getXyContainer(): sap.viz.ui5.types.XYContainer;
        /**
         * Gets content of aggregation {@link #getYAxis yAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis(): sap.viz.ui5.types.Axis;
        /**
         * Sets the aggregated {@link #getBackground background}.
         */
        setBackground(
          /**
           * The background to set
           */
          oBackground: sap.viz.ui5.types.Background
        ): sap.viz.ui5.Bubble;
        /**
         * Sets the aggregated {@link #getDataLabel dataLabel}.
         */
        setDataLabel(
          /**
           * The dataLabel to set
           */
          oDataLabel: sap.viz.ui5.types.Datalabel
        ): sap.viz.ui5.Bubble;
        /**
         * Sets the aggregated {@link #getGeneral general}.
         */
        setGeneral(
          /**
           * The general to set
           */
          oGeneral: sap.viz.ui5.types.RootContainer
        ): sap.viz.ui5.Bubble;
        /**
         * Sets the aggregated {@link #getInteraction interaction}.
         */
        setInteraction(
          /**
           * The interaction to set
           */
          oInteraction: sap.viz.ui5.types.controller.Interaction
        ): sap.viz.ui5.Bubble;
        /**
         * Sets the aggregated {@link #getLegend legend}.
         */
        setLegend(
          /**
           * The legend to set
           */
          oLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.Bubble;
        /**
         * Sets the aggregated {@link #getLegendGroup legendGroup}.
         */
        setLegendGroup(
          /**
           * The legendGroup to set
           */
          oLegendGroup: sap.viz.ui5.types.Legend
        ): sap.viz.ui5.Bubble;
        /**
         * Sets the aggregated {@link #getPlotArea plotArea}.
         */
        setPlotArea(
          /**
           * The plotArea to set
           */
          oPlotArea: sap.viz.ui5.types.Bubble
        ): sap.viz.ui5.Bubble;
        /**
         * Sets the aggregated {@link #getSizeLegend sizeLegend}.
         */
        setSizeLegend(
          /**
           * The sizeLegend to set
           */
          oSizeLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.Bubble;
        /**
         * Sets the aggregated {@link #getTitle title}.
         */
        setTitle(
          /**
           * The title to set
           */
          oTitle: sap.viz.ui5.types.Title
        ): sap.viz.ui5.Bubble;
        /**
         * Sets the aggregated {@link #getToolTip toolTip}.
         */
        setToolTip(
          /**
           * The toolTip to set
           */
          oToolTip: sap.viz.ui5.types.Tooltip
        ): sap.viz.ui5.Bubble;
        /**
         * Sets the aggregated {@link #getXAxis xAxis}.
         */
        setXAxis(
          /**
           * The xAxis to set
           */
          oXAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.Bubble;
        /**
         * Sets the aggregated {@link #getXyContainer xyContainer}.
         */
        setXyContainer(
          /**
           * The xyContainer to set
           */
          oXyContainer: sap.viz.ui5.types.XYContainer
        ): sap.viz.ui5.Bubble;
        /**
         * Sets the aggregated {@link #getYAxis yAxis}.
         */
        setYAxis(
          /**
           * The yAxis to set
           */
          oYAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.Bubble;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Bubble`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bubble` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bubble` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bubble;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Bubble`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bubble` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bubble` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bubble;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Bubble`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bubble` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bubble` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bubble;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Bubble`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bubble` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bubble` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bubble;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Bubble`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bubble` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bubble` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bubble;
      }
      /**
       * @SINCE 1.7.2
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       *
       * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
       * VizFrame}**(`new sap.viz.ui5.controls.VizFrame({'vizType': 'vertical_bullet'})`) **control to benefit
       * from new charting enhancements and timely support. **
       *
       * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
       * make sure you evaluate it thoroughly before migration.
       * @EXPERIMENTAL (since 1.7.2)
       *
       * Chart sap.viz.ui5.Bullet
       */
      class Bullet extends sap.viz.ui5.core.BaseChart {
        /**
         * Constructor for a new sap.viz.ui5.Bullet
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: BulletOpts
        );

        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Bullet`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bullet` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bullet` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bullet;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Bullet`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bullet` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bullet` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bullet;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Bullet`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bullet` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bullet` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bullet;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Bullet`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bullet` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bullet` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bullet;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Bullet`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bullet` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bullet` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bullet;
        /**
         * Destroys the background in the aggregation {@link #getBackground background}.
         */
        destroyBackground(): sap.viz.ui5.Bullet;
        /**
         * Destroys the general in the aggregation {@link #getGeneral general}.
         */
        destroyGeneral(): sap.viz.ui5.Bullet;
        /**
         * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
         */
        destroyInteraction(): sap.viz.ui5.Bullet;
        /**
         * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
         */
        destroyPlotArea(): sap.viz.ui5.Bullet;
        /**
         * Destroys the title in the aggregation {@link #getTitle title}.
         */
        destroyTitle(): sap.viz.ui5.Bullet;
        /**
         * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
         */
        destroyToolTip(): sap.viz.ui5.Bullet;
        /**
         * Destroys the xAxis2 in the aggregation {@link #getXAxis2 xAxis2}.
         */
        destroyXAxis2(): sap.viz.ui5.Bullet;
        /**
         * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
         */
        destroyXyContainer(): sap.viz.ui5.Bullet;
        /**
         * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
         */
        destroyYAxis(): sap.viz.ui5.Bullet;
        /**
         * Destroys the yAxis2 in the aggregation {@link #getYAxis2 yAxis2}.
         */
        destroyYAxis2(): sap.viz.ui5.Bullet;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Bullet`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Bullet;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Bullet`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Bullet;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.Bullet`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Bullet;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.Bullet`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Bullet;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Bullet`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Bullet;
        /**
         * Creates a new subclass of class sap.viz.ui5.Bullet with name `sClassName` and enriches it with the information
         * contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Bullet;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Bullet;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Bullet;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Bullet;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Bullet;
        /**
         * Gets content of aggregation {@link #getBackground background}.
         *
         * Module sap.viz.modules.background
         */
        getBackground(): sap.viz.ui5.types.Background;
        /**
         * Gets content of aggregation {@link #getGeneral general}.
         *
         * Module sap.viz.modules.rootContainer
         */
        getGeneral(): sap.viz.ui5.types.RootContainer;
        /**
         * Gets content of aggregation {@link #getInteraction interaction}.
         *
         * Module sap.viz.modules.controller.interaction
         */
        getInteraction(): sap.viz.ui5.types.controller.Interaction;
        /**
         * Returns a metadata object for class sap.viz.ui5.Bullet.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets content of aggregation {@link #getPlotArea plotArea}.
         *
         * Module sap.viz.modules.bullet
         */
        getPlotArea(): sap.viz.ui5.types.Bullet;
        /**
         * Gets content of aggregation {@link #getTitle title}.
         *
         * Module sap.viz.modules.title
         */
        getTitle(): sap.viz.ui5.types.Title;
        /**
         * Gets content of aggregation {@link #getToolTip toolTip}.
         *
         * Module sap.viz.chart.elements.Tooltip
         */
        getToolTip(): sap.viz.ui5.types.Tooltip;
        /**
         * Gets content of aggregation {@link #getXAxis2 xAxis2}.
         *
         * Module sap.viz.modules.axis
         */
        getXAxis2(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getXyContainer xyContainer}.
         *
         * Module sap.viz.modules.xycontainer
         */
        getXyContainer(): sap.viz.ui5.types.XYContainer;
        /**
         * Gets content of aggregation {@link #getYAxis yAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getYAxis2 yAxis2}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis2(): sap.viz.ui5.types.Axis;
        /**
         * Sets the aggregated {@link #getBackground background}.
         */
        setBackground(
          /**
           * The background to set
           */
          oBackground: sap.viz.ui5.types.Background
        ): sap.viz.ui5.Bullet;
        /**
         * Sets the aggregated {@link #getGeneral general}.
         */
        setGeneral(
          /**
           * The general to set
           */
          oGeneral: sap.viz.ui5.types.RootContainer
        ): sap.viz.ui5.Bullet;
        /**
         * Sets the aggregated {@link #getInteraction interaction}.
         */
        setInteraction(
          /**
           * The interaction to set
           */
          oInteraction: sap.viz.ui5.types.controller.Interaction
        ): sap.viz.ui5.Bullet;
        /**
         * Sets the aggregated {@link #getPlotArea plotArea}.
         */
        setPlotArea(
          /**
           * The plotArea to set
           */
          oPlotArea: sap.viz.ui5.types.Bullet
        ): sap.viz.ui5.Bullet;
        /**
         * Sets the aggregated {@link #getTitle title}.
         */
        setTitle(
          /**
           * The title to set
           */
          oTitle: sap.viz.ui5.types.Title
        ): sap.viz.ui5.Bullet;
        /**
         * Sets the aggregated {@link #getToolTip toolTip}.
         */
        setToolTip(
          /**
           * The toolTip to set
           */
          oToolTip: sap.viz.ui5.types.Tooltip
        ): sap.viz.ui5.Bullet;
        /**
         * Sets the aggregated {@link #getXAxis2 xAxis2}.
         */
        setXAxis2(
          /**
           * The xAxis2 to set
           */
          oXAxis2: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.Bullet;
        /**
         * Sets the aggregated {@link #getXyContainer xyContainer}.
         */
        setXyContainer(
          /**
           * The xyContainer to set
           */
          oXyContainer: sap.viz.ui5.types.XYContainer
        ): sap.viz.ui5.Bullet;
        /**
         * Sets the aggregated {@link #getYAxis yAxis}.
         */
        setYAxis(
          /**
           * The yAxis to set
           */
          oYAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.Bullet;
        /**
         * Sets the aggregated {@link #getYAxis2 yAxis2}.
         */
        setYAxis2(
          /**
           * The yAxis2 to set
           */
          oYAxis2: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.Bullet;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Bullet`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bullet` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bullet` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bullet;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Bullet`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bullet` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bullet` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bullet;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Bullet`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bullet` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bullet` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bullet;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Bullet`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bullet` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bullet` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bullet;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Bullet`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Bullet` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Bullet` itself
           */
          oListener?: object
        ): sap.viz.ui5.Bullet;
      }
      /**
       * @SINCE 1.7.2
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       *
       * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
       * VizFrame}**(`new sap.viz.ui5.controls.VizFrame({'vizType': 'column'})`) **control to benefit from new
       * charting enhancements and timely support. **
       *
       * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
       * make sure you evaluate it thoroughly before migration.
       * @EXPERIMENTAL (since 1.7.2)
       *
       * Chart sap.viz.ui5.Column
       */
      class Column extends sap.viz.ui5.core.BaseChart {
        /**
         * Constructor for a new sap.viz.ui5.Column
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: ColumnOpts
        );

        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Column`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Column` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Column` itself
           */
          oListener?: object
        ): sap.viz.ui5.Column;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Column`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Column` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Column` itself
           */
          oListener?: object
        ): sap.viz.ui5.Column;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Column`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Column` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Column` itself
           */
          oListener?: object
        ): sap.viz.ui5.Column;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Column`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Column` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Column` itself
           */
          oListener?: object
        ): sap.viz.ui5.Column;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Column`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Column` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Column` itself
           */
          oListener?: object
        ): sap.viz.ui5.Column;
        /**
         * Destroys the background in the aggregation {@link #getBackground background}.
         */
        destroyBackground(): sap.viz.ui5.Column;
        /**
         * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
         */
        destroyDataLabel(): sap.viz.ui5.Column;
        /**
         * Destroys the general in the aggregation {@link #getGeneral general}.
         */
        destroyGeneral(): sap.viz.ui5.Column;
        /**
         * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
         */
        destroyInteraction(): sap.viz.ui5.Column;
        /**
         * Destroys the legend in the aggregation {@link #getLegend legend}.
         */
        destroyLegend(): sap.viz.ui5.Column;
        /**
         * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
         */
        destroyLegendGroup(): sap.viz.ui5.Column;
        /**
         * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
         */
        destroyPlotArea(): sap.viz.ui5.Column;
        /**
         * Destroys the title in the aggregation {@link #getTitle title}.
         */
        destroyTitle(): sap.viz.ui5.Column;
        /**
         * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
         */
        destroyToolTip(): sap.viz.ui5.Column;
        /**
         * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
         */
        destroyXAxis(): sap.viz.ui5.Column;
        /**
         * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
         */
        destroyXyContainer(): sap.viz.ui5.Column;
        /**
         * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
         */
        destroyYAxis(): sap.viz.ui5.Column;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Column`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Column;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Column`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Column;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.Column`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Column;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.Column`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Column;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Column`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Column;
        /**
         * Creates a new subclass of class sap.viz.ui5.Column with name `sClassName` and enriches it with the information
         * contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Column;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Column;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Column;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Column;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Column;
        /**
         * Gets content of aggregation {@link #getBackground background}.
         *
         * Module sap.viz.modules.background
         */
        getBackground(): sap.viz.ui5.types.Background;
        /**
         * Gets content of aggregation {@link #getDataLabel dataLabel}.
         *
         * Module sap.viz.modules.datalabel
         */
        getDataLabel(): sap.viz.ui5.types.Datalabel;
        /**
         * Gets content of aggregation {@link #getGeneral general}.
         *
         * Module sap.viz.modules.rootContainer
         */
        getGeneral(): sap.viz.ui5.types.RootContainer;
        /**
         * Gets content of aggregation {@link #getInteraction interaction}.
         *
         * Module sap.viz.modules.controller.interaction
         */
        getInteraction(): sap.viz.ui5.types.controller.Interaction;
        /**
         * Gets content of aggregation {@link #getLegend legend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getLegendGroup legendGroup}.
         *
         * Module sap.viz.modules.legend
         */
        getLegendGroup(): sap.viz.ui5.types.Legend;
        /**
         * Returns a metadata object for class sap.viz.ui5.Column.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets content of aggregation {@link #getPlotArea plotArea}.
         *
         * Module sap.viz.modules.verticalbar
         */
        getPlotArea(): sap.viz.ui5.types.VerticalBar;
        /**
         * Gets content of aggregation {@link #getTitle title}.
         *
         * Module sap.viz.modules.title
         */
        getTitle(): sap.viz.ui5.types.Title;
        /**
         * Gets content of aggregation {@link #getToolTip toolTip}.
         *
         * Module sap.viz.chart.elements.Tooltip
         */
        getToolTip(): sap.viz.ui5.types.Tooltip;
        /**
         * Gets content of aggregation {@link #getXAxis xAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getXAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getXyContainer xyContainer}.
         *
         * Module sap.viz.modules.xycontainer
         */
        getXyContainer(): sap.viz.ui5.types.XYContainer;
        /**
         * Gets content of aggregation {@link #getYAxis yAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis(): sap.viz.ui5.types.Axis;
        /**
         * Sets the aggregated {@link #getBackground background}.
         */
        setBackground(
          /**
           * The background to set
           */
          oBackground: sap.viz.ui5.types.Background
        ): sap.viz.ui5.Column;
        /**
         * Sets the aggregated {@link #getDataLabel dataLabel}.
         */
        setDataLabel(
          /**
           * The dataLabel to set
           */
          oDataLabel: sap.viz.ui5.types.Datalabel
        ): sap.viz.ui5.Column;
        /**
         * Sets the aggregated {@link #getGeneral general}.
         */
        setGeneral(
          /**
           * The general to set
           */
          oGeneral: sap.viz.ui5.types.RootContainer
        ): sap.viz.ui5.Column;
        /**
         * Sets the aggregated {@link #getInteraction interaction}.
         */
        setInteraction(
          /**
           * The interaction to set
           */
          oInteraction: sap.viz.ui5.types.controller.Interaction
        ): sap.viz.ui5.Column;
        /**
         * Sets the aggregated {@link #getLegend legend}.
         */
        setLegend(
          /**
           * The legend to set
           */
          oLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.Column;
        /**
         * Sets the aggregated {@link #getLegendGroup legendGroup}.
         */
        setLegendGroup(
          /**
           * The legendGroup to set
           */
          oLegendGroup: sap.viz.ui5.types.Legend
        ): sap.viz.ui5.Column;
        /**
         * Sets the aggregated {@link #getPlotArea plotArea}.
         */
        setPlotArea(
          /**
           * The plotArea to set
           */
          oPlotArea: sap.viz.ui5.types.VerticalBar
        ): sap.viz.ui5.Column;
        /**
         * Sets the aggregated {@link #getTitle title}.
         */
        setTitle(
          /**
           * The title to set
           */
          oTitle: sap.viz.ui5.types.Title
        ): sap.viz.ui5.Column;
        /**
         * Sets the aggregated {@link #getToolTip toolTip}.
         */
        setToolTip(
          /**
           * The toolTip to set
           */
          oToolTip: sap.viz.ui5.types.Tooltip
        ): sap.viz.ui5.Column;
        /**
         * Sets the aggregated {@link #getXAxis xAxis}.
         */
        setXAxis(
          /**
           * The xAxis to set
           */
          oXAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.Column;
        /**
         * Sets the aggregated {@link #getXyContainer xyContainer}.
         */
        setXyContainer(
          /**
           * The xyContainer to set
           */
          oXyContainer: sap.viz.ui5.types.XYContainer
        ): sap.viz.ui5.Column;
        /**
         * Sets the aggregated {@link #getYAxis yAxis}.
         */
        setYAxis(
          /**
           * The yAxis to set
           */
          oYAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.Column;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Column`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Column` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Column` itself
           */
          oListener?: object
        ): sap.viz.ui5.Column;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Column`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Column` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Column` itself
           */
          oListener?: object
        ): sap.viz.ui5.Column;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Column`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Column` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Column` itself
           */
          oListener?: object
        ): sap.viz.ui5.Column;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Column`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Column` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Column` itself
           */
          oListener?: object
        ): sap.viz.ui5.Column;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Column`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Column` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Column` itself
           */
          oListener?: object
        ): sap.viz.ui5.Column;
      }
      /**
       * @SINCE 1.7.2
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       *
       * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
       * VizFrame}**(`new sap.viz.ui5.controls.VizFrame({'vizType': 'combination'})`) **control to benefit from
       * new charting enhancements and timely support. **
       *
       * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
       * make sure you evaluate it thoroughly before migration.
       * @EXPERIMENTAL (since 1.7.2)
       *
       * Chart sap.viz.ui5.Combination
       */
      class Combination extends sap.viz.ui5.core.BaseChart {
        /**
         * Constructor for a new sap.viz.ui5.Combination
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: CombinationOpts
        );

        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Combination`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Combination` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Combination` itself
           */
          oListener?: object
        ): sap.viz.ui5.Combination;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Combination`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Combination` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Combination` itself
           */
          oListener?: object
        ): sap.viz.ui5.Combination;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Combination`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Combination` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Combination` itself
           */
          oListener?: object
        ): sap.viz.ui5.Combination;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Combination`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Combination` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Combination` itself
           */
          oListener?: object
        ): sap.viz.ui5.Combination;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Combination`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Combination` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Combination` itself
           */
          oListener?: object
        ): sap.viz.ui5.Combination;
        /**
         * Destroys the background in the aggregation {@link #getBackground background}.
         */
        destroyBackground(): sap.viz.ui5.Combination;
        /**
         * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
         */
        destroyDataLabel(): sap.viz.ui5.Combination;
        /**
         * Destroys the general in the aggregation {@link #getGeneral general}.
         */
        destroyGeneral(): sap.viz.ui5.Combination;
        /**
         * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
         */
        destroyInteraction(): sap.viz.ui5.Combination;
        /**
         * Destroys the legend in the aggregation {@link #getLegend legend}.
         */
        destroyLegend(): sap.viz.ui5.Combination;
        /**
         * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
         */
        destroyLegendGroup(): sap.viz.ui5.Combination;
        /**
         * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
         */
        destroyPlotArea(): sap.viz.ui5.Combination;
        /**
         * Destroys the title in the aggregation {@link #getTitle title}.
         */
        destroyTitle(): sap.viz.ui5.Combination;
        /**
         * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
         */
        destroyToolTip(): sap.viz.ui5.Combination;
        /**
         * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
         */
        destroyXAxis(): sap.viz.ui5.Combination;
        /**
         * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
         */
        destroyXyContainer(): sap.viz.ui5.Combination;
        /**
         * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
         */
        destroyYAxis(): sap.viz.ui5.Combination;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Combination`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Combination;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Combination`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Combination;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.Combination`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Combination;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.Combination`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Combination;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Combination`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Combination;
        /**
         * Creates a new subclass of class sap.viz.ui5.Combination with name `sClassName` and enriches it with the
         * information contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Combination;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Combination;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Combination;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Combination;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Combination;
        /**
         * Gets content of aggregation {@link #getBackground background}.
         *
         * Module sap.viz.modules.background
         */
        getBackground(): sap.viz.ui5.types.Background;
        /**
         * Gets content of aggregation {@link #getDataLabel dataLabel}.
         *
         * Module sap.viz.modules.datalabel
         */
        getDataLabel(): sap.viz.ui5.types.Datalabel;
        /**
         * Gets content of aggregation {@link #getGeneral general}.
         *
         * Module sap.viz.modules.rootContainer
         */
        getGeneral(): sap.viz.ui5.types.RootContainer;
        /**
         * Gets content of aggregation {@link #getInteraction interaction}.
         *
         * Module sap.viz.modules.controller.interaction
         */
        getInteraction(): sap.viz.ui5.types.controller.Interaction;
        /**
         * Gets content of aggregation {@link #getLegend legend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getLegendGroup legendGroup}.
         *
         * Module sap.viz.modules.legend
         */
        getLegendGroup(): sap.viz.ui5.types.Legend;
        /**
         * Returns a metadata object for class sap.viz.ui5.Combination.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets content of aggregation {@link #getPlotArea plotArea}.
         *
         * Module sap.viz.modules.combination
         */
        getPlotArea(): sap.viz.ui5.types.Combination;
        /**
         * Gets content of aggregation {@link #getTitle title}.
         *
         * Module sap.viz.modules.title
         */
        getTitle(): sap.viz.ui5.types.Title;
        /**
         * Gets content of aggregation {@link #getToolTip toolTip}.
         *
         * Module sap.viz.chart.elements.Tooltip
         */
        getToolTip(): sap.viz.ui5.types.Tooltip;
        /**
         * Gets content of aggregation {@link #getXAxis xAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getXAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getXyContainer xyContainer}.
         *
         * Module sap.viz.modules.xycontainer
         */
        getXyContainer(): sap.viz.ui5.types.XYContainer;
        /**
         * Gets content of aggregation {@link #getYAxis yAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis(): sap.viz.ui5.types.Axis;
        /**
         * Sets the aggregated {@link #getBackground background}.
         */
        setBackground(
          /**
           * The background to set
           */
          oBackground: sap.viz.ui5.types.Background
        ): sap.viz.ui5.Combination;
        /**
         * Sets the aggregated {@link #getDataLabel dataLabel}.
         */
        setDataLabel(
          /**
           * The dataLabel to set
           */
          oDataLabel: sap.viz.ui5.types.Datalabel
        ): sap.viz.ui5.Combination;
        /**
         * Sets the aggregated {@link #getGeneral general}.
         */
        setGeneral(
          /**
           * The general to set
           */
          oGeneral: sap.viz.ui5.types.RootContainer
        ): sap.viz.ui5.Combination;
        /**
         * Sets the aggregated {@link #getInteraction interaction}.
         */
        setInteraction(
          /**
           * The interaction to set
           */
          oInteraction: sap.viz.ui5.types.controller.Interaction
        ): sap.viz.ui5.Combination;
        /**
         * Sets the aggregated {@link #getLegend legend}.
         */
        setLegend(
          /**
           * The legend to set
           */
          oLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.Combination;
        /**
         * Sets the aggregated {@link #getLegendGroup legendGroup}.
         */
        setLegendGroup(
          /**
           * The legendGroup to set
           */
          oLegendGroup: sap.viz.ui5.types.Legend
        ): sap.viz.ui5.Combination;
        /**
         * Sets the aggregated {@link #getPlotArea plotArea}.
         */
        setPlotArea(
          /**
           * The plotArea to set
           */
          oPlotArea: sap.viz.ui5.types.Combination
        ): sap.viz.ui5.Combination;
        /**
         * Sets the aggregated {@link #getTitle title}.
         */
        setTitle(
          /**
           * The title to set
           */
          oTitle: sap.viz.ui5.types.Title
        ): sap.viz.ui5.Combination;
        /**
         * Sets the aggregated {@link #getToolTip toolTip}.
         */
        setToolTip(
          /**
           * The toolTip to set
           */
          oToolTip: sap.viz.ui5.types.Tooltip
        ): sap.viz.ui5.Combination;
        /**
         * Sets the aggregated {@link #getXAxis xAxis}.
         */
        setXAxis(
          /**
           * The xAxis to set
           */
          oXAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.Combination;
        /**
         * Sets the aggregated {@link #getXyContainer xyContainer}.
         */
        setXyContainer(
          /**
           * The xyContainer to set
           */
          oXyContainer: sap.viz.ui5.types.XYContainer
        ): sap.viz.ui5.Combination;
        /**
         * Sets the aggregated {@link #getYAxis yAxis}.
         */
        setYAxis(
          /**
           * The yAxis to set
           */
          oYAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.Combination;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Combination`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Combination` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Combination` itself
           */
          oListener?: object
        ): sap.viz.ui5.Combination;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Combination`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Combination` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Combination` itself
           */
          oListener?: object
        ): sap.viz.ui5.Combination;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Combination`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Combination` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Combination` itself
           */
          oListener?: object
        ): sap.viz.ui5.Combination;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Combination`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Combination` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Combination` itself
           */
          oListener?: object
        ): sap.viz.ui5.Combination;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Combination`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Combination` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Combination` itself
           */
          oListener?: object
        ): sap.viz.ui5.Combination;
      }
      /**
       * @SINCE 1.7.2
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       *
       * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
       * VizFrame}**(`new sap.viz.ui5.controls.VizFrame({'vizType': 'donut'})`) **control to benefit from new
       * charting enhancements and timely support. **
       *
       * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
       * make sure you evaluate it thoroughly before migration.
       * @EXPERIMENTAL (since 1.7.2)
       *
       * Chart sap.viz.ui5.Donut
       */
      class Donut extends sap.viz.ui5.core.BaseChart {
        /**
         * Constructor for a new sap.viz.ui5.Donut
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: DonutOpts
        );

        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Donut`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Donut` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Donut` itself
           */
          oListener?: object
        ): sap.viz.ui5.Donut;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Donut`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Donut` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Donut` itself
           */
          oListener?: object
        ): sap.viz.ui5.Donut;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Donut`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Donut` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Donut` itself
           */
          oListener?: object
        ): sap.viz.ui5.Donut;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Donut`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Donut` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Donut` itself
           */
          oListener?: object
        ): sap.viz.ui5.Donut;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Donut`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Donut` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Donut` itself
           */
          oListener?: object
        ): sap.viz.ui5.Donut;
        /**
         * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
         */
        destroyDataLabel(): sap.viz.ui5.Donut;
        /**
         * Destroys the dataTransform in the aggregation {@link #getDataTransform dataTransform}.
         */
        destroyDataTransform(): sap.viz.ui5.Donut;
        /**
         * Destroys the general in the aggregation {@link #getGeneral general}.
         */
        destroyGeneral(): sap.viz.ui5.Donut;
        /**
         * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
         */
        destroyInteraction(): sap.viz.ui5.Donut;
        /**
         * Destroys the legend in the aggregation {@link #getLegend legend}.
         */
        destroyLegend(): sap.viz.ui5.Donut;
        /**
         * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
         */
        destroyLegendGroup(): sap.viz.ui5.Donut;
        /**
         * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
         */
        destroyPlotArea(): sap.viz.ui5.Donut;
        /**
         * Destroys the title in the aggregation {@link #getTitle title}.
         */
        destroyTitle(): sap.viz.ui5.Donut;
        /**
         * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
         */
        destroyToolTip(): sap.viz.ui5.Donut;
        /**
         * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
         */
        destroyXyContainer(): sap.viz.ui5.Donut;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Donut`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Donut;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Donut`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Donut;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.Donut`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Donut;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.Donut`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Donut;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Donut`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Donut;
        /**
         * Creates a new subclass of class sap.viz.ui5.Donut with name `sClassName` and enriches it with the information
         * contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Donut;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Donut;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Donut;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Donut;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Donut;
        /**
         * Gets content of aggregation {@link #getDataLabel dataLabel}.
         *
         * Module sap.viz.modules.datalabel
         */
        getDataLabel(): sap.viz.ui5.types.Datalabel;
        /**
         * Gets content of aggregation {@link #getDataTransform dataTransform}.
         *
         * Module sap.viz.modules.datatransform
         */
        getDataTransform(): sap.viz.ui5.types.Datatransform;
        /**
         * Gets content of aggregation {@link #getGeneral general}.
         *
         * Module sap.viz.modules.rootContainer
         */
        getGeneral(): sap.viz.ui5.types.RootContainer;
        /**
         * Gets content of aggregation {@link #getInteraction interaction}.
         *
         * Module sap.viz.modules.controller.interaction
         */
        getInteraction(): sap.viz.ui5.types.controller.Interaction;
        /**
         * Gets content of aggregation {@link #getLegend legend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getLegendGroup legendGroup}.
         *
         * Module sap.viz.modules.legend
         */
        getLegendGroup(): sap.viz.ui5.types.Legend;
        /**
         * Returns a metadata object for class sap.viz.ui5.Donut.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets content of aggregation {@link #getPlotArea plotArea}.
         *
         * Module sap.viz.modules.pie
         */
        getPlotArea(): sap.viz.ui5.types.Pie;
        /**
         * Gets content of aggregation {@link #getTitle title}.
         *
         * Module sap.viz.modules.title
         */
        getTitle(): sap.viz.ui5.types.Title;
        /**
         * Gets content of aggregation {@link #getToolTip toolTip}.
         *
         * Module sap.viz.chart.elements.Tooltip
         */
        getToolTip(): sap.viz.ui5.types.Tooltip;
        /**
         * Gets content of aggregation {@link #getXyContainer xyContainer}.
         *
         * Module sap.viz.modules.xycontainer
         */
        getXyContainer(): sap.viz.ui5.types.XYContainer;
        /**
         * Sets the aggregated {@link #getDataLabel dataLabel}.
         */
        setDataLabel(
          /**
           * The dataLabel to set
           */
          oDataLabel: sap.viz.ui5.types.Datalabel
        ): sap.viz.ui5.Donut;
        /**
         * Sets the aggregated {@link #getDataTransform dataTransform}.
         */
        setDataTransform(
          /**
           * The dataTransform to set
           */
          oDataTransform: sap.viz.ui5.types.Datatransform
        ): sap.viz.ui5.Donut;
        /**
         * Sets the aggregated {@link #getGeneral general}.
         */
        setGeneral(
          /**
           * The general to set
           */
          oGeneral: sap.viz.ui5.types.RootContainer
        ): sap.viz.ui5.Donut;
        /**
         * Sets the aggregated {@link #getInteraction interaction}.
         */
        setInteraction(
          /**
           * The interaction to set
           */
          oInteraction: sap.viz.ui5.types.controller.Interaction
        ): sap.viz.ui5.Donut;
        /**
         * Sets the aggregated {@link #getLegend legend}.
         */
        setLegend(
          /**
           * The legend to set
           */
          oLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.Donut;
        /**
         * Sets the aggregated {@link #getLegendGroup legendGroup}.
         */
        setLegendGroup(
          /**
           * The legendGroup to set
           */
          oLegendGroup: sap.viz.ui5.types.Legend
        ): sap.viz.ui5.Donut;
        /**
         * Sets the aggregated {@link #getPlotArea plotArea}.
         */
        setPlotArea(
          /**
           * The plotArea to set
           */
          oPlotArea: sap.viz.ui5.types.Pie
        ): sap.viz.ui5.Donut;
        /**
         * Sets the aggregated {@link #getTitle title}.
         */
        setTitle(
          /**
           * The title to set
           */
          oTitle: sap.viz.ui5.types.Title
        ): sap.viz.ui5.Donut;
        /**
         * Sets the aggregated {@link #getToolTip toolTip}.
         */
        setToolTip(
          /**
           * The toolTip to set
           */
          oToolTip: sap.viz.ui5.types.Tooltip
        ): sap.viz.ui5.Donut;
        /**
         * Sets the aggregated {@link #getXyContainer xyContainer}.
         */
        setXyContainer(
          /**
           * The xyContainer to set
           */
          oXyContainer: sap.viz.ui5.types.XYContainer
        ): sap.viz.ui5.Donut;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Donut`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Donut` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Donut` itself
           */
          oListener?: object
        ): sap.viz.ui5.Donut;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Donut`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Donut` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Donut` itself
           */
          oListener?: object
        ): sap.viz.ui5.Donut;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Donut`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Donut` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Donut` itself
           */
          oListener?: object
        ): sap.viz.ui5.Donut;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Donut`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Donut` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Donut` itself
           */
          oListener?: object
        ): sap.viz.ui5.Donut;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Donut`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Donut` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Donut` itself
           */
          oListener?: object
        ): sap.viz.ui5.Donut;
      }
      /**
       * @SINCE 1.7.2
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       *
       * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
       * VizFrame}**(`new sap.viz.ui5.controls.VizFrame({'vizType': 'dual_bar'})`) **control to benefit from new
       * charting enhancements and timely support. **
       *
       * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
       * make sure you evaluate it thoroughly before migration.
       * @EXPERIMENTAL (since 1.7.2)
       *
       * Chart sap.viz.ui5.DualBar
       */
      class DualBar extends sap.viz.ui5.core.BaseChart {
        /**
         * Constructor for a new sap.viz.ui5.DualBar
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: DualBarOpts
        );

        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.DualBar`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualBar` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualBar` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualBar;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.DualBar`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualBar` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualBar` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualBar;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.DualBar`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualBar` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualBar` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualBar;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.DualBar`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualBar` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualBar` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualBar;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.DualBar`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualBar` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualBar` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualBar;
        /**
         * Destroys the background in the aggregation {@link #getBackground background}.
         */
        destroyBackground(): sap.viz.ui5.DualBar;
        /**
         * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
         */
        destroyDataLabel(): sap.viz.ui5.DualBar;
        /**
         * Destroys the general in the aggregation {@link #getGeneral general}.
         */
        destroyGeneral(): sap.viz.ui5.DualBar;
        /**
         * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
         */
        destroyInteraction(): sap.viz.ui5.DualBar;
        /**
         * Destroys the legend in the aggregation {@link #getLegend legend}.
         */
        destroyLegend(): sap.viz.ui5.DualBar;
        /**
         * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
         */
        destroyLegendGroup(): sap.viz.ui5.DualBar;
        /**
         * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
         */
        destroyPlotArea(): sap.viz.ui5.DualBar;
        /**
         * Destroys the title in the aggregation {@link #getTitle title}.
         */
        destroyTitle(): sap.viz.ui5.DualBar;
        /**
         * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
         */
        destroyToolTip(): sap.viz.ui5.DualBar;
        /**
         * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
         */
        destroyXAxis(): sap.viz.ui5.DualBar;
        /**
         * Destroys the xAxis2 in the aggregation {@link #getXAxis2 xAxis2}.
         */
        destroyXAxis2(): sap.viz.ui5.DualBar;
        /**
         * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
         */
        destroyXyContainer(): sap.viz.ui5.DualBar;
        /**
         * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
         */
        destroyYAxis(): sap.viz.ui5.DualBar;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.DualBar`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualBar;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.DualBar`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualBar;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.DualBar`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualBar;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.DualBar`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualBar;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.DualBar`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualBar;
        /**
         * Creates a new subclass of class sap.viz.ui5.DualBar with name `sClassName` and enriches it with the information
         * contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualBar;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualBar;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualBar;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualBar;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualBar;
        /**
         * Gets content of aggregation {@link #getBackground background}.
         *
         * Module sap.viz.modules.background
         */
        getBackground(): sap.viz.ui5.types.Background;
        /**
         * Gets content of aggregation {@link #getDataLabel dataLabel}.
         *
         * Module sap.viz.modules.datalabel
         */
        getDataLabel(): sap.viz.ui5.types.Datalabel;
        /**
         * Gets content of aggregation {@link #getGeneral general}.
         *
         * Module sap.viz.modules.rootContainer
         */
        getGeneral(): sap.viz.ui5.types.RootContainer;
        /**
         * Gets content of aggregation {@link #getInteraction interaction}.
         *
         * Module sap.viz.modules.controller.interaction
         */
        getInteraction(): sap.viz.ui5.types.controller.Interaction;
        /**
         * Gets content of aggregation {@link #getLegend legend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getLegendGroup legendGroup}.
         *
         * Module sap.viz.modules.legend
         */
        getLegendGroup(): sap.viz.ui5.types.Legend;
        /**
         * Returns a metadata object for class sap.viz.ui5.DualBar.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets content of aggregation {@link #getPlotArea plotArea}.
         *
         * Module sap.viz.modules.bar
         */
        getPlotArea(): sap.viz.ui5.types.Bar;
        /**
         * Gets content of aggregation {@link #getTitle title}.
         *
         * Module sap.viz.modules.title
         */
        getTitle(): sap.viz.ui5.types.Title;
        /**
         * Gets content of aggregation {@link #getToolTip toolTip}.
         *
         * Module sap.viz.chart.elements.Tooltip
         */
        getToolTip(): sap.viz.ui5.types.Tooltip;
        /**
         * Gets content of aggregation {@link #getXAxis xAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getXAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getXAxis2 xAxis2}.
         *
         * Module sap.viz.modules.axis
         */
        getXAxis2(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getXyContainer xyContainer}.
         *
         * Module sap.viz.modules.xycontainer
         */
        getXyContainer(): sap.viz.ui5.types.XYContainer;
        /**
         * Gets content of aggregation {@link #getYAxis yAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis(): sap.viz.ui5.types.Axis;
        /**
         * Sets the aggregated {@link #getBackground background}.
         */
        setBackground(
          /**
           * The background to set
           */
          oBackground: sap.viz.ui5.types.Background
        ): sap.viz.ui5.DualBar;
        /**
         * Sets the aggregated {@link #getDataLabel dataLabel}.
         */
        setDataLabel(
          /**
           * The dataLabel to set
           */
          oDataLabel: sap.viz.ui5.types.Datalabel
        ): sap.viz.ui5.DualBar;
        /**
         * Sets the aggregated {@link #getGeneral general}.
         */
        setGeneral(
          /**
           * The general to set
           */
          oGeneral: sap.viz.ui5.types.RootContainer
        ): sap.viz.ui5.DualBar;
        /**
         * Sets the aggregated {@link #getInteraction interaction}.
         */
        setInteraction(
          /**
           * The interaction to set
           */
          oInteraction: sap.viz.ui5.types.controller.Interaction
        ): sap.viz.ui5.DualBar;
        /**
         * Sets the aggregated {@link #getLegend legend}.
         */
        setLegend(
          /**
           * The legend to set
           */
          oLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.DualBar;
        /**
         * Sets the aggregated {@link #getLegendGroup legendGroup}.
         */
        setLegendGroup(
          /**
           * The legendGroup to set
           */
          oLegendGroup: sap.viz.ui5.types.Legend
        ): sap.viz.ui5.DualBar;
        /**
         * Sets the aggregated {@link #getPlotArea plotArea}.
         */
        setPlotArea(
          /**
           * The plotArea to set
           */
          oPlotArea: sap.viz.ui5.types.Bar
        ): sap.viz.ui5.DualBar;
        /**
         * Sets the aggregated {@link #getTitle title}.
         */
        setTitle(
          /**
           * The title to set
           */
          oTitle: sap.viz.ui5.types.Title
        ): sap.viz.ui5.DualBar;
        /**
         * Sets the aggregated {@link #getToolTip toolTip}.
         */
        setToolTip(
          /**
           * The toolTip to set
           */
          oToolTip: sap.viz.ui5.types.Tooltip
        ): sap.viz.ui5.DualBar;
        /**
         * Sets the aggregated {@link #getXAxis xAxis}.
         */
        setXAxis(
          /**
           * The xAxis to set
           */
          oXAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.DualBar;
        /**
         * Sets the aggregated {@link #getXAxis2 xAxis2}.
         */
        setXAxis2(
          /**
           * The xAxis2 to set
           */
          oXAxis2: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.DualBar;
        /**
         * Sets the aggregated {@link #getXyContainer xyContainer}.
         */
        setXyContainer(
          /**
           * The xyContainer to set
           */
          oXyContainer: sap.viz.ui5.types.XYContainer
        ): sap.viz.ui5.DualBar;
        /**
         * Sets the aggregated {@link #getYAxis yAxis}.
         */
        setYAxis(
          /**
           * The yAxis to set
           */
          oYAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.DualBar;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.DualBar`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualBar` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualBar` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualBar;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.DualBar`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualBar` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualBar` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualBar;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.DualBar`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualBar` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualBar` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualBar;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.DualBar`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualBar` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualBar` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualBar;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.DualBar`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualBar` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualBar` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualBar;
      }
      /**
       * @SINCE 1.7.2
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       *
       * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
       * VizFrame}**(`new sap.viz.ui5.controls.VizFrame({'vizType': 'dual_column'})`) **control to benefit from
       * new charting enhancements and timely support. **
       *
       * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
       * make sure you evaluate it thoroughly before migration.
       * @EXPERIMENTAL (since 1.7.2)
       *
       * Chart sap.viz.ui5.DualColumn
       */
      class DualColumn extends sap.viz.ui5.core.BaseChart {
        /**
         * Constructor for a new sap.viz.ui5.DualColumn
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: DualColumnOpts
        );

        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.DualColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualColumn` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualColumn;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.DualColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualColumn` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualColumn;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.DualColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualColumn` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualColumn;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.DualColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualColumn` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualColumn;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.DualColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualColumn` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualColumn;
        /**
         * Destroys the background in the aggregation {@link #getBackground background}.
         */
        destroyBackground(): sap.viz.ui5.DualColumn;
        /**
         * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
         */
        destroyDataLabel(): sap.viz.ui5.DualColumn;
        /**
         * Destroys the general in the aggregation {@link #getGeneral general}.
         */
        destroyGeneral(): sap.viz.ui5.DualColumn;
        /**
         * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
         */
        destroyInteraction(): sap.viz.ui5.DualColumn;
        /**
         * Destroys the legend in the aggregation {@link #getLegend legend}.
         */
        destroyLegend(): sap.viz.ui5.DualColumn;
        /**
         * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
         */
        destroyLegendGroup(): sap.viz.ui5.DualColumn;
        /**
         * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
         */
        destroyPlotArea(): sap.viz.ui5.DualColumn;
        /**
         * Destroys the title in the aggregation {@link #getTitle title}.
         */
        destroyTitle(): sap.viz.ui5.DualColumn;
        /**
         * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
         */
        destroyToolTip(): sap.viz.ui5.DualColumn;
        /**
         * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
         */
        destroyXAxis(): sap.viz.ui5.DualColumn;
        /**
         * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
         */
        destroyXyContainer(): sap.viz.ui5.DualColumn;
        /**
         * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
         */
        destroyYAxis(): sap.viz.ui5.DualColumn;
        /**
         * Destroys the yAxis2 in the aggregation {@link #getYAxis2 yAxis2}.
         */
        destroyYAxis2(): sap.viz.ui5.DualColumn;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.DualColumn`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualColumn;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.DualColumn`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualColumn;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.DualColumn`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualColumn;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.DualColumn`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualColumn;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.DualColumn`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualColumn;
        /**
         * Creates a new subclass of class sap.viz.ui5.DualColumn with name `sClassName` and enriches it with the
         * information contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualColumn;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualColumn;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualColumn;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualColumn;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualColumn;
        /**
         * Gets content of aggregation {@link #getBackground background}.
         *
         * Module sap.viz.modules.background
         */
        getBackground(): sap.viz.ui5.types.Background;
        /**
         * Gets content of aggregation {@link #getDataLabel dataLabel}.
         *
         * Module sap.viz.modules.datalabel
         */
        getDataLabel(): sap.viz.ui5.types.Datalabel;
        /**
         * Gets content of aggregation {@link #getGeneral general}.
         *
         * Module sap.viz.modules.rootContainer
         */
        getGeneral(): sap.viz.ui5.types.RootContainer;
        /**
         * Gets content of aggregation {@link #getInteraction interaction}.
         *
         * Module sap.viz.modules.controller.interaction
         */
        getInteraction(): sap.viz.ui5.types.controller.Interaction;
        /**
         * Gets content of aggregation {@link #getLegend legend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getLegendGroup legendGroup}.
         *
         * Module sap.viz.modules.legend
         */
        getLegendGroup(): sap.viz.ui5.types.Legend;
        /**
         * Returns a metadata object for class sap.viz.ui5.DualColumn.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets content of aggregation {@link #getPlotArea plotArea}.
         *
         * Module sap.viz.modules.verticalbar
         */
        getPlotArea(): sap.viz.ui5.types.VerticalBar;
        /**
         * Gets content of aggregation {@link #getTitle title}.
         *
         * Module sap.viz.modules.title
         */
        getTitle(): sap.viz.ui5.types.Title;
        /**
         * Gets content of aggregation {@link #getToolTip toolTip}.
         *
         * Module sap.viz.chart.elements.Tooltip
         */
        getToolTip(): sap.viz.ui5.types.Tooltip;
        /**
         * Gets content of aggregation {@link #getXAxis xAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getXAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getXyContainer xyContainer}.
         *
         * Module sap.viz.modules.xycontainer
         */
        getXyContainer(): sap.viz.ui5.types.XYContainer;
        /**
         * Gets content of aggregation {@link #getYAxis yAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getYAxis2 yAxis2}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis2(): sap.viz.ui5.types.Axis;
        /**
         * Sets the aggregated {@link #getBackground background}.
         */
        setBackground(
          /**
           * The background to set
           */
          oBackground: sap.viz.ui5.types.Background
        ): sap.viz.ui5.DualColumn;
        /**
         * Sets the aggregated {@link #getDataLabel dataLabel}.
         */
        setDataLabel(
          /**
           * The dataLabel to set
           */
          oDataLabel: sap.viz.ui5.types.Datalabel
        ): sap.viz.ui5.DualColumn;
        /**
         * Sets the aggregated {@link #getGeneral general}.
         */
        setGeneral(
          /**
           * The general to set
           */
          oGeneral: sap.viz.ui5.types.RootContainer
        ): sap.viz.ui5.DualColumn;
        /**
         * Sets the aggregated {@link #getInteraction interaction}.
         */
        setInteraction(
          /**
           * The interaction to set
           */
          oInteraction: sap.viz.ui5.types.controller.Interaction
        ): sap.viz.ui5.DualColumn;
        /**
         * Sets the aggregated {@link #getLegend legend}.
         */
        setLegend(
          /**
           * The legend to set
           */
          oLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.DualColumn;
        /**
         * Sets the aggregated {@link #getLegendGroup legendGroup}.
         */
        setLegendGroup(
          /**
           * The legendGroup to set
           */
          oLegendGroup: sap.viz.ui5.types.Legend
        ): sap.viz.ui5.DualColumn;
        /**
         * Sets the aggregated {@link #getPlotArea plotArea}.
         */
        setPlotArea(
          /**
           * The plotArea to set
           */
          oPlotArea: sap.viz.ui5.types.VerticalBar
        ): sap.viz.ui5.DualColumn;
        /**
         * Sets the aggregated {@link #getTitle title}.
         */
        setTitle(
          /**
           * The title to set
           */
          oTitle: sap.viz.ui5.types.Title
        ): sap.viz.ui5.DualColumn;
        /**
         * Sets the aggregated {@link #getToolTip toolTip}.
         */
        setToolTip(
          /**
           * The toolTip to set
           */
          oToolTip: sap.viz.ui5.types.Tooltip
        ): sap.viz.ui5.DualColumn;
        /**
         * Sets the aggregated {@link #getXAxis xAxis}.
         */
        setXAxis(
          /**
           * The xAxis to set
           */
          oXAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.DualColumn;
        /**
         * Sets the aggregated {@link #getXyContainer xyContainer}.
         */
        setXyContainer(
          /**
           * The xyContainer to set
           */
          oXyContainer: sap.viz.ui5.types.XYContainer
        ): sap.viz.ui5.DualColumn;
        /**
         * Sets the aggregated {@link #getYAxis yAxis}.
         */
        setYAxis(
          /**
           * The yAxis to set
           */
          oYAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.DualColumn;
        /**
         * Sets the aggregated {@link #getYAxis2 yAxis2}.
         */
        setYAxis2(
          /**
           * The yAxis2 to set
           */
          oYAxis2: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.DualColumn;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.DualColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualColumn` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualColumn;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.DualColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualColumn` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualColumn;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.DualColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualColumn` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualColumn;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.DualColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualColumn` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualColumn;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.DualColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualColumn` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualColumn;
      }
      /**
       * @SINCE 1.7.2
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       * @EXPERIMENTAL (since 1.7.2)
       *
       * Chart sap.viz.ui5.DualCombination
       */
      class DualCombination extends sap.viz.ui5.core.BaseChart {
        /**
         * Constructor for a new sap.viz.ui5.DualCombination
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: DualCombinationOpts
        );

        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.DualCombination`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualCombination` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualCombination` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualCombination;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.DualCombination`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualCombination` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualCombination` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualCombination;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.DualCombination`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualCombination` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualCombination` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualCombination;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.DualCombination`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualCombination` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualCombination` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualCombination;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.DualCombination`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualCombination` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualCombination` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualCombination;
        /**
         * Destroys the background in the aggregation {@link #getBackground background}.
         */
        destroyBackground(): sap.viz.ui5.DualCombination;
        /**
         * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
         */
        destroyDataLabel(): sap.viz.ui5.DualCombination;
        /**
         * Destroys the general in the aggregation {@link #getGeneral general}.
         */
        destroyGeneral(): sap.viz.ui5.DualCombination;
        /**
         * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
         */
        destroyInteraction(): sap.viz.ui5.DualCombination;
        /**
         * Destroys the legend in the aggregation {@link #getLegend legend}.
         */
        destroyLegend(): sap.viz.ui5.DualCombination;
        /**
         * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
         */
        destroyLegendGroup(): sap.viz.ui5.DualCombination;
        /**
         * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
         */
        destroyPlotArea(): sap.viz.ui5.DualCombination;
        /**
         * Destroys the title in the aggregation {@link #getTitle title}.
         */
        destroyTitle(): sap.viz.ui5.DualCombination;
        /**
         * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
         */
        destroyToolTip(): sap.viz.ui5.DualCombination;
        /**
         * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
         */
        destroyXAxis(): sap.viz.ui5.DualCombination;
        /**
         * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
         */
        destroyXyContainer(): sap.viz.ui5.DualCombination;
        /**
         * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
         */
        destroyYAxis(): sap.viz.ui5.DualCombination;
        /**
         * Destroys the yAxis2 in the aggregation {@link #getYAxis2 yAxis2}.
         */
        destroyYAxis2(): sap.viz.ui5.DualCombination;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.DualCombination`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualCombination;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.DualCombination`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualCombination;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.DualCombination`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualCombination;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.DualCombination`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualCombination;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.DualCombination`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualCombination;
        /**
         * Creates a new subclass of class sap.viz.ui5.DualCombination with name `sClassName` and enriches it with
         * the information contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualCombination;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualCombination;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualCombination;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualCombination;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualCombination;
        /**
         * Gets content of aggregation {@link #getBackground background}.
         *
         * Module sap.viz.modules.background
         */
        getBackground(): sap.viz.ui5.types.Background;
        /**
         * Gets content of aggregation {@link #getDataLabel dataLabel}.
         *
         * Module sap.viz.modules.datalabel
         */
        getDataLabel(): sap.viz.ui5.types.Datalabel;
        /**
         * Gets content of aggregation {@link #getGeneral general}.
         *
         * Module sap.viz.modules.rootContainer
         */
        getGeneral(): sap.viz.ui5.types.RootContainer;
        /**
         * Gets content of aggregation {@link #getInteraction interaction}.
         *
         * Module sap.viz.modules.controller.interaction
         */
        getInteraction(): sap.viz.ui5.types.controller.Interaction;
        /**
         * Gets content of aggregation {@link #getLegend legend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getLegendGroup legendGroup}.
         *
         * Module sap.viz.modules.legend
         */
        getLegendGroup(): sap.viz.ui5.types.Legend;
        /**
         * Returns a metadata object for class sap.viz.ui5.DualCombination.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets content of aggregation {@link #getPlotArea plotArea}.
         *
         * Module sap.viz.modules.combination
         */
        getPlotArea(): sap.viz.ui5.types.Combination;
        /**
         * Gets content of aggregation {@link #getTitle title}.
         *
         * Module sap.viz.modules.title
         */
        getTitle(): sap.viz.ui5.types.Title;
        /**
         * Gets content of aggregation {@link #getToolTip toolTip}.
         *
         * Module sap.viz.chart.elements.Tooltip
         */
        getToolTip(): sap.viz.ui5.types.Tooltip;
        /**
         * Gets content of aggregation {@link #getXAxis xAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getXAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getXyContainer xyContainer}.
         *
         * Module sap.viz.modules.xycontainer
         */
        getXyContainer(): sap.viz.ui5.types.XYContainer;
        /**
         * Gets content of aggregation {@link #getYAxis yAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getYAxis2 yAxis2}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis2(): sap.viz.ui5.types.Axis;
        /**
         * Sets the aggregated {@link #getBackground background}.
         */
        setBackground(
          /**
           * The background to set
           */
          oBackground: sap.viz.ui5.types.Background
        ): sap.viz.ui5.DualCombination;
        /**
         * Sets the aggregated {@link #getDataLabel dataLabel}.
         */
        setDataLabel(
          /**
           * The dataLabel to set
           */
          oDataLabel: sap.viz.ui5.types.Datalabel
        ): sap.viz.ui5.DualCombination;
        /**
         * Sets the aggregated {@link #getGeneral general}.
         */
        setGeneral(
          /**
           * The general to set
           */
          oGeneral: sap.viz.ui5.types.RootContainer
        ): sap.viz.ui5.DualCombination;
        /**
         * Sets the aggregated {@link #getInteraction interaction}.
         */
        setInteraction(
          /**
           * The interaction to set
           */
          oInteraction: sap.viz.ui5.types.controller.Interaction
        ): sap.viz.ui5.DualCombination;
        /**
         * Sets the aggregated {@link #getLegend legend}.
         */
        setLegend(
          /**
           * The legend to set
           */
          oLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.DualCombination;
        /**
         * Sets the aggregated {@link #getLegendGroup legendGroup}.
         */
        setLegendGroup(
          /**
           * The legendGroup to set
           */
          oLegendGroup: sap.viz.ui5.types.Legend
        ): sap.viz.ui5.DualCombination;
        /**
         * Sets the aggregated {@link #getPlotArea plotArea}.
         */
        setPlotArea(
          /**
           * The plotArea to set
           */
          oPlotArea: sap.viz.ui5.types.Combination
        ): sap.viz.ui5.DualCombination;
        /**
         * Sets the aggregated {@link #getTitle title}.
         */
        setTitle(
          /**
           * The title to set
           */
          oTitle: sap.viz.ui5.types.Title
        ): sap.viz.ui5.DualCombination;
        /**
         * Sets the aggregated {@link #getToolTip toolTip}.
         */
        setToolTip(
          /**
           * The toolTip to set
           */
          oToolTip: sap.viz.ui5.types.Tooltip
        ): sap.viz.ui5.DualCombination;
        /**
         * Sets the aggregated {@link #getXAxis xAxis}.
         */
        setXAxis(
          /**
           * The xAxis to set
           */
          oXAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.DualCombination;
        /**
         * Sets the aggregated {@link #getXyContainer xyContainer}.
         */
        setXyContainer(
          /**
           * The xyContainer to set
           */
          oXyContainer: sap.viz.ui5.types.XYContainer
        ): sap.viz.ui5.DualCombination;
        /**
         * Sets the aggregated {@link #getYAxis yAxis}.
         */
        setYAxis(
          /**
           * The yAxis to set
           */
          oYAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.DualCombination;
        /**
         * Sets the aggregated {@link #getYAxis2 yAxis2}.
         */
        setYAxis2(
          /**
           * The yAxis2 to set
           */
          oYAxis2: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.DualCombination;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.DualCombination`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualCombination` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualCombination` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualCombination;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.DualCombination`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualCombination` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualCombination` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualCombination;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.DualCombination`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualCombination` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualCombination` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualCombination;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.DualCombination`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualCombination` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualCombination` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualCombination;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.DualCombination`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualCombination` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualCombination` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualCombination;
      }
      /**
       * @SINCE 1.7.2
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       *
       * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
       * VizFrame}**(`new sap.viz.ui5.controls.VizFrame({'vizType': 'dual_line'})`) **control to benefit from
       * new charting enhancements and timely support. **
       *
       * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
       * make sure you evaluate it thoroughly before migration.
       * @EXPERIMENTAL (since 1.7.2)
       *
       * Chart sap.viz.ui5.DualLine
       */
      class DualLine extends sap.viz.ui5.core.BaseChart {
        /**
         * Constructor for a new sap.viz.ui5.DualLine
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: DualLineOpts
        );

        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.DualLine`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualLine` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualLine` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualLine;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.DualLine`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualLine` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualLine` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualLine;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.DualLine`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualLine` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualLine` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualLine;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.DualLine`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualLine` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualLine` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualLine;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.DualLine`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualLine` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualLine` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualLine;
        /**
         * Destroys the background in the aggregation {@link #getBackground background}.
         */
        destroyBackground(): sap.viz.ui5.DualLine;
        /**
         * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
         */
        destroyDataLabel(): sap.viz.ui5.DualLine;
        /**
         * Destroys the general in the aggregation {@link #getGeneral general}.
         */
        destroyGeneral(): sap.viz.ui5.DualLine;
        /**
         * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
         */
        destroyInteraction(): sap.viz.ui5.DualLine;
        /**
         * Destroys the legend in the aggregation {@link #getLegend legend}.
         */
        destroyLegend(): sap.viz.ui5.DualLine;
        /**
         * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
         */
        destroyLegendGroup(): sap.viz.ui5.DualLine;
        /**
         * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
         */
        destroyPlotArea(): sap.viz.ui5.DualLine;
        /**
         * Destroys the title in the aggregation {@link #getTitle title}.
         */
        destroyTitle(): sap.viz.ui5.DualLine;
        /**
         * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
         */
        destroyToolTip(): sap.viz.ui5.DualLine;
        /**
         * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
         */
        destroyXAxis(): sap.viz.ui5.DualLine;
        /**
         * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
         */
        destroyXyContainer(): sap.viz.ui5.DualLine;
        /**
         * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
         */
        destroyYAxis(): sap.viz.ui5.DualLine;
        /**
         * Destroys the yAxis2 in the aggregation {@link #getYAxis2 yAxis2}.
         */
        destroyYAxis2(): sap.viz.ui5.DualLine;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.DualLine`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualLine;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.DualLine`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualLine;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.DualLine`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualLine;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.DualLine`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualLine;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.DualLine`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualLine;
        /**
         * Creates a new subclass of class sap.viz.ui5.DualLine with name `sClassName` and enriches it with the
         * information contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualLine;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualLine;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualLine;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualLine;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualLine;
        /**
         * Gets content of aggregation {@link #getBackground background}.
         *
         * Module sap.viz.modules.background
         */
        getBackground(): sap.viz.ui5.types.Background;
        /**
         * Gets content of aggregation {@link #getDataLabel dataLabel}.
         *
         * Module sap.viz.modules.datalabel
         */
        getDataLabel(): sap.viz.ui5.types.Datalabel;
        /**
         * Gets content of aggregation {@link #getGeneral general}.
         *
         * Module sap.viz.modules.rootContainer
         */
        getGeneral(): sap.viz.ui5.types.RootContainer;
        /**
         * Gets content of aggregation {@link #getInteraction interaction}.
         *
         * Module sap.viz.modules.controller.interaction
         */
        getInteraction(): sap.viz.ui5.types.controller.Interaction;
        /**
         * Gets content of aggregation {@link #getLegend legend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getLegendGroup legendGroup}.
         *
         * Module sap.viz.modules.legend
         */
        getLegendGroup(): sap.viz.ui5.types.Legend;
        /**
         * Returns a metadata object for class sap.viz.ui5.DualLine.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets content of aggregation {@link #getPlotArea plotArea}.
         *
         * Module sap.viz.modules.line
         */
        getPlotArea(): sap.viz.ui5.types.Line;
        /**
         * Gets content of aggregation {@link #getTitle title}.
         *
         * Module sap.viz.modules.title
         */
        getTitle(): sap.viz.ui5.types.Title;
        /**
         * Gets content of aggregation {@link #getToolTip toolTip}.
         *
         * Module sap.viz.chart.elements.Tooltip
         */
        getToolTip(): sap.viz.ui5.types.Tooltip;
        /**
         * Gets content of aggregation {@link #getXAxis xAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getXAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getXyContainer xyContainer}.
         *
         * Module sap.viz.modules.xycontainer
         */
        getXyContainer(): sap.viz.ui5.types.XYContainer;
        /**
         * Gets content of aggregation {@link #getYAxis yAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getYAxis2 yAxis2}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis2(): sap.viz.ui5.types.Axis;
        /**
         * Sets the aggregated {@link #getBackground background}.
         */
        setBackground(
          /**
           * The background to set
           */
          oBackground: sap.viz.ui5.types.Background
        ): sap.viz.ui5.DualLine;
        /**
         * Sets the aggregated {@link #getDataLabel dataLabel}.
         */
        setDataLabel(
          /**
           * The dataLabel to set
           */
          oDataLabel: sap.viz.ui5.types.Datalabel
        ): sap.viz.ui5.DualLine;
        /**
         * Sets the aggregated {@link #getGeneral general}.
         */
        setGeneral(
          /**
           * The general to set
           */
          oGeneral: sap.viz.ui5.types.RootContainer
        ): sap.viz.ui5.DualLine;
        /**
         * Sets the aggregated {@link #getInteraction interaction}.
         */
        setInteraction(
          /**
           * The interaction to set
           */
          oInteraction: sap.viz.ui5.types.controller.Interaction
        ): sap.viz.ui5.DualLine;
        /**
         * Sets the aggregated {@link #getLegend legend}.
         */
        setLegend(
          /**
           * The legend to set
           */
          oLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.DualLine;
        /**
         * Sets the aggregated {@link #getLegendGroup legendGroup}.
         */
        setLegendGroup(
          /**
           * The legendGroup to set
           */
          oLegendGroup: sap.viz.ui5.types.Legend
        ): sap.viz.ui5.DualLine;
        /**
         * Sets the aggregated {@link #getPlotArea plotArea}.
         */
        setPlotArea(
          /**
           * The plotArea to set
           */
          oPlotArea: sap.viz.ui5.types.Line
        ): sap.viz.ui5.DualLine;
        /**
         * Sets the aggregated {@link #getTitle title}.
         */
        setTitle(
          /**
           * The title to set
           */
          oTitle: sap.viz.ui5.types.Title
        ): sap.viz.ui5.DualLine;
        /**
         * Sets the aggregated {@link #getToolTip toolTip}.
         */
        setToolTip(
          /**
           * The toolTip to set
           */
          oToolTip: sap.viz.ui5.types.Tooltip
        ): sap.viz.ui5.DualLine;
        /**
         * Sets the aggregated {@link #getXAxis xAxis}.
         */
        setXAxis(
          /**
           * The xAxis to set
           */
          oXAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.DualLine;
        /**
         * Sets the aggregated {@link #getXyContainer xyContainer}.
         */
        setXyContainer(
          /**
           * The xyContainer to set
           */
          oXyContainer: sap.viz.ui5.types.XYContainer
        ): sap.viz.ui5.DualLine;
        /**
         * Sets the aggregated {@link #getYAxis yAxis}.
         */
        setYAxis(
          /**
           * The yAxis to set
           */
          oYAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.DualLine;
        /**
         * Sets the aggregated {@link #getYAxis2 yAxis2}.
         */
        setYAxis2(
          /**
           * The yAxis2 to set
           */
          oYAxis2: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.DualLine;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.DualLine`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualLine` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualLine` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualLine;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.DualLine`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualLine` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualLine` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualLine;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.DualLine`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualLine` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualLine` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualLine;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.DualLine`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualLine` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualLine` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualLine;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.DualLine`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualLine` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualLine` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualLine;
      }
      /**
       * @SINCE 1.7.2
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       *
       * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
       * VizFrame}**(`new sap.viz.ui5.controls.VizFrame({'vizType': 'dual_stacked_column'})`) **control to benefit
       * from new charting enhancements and timely support. **
       *
       * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
       * make sure you evaluate it thoroughly before migration.
       * @EXPERIMENTAL (since 1.7.2)
       *
       * Chart sap.viz.ui5.DualStackedColumn
       */
      class DualStackedColumn extends sap.viz.ui5.core.BaseChart {
        /**
         * Constructor for a new sap.viz.ui5.DualStackedColumn
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: DualStackedColumnOpts
        );

        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.DualStackedColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualStackedColumn` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualStackedColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.DualStackedColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualStackedColumn` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualStackedColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.DualStackedColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualStackedColumn` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualStackedColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.DualStackedColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualStackedColumn` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualStackedColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.DualStackedColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualStackedColumn` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualStackedColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * Destroys the background in the aggregation {@link #getBackground background}.
         */
        destroyBackground(): sap.viz.ui5.DualStackedColumn;
        /**
         * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
         */
        destroyDataLabel(): sap.viz.ui5.DualStackedColumn;
        /**
         * Destroys the general in the aggregation {@link #getGeneral general}.
         */
        destroyGeneral(): sap.viz.ui5.DualStackedColumn;
        /**
         * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
         */
        destroyInteraction(): sap.viz.ui5.DualStackedColumn;
        /**
         * Destroys the legend in the aggregation {@link #getLegend legend}.
         */
        destroyLegend(): sap.viz.ui5.DualStackedColumn;
        /**
         * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
         */
        destroyLegendGroup(): sap.viz.ui5.DualStackedColumn;
        /**
         * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
         */
        destroyPlotArea(): sap.viz.ui5.DualStackedColumn;
        /**
         * Destroys the title in the aggregation {@link #getTitle title}.
         */
        destroyTitle(): sap.viz.ui5.DualStackedColumn;
        /**
         * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
         */
        destroyToolTip(): sap.viz.ui5.DualStackedColumn;
        /**
         * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
         */
        destroyXAxis(): sap.viz.ui5.DualStackedColumn;
        /**
         * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
         */
        destroyXyContainer(): sap.viz.ui5.DualStackedColumn;
        /**
         * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
         */
        destroyYAxis(): sap.viz.ui5.DualStackedColumn;
        /**
         * Destroys the yAxis2 in the aggregation {@link #getYAxis2 yAxis2}.
         */
        destroyYAxis2(): sap.viz.ui5.DualStackedColumn;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.DualStackedColumn`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.DualStackedColumn`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.DualStackedColumn`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.DualStackedColumn`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.DualStackedColumn`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * Creates a new subclass of class sap.viz.ui5.DualStackedColumn with name `sClassName` and enriches it
         * with the information contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * Gets content of aggregation {@link #getBackground background}.
         *
         * Module sap.viz.modules.background
         */
        getBackground(): sap.viz.ui5.types.Background;
        /**
         * Gets content of aggregation {@link #getDataLabel dataLabel}.
         *
         * Module sap.viz.modules.datalabel
         */
        getDataLabel(): sap.viz.ui5.types.Datalabel;
        /**
         * Gets content of aggregation {@link #getGeneral general}.
         *
         * Module sap.viz.modules.rootContainer
         */
        getGeneral(): sap.viz.ui5.types.RootContainer;
        /**
         * Gets content of aggregation {@link #getInteraction interaction}.
         *
         * Module sap.viz.modules.controller.interaction
         */
        getInteraction(): sap.viz.ui5.types.controller.Interaction;
        /**
         * Gets content of aggregation {@link #getLegend legend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getLegendGroup legendGroup}.
         *
         * Module sap.viz.modules.legend
         */
        getLegendGroup(): sap.viz.ui5.types.Legend;
        /**
         * Returns a metadata object for class sap.viz.ui5.DualStackedColumn.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets content of aggregation {@link #getPlotArea plotArea}.
         *
         * Module sap.viz.modules.stackedverticalbar
         */
        getPlotArea(): sap.viz.ui5.types.StackedVerticalBar;
        /**
         * Gets content of aggregation {@link #getTitle title}.
         *
         * Module sap.viz.modules.title
         */
        getTitle(): sap.viz.ui5.types.Title;
        /**
         * Gets content of aggregation {@link #getToolTip toolTip}.
         *
         * Module sap.viz.chart.elements.Tooltip
         */
        getToolTip(): sap.viz.ui5.types.Tooltip;
        /**
         * Gets content of aggregation {@link #getXAxis xAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getXAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getXyContainer xyContainer}.
         *
         * Module sap.viz.modules.xycontainer
         */
        getXyContainer(): sap.viz.ui5.types.XYContainer;
        /**
         * Gets content of aggregation {@link #getYAxis yAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getYAxis2 yAxis2}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis2(): sap.viz.ui5.types.Axis;
        /**
         * Sets the aggregated {@link #getBackground background}.
         */
        setBackground(
          /**
           * The background to set
           */
          oBackground: sap.viz.ui5.types.Background
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * Sets the aggregated {@link #getDataLabel dataLabel}.
         */
        setDataLabel(
          /**
           * The dataLabel to set
           */
          oDataLabel: sap.viz.ui5.types.Datalabel
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * Sets the aggregated {@link #getGeneral general}.
         */
        setGeneral(
          /**
           * The general to set
           */
          oGeneral: sap.viz.ui5.types.RootContainer
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * Sets the aggregated {@link #getInteraction interaction}.
         */
        setInteraction(
          /**
           * The interaction to set
           */
          oInteraction: sap.viz.ui5.types.controller.Interaction
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * Sets the aggregated {@link #getLegend legend}.
         */
        setLegend(
          /**
           * The legend to set
           */
          oLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * Sets the aggregated {@link #getLegendGroup legendGroup}.
         */
        setLegendGroup(
          /**
           * The legendGroup to set
           */
          oLegendGroup: sap.viz.ui5.types.Legend
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * Sets the aggregated {@link #getPlotArea plotArea}.
         */
        setPlotArea(
          /**
           * The plotArea to set
           */
          oPlotArea: sap.viz.ui5.types.StackedVerticalBar
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * Sets the aggregated {@link #getTitle title}.
         */
        setTitle(
          /**
           * The title to set
           */
          oTitle: sap.viz.ui5.types.Title
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * Sets the aggregated {@link #getToolTip toolTip}.
         */
        setToolTip(
          /**
           * The toolTip to set
           */
          oToolTip: sap.viz.ui5.types.Tooltip
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * Sets the aggregated {@link #getXAxis xAxis}.
         */
        setXAxis(
          /**
           * The xAxis to set
           */
          oXAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * Sets the aggregated {@link #getXyContainer xyContainer}.
         */
        setXyContainer(
          /**
           * The xyContainer to set
           */
          oXyContainer: sap.viz.ui5.types.XYContainer
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * Sets the aggregated {@link #getYAxis yAxis}.
         */
        setYAxis(
          /**
           * The yAxis to set
           */
          oYAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * Sets the aggregated {@link #getYAxis2 yAxis2}.
         */
        setYAxis2(
          /**
           * The yAxis2 to set
           */
          oYAxis2: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.DualStackedColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualStackedColumn` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualStackedColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.DualStackedColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualStackedColumn` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualStackedColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.DualStackedColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualStackedColumn` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualStackedColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.DualStackedColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualStackedColumn` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualStackedColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.DualStackedColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualStackedColumn` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualStackedColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn;
      }
      /**
       * @SINCE 1.7.2
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       *
       * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
       * VizFrame}**(`new sap.viz.ui5.controls.VizFrame({'vizType': '100_dual_stacked_column'})`) **control to
       * benefit from new charting enhancements and timely support. **
       *
       * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
       * make sure you evaluate it thoroughly before migration.
       * @EXPERIMENTAL (since 1.7.2)
       *
       * Chart sap.viz.ui5.DualStackedColumn100
       */
      class DualStackedColumn100 extends sap.viz.ui5.core.BaseChart {
        /**
         * Constructor for a new sap.viz.ui5.DualStackedColumn100
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: DualStackedColumn100Opts
        );

        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.DualStackedColumn100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualStackedColumn100` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualStackedColumn100` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.DualStackedColumn100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualStackedColumn100` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualStackedColumn100` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.DualStackedColumn100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualStackedColumn100` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualStackedColumn100` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.DualStackedColumn100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualStackedColumn100` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualStackedColumn100` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.DualStackedColumn100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualStackedColumn100` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualStackedColumn100` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * Destroys the background in the aggregation {@link #getBackground background}.
         */
        destroyBackground(): sap.viz.ui5.DualStackedColumn100;
        /**
         * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
         */
        destroyDataLabel(): sap.viz.ui5.DualStackedColumn100;
        /**
         * Destroys the general in the aggregation {@link #getGeneral general}.
         */
        destroyGeneral(): sap.viz.ui5.DualStackedColumn100;
        /**
         * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
         */
        destroyInteraction(): sap.viz.ui5.DualStackedColumn100;
        /**
         * Destroys the legend in the aggregation {@link #getLegend legend}.
         */
        destroyLegend(): sap.viz.ui5.DualStackedColumn100;
        /**
         * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
         */
        destroyLegendGroup(): sap.viz.ui5.DualStackedColumn100;
        /**
         * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
         */
        destroyPlotArea(): sap.viz.ui5.DualStackedColumn100;
        /**
         * Destroys the title in the aggregation {@link #getTitle title}.
         */
        destroyTitle(): sap.viz.ui5.DualStackedColumn100;
        /**
         * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
         */
        destroyToolTip(): sap.viz.ui5.DualStackedColumn100;
        /**
         * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
         */
        destroyXAxis(): sap.viz.ui5.DualStackedColumn100;
        /**
         * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
         */
        destroyXyContainer(): sap.viz.ui5.DualStackedColumn100;
        /**
         * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
         */
        destroyYAxis(): sap.viz.ui5.DualStackedColumn100;
        /**
         * Destroys the yAxis2 in the aggregation {@link #getYAxis2 yAxis2}.
         */
        destroyYAxis2(): sap.viz.ui5.DualStackedColumn100;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.DualStackedColumn100`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.DualStackedColumn100`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.DualStackedColumn100`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.DualStackedColumn100`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.DualStackedColumn100`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * Creates a new subclass of class sap.viz.ui5.DualStackedColumn100 with name `sClassName` and enriches
         * it with the information contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * Gets content of aggregation {@link #getBackground background}.
         *
         * Module sap.viz.modules.background
         */
        getBackground(): sap.viz.ui5.types.Background;
        /**
         * Gets content of aggregation {@link #getDataLabel dataLabel}.
         *
         * Module sap.viz.modules.datalabel
         */
        getDataLabel(): sap.viz.ui5.types.Datalabel;
        /**
         * Gets content of aggregation {@link #getGeneral general}.
         *
         * Module sap.viz.modules.rootContainer
         */
        getGeneral(): sap.viz.ui5.types.RootContainer;
        /**
         * Gets content of aggregation {@link #getInteraction interaction}.
         *
         * Module sap.viz.modules.controller.interaction
         */
        getInteraction(): sap.viz.ui5.types.controller.Interaction;
        /**
         * Gets content of aggregation {@link #getLegend legend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getLegendGroup legendGroup}.
         *
         * Module sap.viz.modules.legend
         */
        getLegendGroup(): sap.viz.ui5.types.Legend;
        /**
         * Returns a metadata object for class sap.viz.ui5.DualStackedColumn100.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets content of aggregation {@link #getPlotArea plotArea}.
         *
         * Module sap.viz.modules.stackedverticalbar
         */
        getPlotArea(): sap.viz.ui5.types.StackedVerticalBar;
        /**
         * Gets content of aggregation {@link #getTitle title}.
         *
         * Module sap.viz.modules.title
         */
        getTitle(): sap.viz.ui5.types.Title;
        /**
         * Gets content of aggregation {@link #getToolTip toolTip}.
         *
         * Module sap.viz.chart.elements.Tooltip
         */
        getToolTip(): sap.viz.ui5.types.Tooltip;
        /**
         * Gets content of aggregation {@link #getXAxis xAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getXAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getXyContainer xyContainer}.
         *
         * Module sap.viz.modules.xycontainer
         */
        getXyContainer(): sap.viz.ui5.types.XYContainer;
        /**
         * Gets content of aggregation {@link #getYAxis yAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getYAxis2 yAxis2}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis2(): sap.viz.ui5.types.Axis;
        /**
         * Sets the aggregated {@link #getBackground background}.
         */
        setBackground(
          /**
           * The background to set
           */
          oBackground: sap.viz.ui5.types.Background
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * Sets the aggregated {@link #getDataLabel dataLabel}.
         */
        setDataLabel(
          /**
           * The dataLabel to set
           */
          oDataLabel: sap.viz.ui5.types.Datalabel
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * Sets the aggregated {@link #getGeneral general}.
         */
        setGeneral(
          /**
           * The general to set
           */
          oGeneral: sap.viz.ui5.types.RootContainer
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * Sets the aggregated {@link #getInteraction interaction}.
         */
        setInteraction(
          /**
           * The interaction to set
           */
          oInteraction: sap.viz.ui5.types.controller.Interaction
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * Sets the aggregated {@link #getLegend legend}.
         */
        setLegend(
          /**
           * The legend to set
           */
          oLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * Sets the aggregated {@link #getLegendGroup legendGroup}.
         */
        setLegendGroup(
          /**
           * The legendGroup to set
           */
          oLegendGroup: sap.viz.ui5.types.Legend
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * Sets the aggregated {@link #getPlotArea plotArea}.
         */
        setPlotArea(
          /**
           * The plotArea to set
           */
          oPlotArea: sap.viz.ui5.types.StackedVerticalBar
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * Sets the aggregated {@link #getTitle title}.
         */
        setTitle(
          /**
           * The title to set
           */
          oTitle: sap.viz.ui5.types.Title
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * Sets the aggregated {@link #getToolTip toolTip}.
         */
        setToolTip(
          /**
           * The toolTip to set
           */
          oToolTip: sap.viz.ui5.types.Tooltip
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * Sets the aggregated {@link #getXAxis xAxis}.
         */
        setXAxis(
          /**
           * The xAxis to set
           */
          oXAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * Sets the aggregated {@link #getXyContainer xyContainer}.
         */
        setXyContainer(
          /**
           * The xyContainer to set
           */
          oXyContainer: sap.viz.ui5.types.XYContainer
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * Sets the aggregated {@link #getYAxis yAxis}.
         */
        setYAxis(
          /**
           * The yAxis to set
           */
          oYAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * Sets the aggregated {@link #getYAxis2 yAxis2}.
         */
        setYAxis2(
          /**
           * The yAxis2 to set
           */
          oYAxis2: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.DualStackedColumn100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualStackedColumn100` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualStackedColumn100` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.DualStackedColumn100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualStackedColumn100` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualStackedColumn100` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.DualStackedColumn100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualStackedColumn100` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualStackedColumn100` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.DualStackedColumn100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualStackedColumn100` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualStackedColumn100` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.DualStackedColumn100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.DualStackedColumn100` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.DualStackedColumn100` itself
           */
          oListener?: object
        ): sap.viz.ui5.DualStackedColumn100;
      }
      /**
       * @SINCE 1.7.2
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       *
       * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
       * VizFrame}**(`new sap.viz.ui5.controls.VizFrame({'vizType': 'heatmap'})`) **control to benefit from new
       * charting enhancements and timely support. **
       *
       * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
       * make sure you evaluate it thoroughly before migration.
       * @EXPERIMENTAL (since 1.7.2)
       *
       * Chart sap.viz.ui5.Heatmap
       */
      class Heatmap extends sap.viz.ui5.core.BaseChart {
        /**
         * Constructor for a new sap.viz.ui5.Heatmap
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: HeatmapOpts
        );

        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Heatmap`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Heatmap` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Heatmap` itself
           */
          oListener?: object
        ): sap.viz.ui5.Heatmap;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Heatmap`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Heatmap` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Heatmap` itself
           */
          oListener?: object
        ): sap.viz.ui5.Heatmap;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Heatmap`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Heatmap` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Heatmap` itself
           */
          oListener?: object
        ): sap.viz.ui5.Heatmap;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Heatmap`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Heatmap` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Heatmap` itself
           */
          oListener?: object
        ): sap.viz.ui5.Heatmap;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Heatmap`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Heatmap` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Heatmap` itself
           */
          oListener?: object
        ): sap.viz.ui5.Heatmap;
        /**
         * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
         */
        destroyDataLabel(): sap.viz.ui5.Heatmap;
        /**
         * Destroys the general in the aggregation {@link #getGeneral general}.
         */
        destroyGeneral(): sap.viz.ui5.Heatmap;
        /**
         * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
         */
        destroyInteraction(): sap.viz.ui5.Heatmap;
        /**
         * Destroys the legend in the aggregation {@link #getLegend legend}.
         */
        destroyLegend(): sap.viz.ui5.Heatmap;
        /**
         * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
         */
        destroyLegendGroup(): sap.viz.ui5.Heatmap;
        /**
         * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
         */
        destroyPlotArea(): sap.viz.ui5.Heatmap;
        /**
         * Destroys the title in the aggregation {@link #getTitle title}.
         */
        destroyTitle(): sap.viz.ui5.Heatmap;
        /**
         * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
         */
        destroyToolTip(): sap.viz.ui5.Heatmap;
        /**
         * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
         */
        destroyXAxis(): sap.viz.ui5.Heatmap;
        /**
         * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
         */
        destroyXyContainer(): sap.viz.ui5.Heatmap;
        /**
         * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
         */
        destroyYAxis(): sap.viz.ui5.Heatmap;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Heatmap`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Heatmap;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Heatmap`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Heatmap;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.Heatmap`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Heatmap;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.Heatmap`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Heatmap;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Heatmap`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Heatmap;
        /**
         * Creates a new subclass of class sap.viz.ui5.Heatmap with name `sClassName` and enriches it with the information
         * contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Heatmap;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Heatmap;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Heatmap;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Heatmap;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Heatmap;
        /**
         * Gets content of aggregation {@link #getDataLabel dataLabel}.
         *
         * Module sap.viz.modules.datalabel
         */
        getDataLabel(): sap.viz.ui5.types.Datalabel;
        /**
         * Gets content of aggregation {@link #getGeneral general}.
         *
         * Module sap.viz.modules.rootContainer
         */
        getGeneral(): sap.viz.ui5.types.RootContainer;
        /**
         * Gets content of aggregation {@link #getInteraction interaction}.
         *
         * Module sap.viz.modules.controller.interaction
         */
        getInteraction(): sap.viz.ui5.types.controller.Interaction;
        /**
         * Gets content of aggregation {@link #getLegend legend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getLegendGroup legendGroup}.
         *
         * Module sap.viz.modules.legend
         */
        getLegendGroup(): sap.viz.ui5.types.Legend;
        /**
         * Returns a metadata object for class sap.viz.ui5.Heatmap.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets content of aggregation {@link #getPlotArea plotArea}.
         *
         * Module sap.viz.modules.heatmap
         */
        getPlotArea(): sap.viz.ui5.types.Heatmap;
        /**
         * Gets content of aggregation {@link #getTitle title}.
         *
         * Module sap.viz.modules.title
         */
        getTitle(): sap.viz.ui5.types.Title;
        /**
         * Gets content of aggregation {@link #getToolTip toolTip}.
         *
         * Module sap.viz.chart.elements.Tooltip
         */
        getToolTip(): sap.viz.ui5.types.Tooltip;
        /**
         * Gets content of aggregation {@link #getXAxis xAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getXAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getXyContainer xyContainer}.
         *
         * Module sap.viz.modules.xycontainer
         */
        getXyContainer(): sap.viz.ui5.types.XYContainer;
        /**
         * Gets content of aggregation {@link #getYAxis yAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis(): sap.viz.ui5.types.Axis;
        /**
         * Sets the aggregated {@link #getDataLabel dataLabel}.
         */
        setDataLabel(
          /**
           * The dataLabel to set
           */
          oDataLabel: sap.viz.ui5.types.Datalabel
        ): sap.viz.ui5.Heatmap;
        /**
         * Sets the aggregated {@link #getGeneral general}.
         */
        setGeneral(
          /**
           * The general to set
           */
          oGeneral: sap.viz.ui5.types.RootContainer
        ): sap.viz.ui5.Heatmap;
        /**
         * Sets the aggregated {@link #getInteraction interaction}.
         */
        setInteraction(
          /**
           * The interaction to set
           */
          oInteraction: sap.viz.ui5.types.controller.Interaction
        ): sap.viz.ui5.Heatmap;
        /**
         * Sets the aggregated {@link #getLegend legend}.
         */
        setLegend(
          /**
           * The legend to set
           */
          oLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.Heatmap;
        /**
         * Sets the aggregated {@link #getLegendGroup legendGroup}.
         */
        setLegendGroup(
          /**
           * The legendGroup to set
           */
          oLegendGroup: sap.viz.ui5.types.Legend
        ): sap.viz.ui5.Heatmap;
        /**
         * Sets the aggregated {@link #getPlotArea plotArea}.
         */
        setPlotArea(
          /**
           * The plotArea to set
           */
          oPlotArea: sap.viz.ui5.types.Heatmap
        ): sap.viz.ui5.Heatmap;
        /**
         * Sets the aggregated {@link #getTitle title}.
         */
        setTitle(
          /**
           * The title to set
           */
          oTitle: sap.viz.ui5.types.Title
        ): sap.viz.ui5.Heatmap;
        /**
         * Sets the aggregated {@link #getToolTip toolTip}.
         */
        setToolTip(
          /**
           * The toolTip to set
           */
          oToolTip: sap.viz.ui5.types.Tooltip
        ): sap.viz.ui5.Heatmap;
        /**
         * Sets the aggregated {@link #getXAxis xAxis}.
         */
        setXAxis(
          /**
           * The xAxis to set
           */
          oXAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.Heatmap;
        /**
         * Sets the aggregated {@link #getXyContainer xyContainer}.
         */
        setXyContainer(
          /**
           * The xyContainer to set
           */
          oXyContainer: sap.viz.ui5.types.XYContainer
        ): sap.viz.ui5.Heatmap;
        /**
         * Sets the aggregated {@link #getYAxis yAxis}.
         */
        setYAxis(
          /**
           * The yAxis to set
           */
          oYAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.Heatmap;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Heatmap`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Heatmap` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Heatmap` itself
           */
          oListener?: object
        ): sap.viz.ui5.Heatmap;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Heatmap`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Heatmap` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Heatmap` itself
           */
          oListener?: object
        ): sap.viz.ui5.Heatmap;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Heatmap`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Heatmap` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Heatmap` itself
           */
          oListener?: object
        ): sap.viz.ui5.Heatmap;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Heatmap`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Heatmap` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Heatmap` itself
           */
          oListener?: object
        ): sap.viz.ui5.Heatmap;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Heatmap`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Heatmap` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Heatmap` itself
           */
          oListener?: object
        ): sap.viz.ui5.Heatmap;
      }
      /**
       * @SINCE 1.7.2
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       * @EXPERIMENTAL (since 1.7.2)
       *
       * Chart sap.viz.ui5.HorizontalArea
       */
      class HorizontalArea extends sap.viz.ui5.core.BaseChart {
        /**
         * Constructor for a new sap.viz.ui5.HorizontalArea
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: HorizontalAreaOpts
        );

        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.HorizontalArea`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.HorizontalArea` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.HorizontalArea` itself
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.HorizontalArea`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.HorizontalArea` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.HorizontalArea` itself
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.HorizontalArea`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.HorizontalArea` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.HorizontalArea` itself
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.HorizontalArea`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.HorizontalArea` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.HorizontalArea` itself
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.HorizontalArea`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.HorizontalArea` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.HorizontalArea` itself
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea;
        /**
         * Destroys the background in the aggregation {@link #getBackground background}.
         */
        destroyBackground(): sap.viz.ui5.HorizontalArea;
        /**
         * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
         */
        destroyDataLabel(): sap.viz.ui5.HorizontalArea;
        /**
         * Destroys the general in the aggregation {@link #getGeneral general}.
         */
        destroyGeneral(): sap.viz.ui5.HorizontalArea;
        /**
         * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
         */
        destroyInteraction(): sap.viz.ui5.HorizontalArea;
        /**
         * Destroys the legend in the aggregation {@link #getLegend legend}.
         */
        destroyLegend(): sap.viz.ui5.HorizontalArea;
        /**
         * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
         */
        destroyLegendGroup(): sap.viz.ui5.HorizontalArea;
        /**
         * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
         */
        destroyPlotArea(): sap.viz.ui5.HorizontalArea;
        /**
         * Destroys the title in the aggregation {@link #getTitle title}.
         */
        destroyTitle(): sap.viz.ui5.HorizontalArea;
        /**
         * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
         */
        destroyToolTip(): sap.viz.ui5.HorizontalArea;
        /**
         * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
         */
        destroyXAxis(): sap.viz.ui5.HorizontalArea;
        /**
         * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
         */
        destroyXyContainer(): sap.viz.ui5.HorizontalArea;
        /**
         * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
         */
        destroyYAxis(): sap.viz.ui5.HorizontalArea;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.HorizontalArea`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.HorizontalArea`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.HorizontalArea`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.HorizontalArea`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.HorizontalArea`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea;
        /**
         * Creates a new subclass of class sap.viz.ui5.HorizontalArea with name `sClassName` and enriches it with
         * the information contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.HorizontalArea;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.HorizontalArea;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.HorizontalArea;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.HorizontalArea;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.HorizontalArea;
        /**
         * Gets content of aggregation {@link #getBackground background}.
         *
         * Module sap.viz.modules.background
         */
        getBackground(): sap.viz.ui5.types.Background;
        /**
         * Gets content of aggregation {@link #getDataLabel dataLabel}.
         *
         * Module sap.viz.modules.datalabel
         */
        getDataLabel(): sap.viz.ui5.types.Datalabel;
        /**
         * Gets content of aggregation {@link #getGeneral general}.
         *
         * Module sap.viz.modules.rootContainer
         */
        getGeneral(): sap.viz.ui5.types.RootContainer;
        /**
         * Gets content of aggregation {@link #getInteraction interaction}.
         *
         * Module sap.viz.modules.controller.interaction
         */
        getInteraction(): sap.viz.ui5.types.controller.Interaction;
        /**
         * Gets content of aggregation {@link #getLegend legend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getLegendGroup legendGroup}.
         *
         * Module sap.viz.modules.legend
         */
        getLegendGroup(): sap.viz.ui5.types.Legend;
        /**
         * Returns a metadata object for class sap.viz.ui5.HorizontalArea.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets content of aggregation {@link #getPlotArea plotArea}.
         *
         * Module sap.viz.modules.area
         */
        getPlotArea(): sap.viz.ui5.types.Area;
        /**
         * Gets content of aggregation {@link #getTitle title}.
         *
         * Module sap.viz.modules.title
         */
        getTitle(): sap.viz.ui5.types.Title;
        /**
         * Gets content of aggregation {@link #getToolTip toolTip}.
         *
         * Module sap.viz.chart.elements.Tooltip
         */
        getToolTip(): sap.viz.ui5.types.Tooltip;
        /**
         * Gets content of aggregation {@link #getXAxis xAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getXAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getXyContainer xyContainer}.
         *
         * Module sap.viz.modules.xycontainer
         */
        getXyContainer(): sap.viz.ui5.types.XYContainer;
        /**
         * Gets content of aggregation {@link #getYAxis yAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis(): sap.viz.ui5.types.Axis;
        /**
         * Sets the aggregated {@link #getBackground background}.
         */
        setBackground(
          /**
           * The background to set
           */
          oBackground: sap.viz.ui5.types.Background
        ): sap.viz.ui5.HorizontalArea;
        /**
         * Sets the aggregated {@link #getDataLabel dataLabel}.
         */
        setDataLabel(
          /**
           * The dataLabel to set
           */
          oDataLabel: sap.viz.ui5.types.Datalabel
        ): sap.viz.ui5.HorizontalArea;
        /**
         * Sets the aggregated {@link #getGeneral general}.
         */
        setGeneral(
          /**
           * The general to set
           */
          oGeneral: sap.viz.ui5.types.RootContainer
        ): sap.viz.ui5.HorizontalArea;
        /**
         * Sets the aggregated {@link #getInteraction interaction}.
         */
        setInteraction(
          /**
           * The interaction to set
           */
          oInteraction: sap.viz.ui5.types.controller.Interaction
        ): sap.viz.ui5.HorizontalArea;
        /**
         * Sets the aggregated {@link #getLegend legend}.
         */
        setLegend(
          /**
           * The legend to set
           */
          oLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.HorizontalArea;
        /**
         * Sets the aggregated {@link #getLegendGroup legendGroup}.
         */
        setLegendGroup(
          /**
           * The legendGroup to set
           */
          oLegendGroup: sap.viz.ui5.types.Legend
        ): sap.viz.ui5.HorizontalArea;
        /**
         * Sets the aggregated {@link #getPlotArea plotArea}.
         */
        setPlotArea(
          /**
           * The plotArea to set
           */
          oPlotArea: sap.viz.ui5.types.Area
        ): sap.viz.ui5.HorizontalArea;
        /**
         * Sets the aggregated {@link #getTitle title}.
         */
        setTitle(
          /**
           * The title to set
           */
          oTitle: sap.viz.ui5.types.Title
        ): sap.viz.ui5.HorizontalArea;
        /**
         * Sets the aggregated {@link #getToolTip toolTip}.
         */
        setToolTip(
          /**
           * The toolTip to set
           */
          oToolTip: sap.viz.ui5.types.Tooltip
        ): sap.viz.ui5.HorizontalArea;
        /**
         * Sets the aggregated {@link #getXAxis xAxis}.
         */
        setXAxis(
          /**
           * The xAxis to set
           */
          oXAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.HorizontalArea;
        /**
         * Sets the aggregated {@link #getXyContainer xyContainer}.
         */
        setXyContainer(
          /**
           * The xyContainer to set
           */
          oXyContainer: sap.viz.ui5.types.XYContainer
        ): sap.viz.ui5.HorizontalArea;
        /**
         * Sets the aggregated {@link #getYAxis yAxis}.
         */
        setYAxis(
          /**
           * The yAxis to set
           */
          oYAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.HorizontalArea;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.HorizontalArea`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.HorizontalArea` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.HorizontalArea` itself
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.HorizontalArea`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.HorizontalArea` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.HorizontalArea` itself
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.HorizontalArea`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.HorizontalArea` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.HorizontalArea` itself
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.HorizontalArea`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.HorizontalArea` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.HorizontalArea` itself
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.HorizontalArea`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.HorizontalArea` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.HorizontalArea` itself
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea;
      }
      /**
       * @SINCE 1.7.2
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       * @EXPERIMENTAL (since 1.7.2)
       *
       * Chart sap.viz.ui5.HorizontalArea100
       */
      class HorizontalArea100 extends sap.viz.ui5.core.BaseChart {
        /**
         * Constructor for a new sap.viz.ui5.HorizontalArea100
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: HorizontalArea100Opts
        );

        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.HorizontalArea100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.HorizontalArea100` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.HorizontalArea100` itself
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.HorizontalArea100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.HorizontalArea100` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.HorizontalArea100` itself
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.HorizontalArea100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.HorizontalArea100` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.HorizontalArea100` itself
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.HorizontalArea100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.HorizontalArea100` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.HorizontalArea100` itself
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.HorizontalArea100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.HorizontalArea100` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.HorizontalArea100` itself
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * Destroys the background in the aggregation {@link #getBackground background}.
         */
        destroyBackground(): sap.viz.ui5.HorizontalArea100;
        /**
         * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
         */
        destroyDataLabel(): sap.viz.ui5.HorizontalArea100;
        /**
         * Destroys the general in the aggregation {@link #getGeneral general}.
         */
        destroyGeneral(): sap.viz.ui5.HorizontalArea100;
        /**
         * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
         */
        destroyInteraction(): sap.viz.ui5.HorizontalArea100;
        /**
         * Destroys the legend in the aggregation {@link #getLegend legend}.
         */
        destroyLegend(): sap.viz.ui5.HorizontalArea100;
        /**
         * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
         */
        destroyLegendGroup(): sap.viz.ui5.HorizontalArea100;
        /**
         * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
         */
        destroyPlotArea(): sap.viz.ui5.HorizontalArea100;
        /**
         * Destroys the title in the aggregation {@link #getTitle title}.
         */
        destroyTitle(): sap.viz.ui5.HorizontalArea100;
        /**
         * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
         */
        destroyToolTip(): sap.viz.ui5.HorizontalArea100;
        /**
         * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
         */
        destroyXAxis(): sap.viz.ui5.HorizontalArea100;
        /**
         * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
         */
        destroyXyContainer(): sap.viz.ui5.HorizontalArea100;
        /**
         * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
         */
        destroyYAxis(): sap.viz.ui5.HorizontalArea100;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.HorizontalArea100`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.HorizontalArea100`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.HorizontalArea100`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.HorizontalArea100`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.HorizontalArea100`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * Creates a new subclass of class sap.viz.ui5.HorizontalArea100 with name `sClassName` and enriches it
         * with the information contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * Gets content of aggregation {@link #getBackground background}.
         *
         * Module sap.viz.modules.background
         */
        getBackground(): sap.viz.ui5.types.Background;
        /**
         * Gets content of aggregation {@link #getDataLabel dataLabel}.
         *
         * Module sap.viz.modules.datalabel
         */
        getDataLabel(): sap.viz.ui5.types.Datalabel;
        /**
         * Gets content of aggregation {@link #getGeneral general}.
         *
         * Module sap.viz.modules.rootContainer
         */
        getGeneral(): sap.viz.ui5.types.RootContainer;
        /**
         * Gets content of aggregation {@link #getInteraction interaction}.
         *
         * Module sap.viz.modules.controller.interaction
         */
        getInteraction(): sap.viz.ui5.types.controller.Interaction;
        /**
         * Gets content of aggregation {@link #getLegend legend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getLegendGroup legendGroup}.
         *
         * Module sap.viz.modules.legend
         */
        getLegendGroup(): sap.viz.ui5.types.Legend;
        /**
         * Returns a metadata object for class sap.viz.ui5.HorizontalArea100.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets content of aggregation {@link #getPlotArea plotArea}.
         *
         * Module sap.viz.modules.area
         */
        getPlotArea(): sap.viz.ui5.types.Area;
        /**
         * Gets content of aggregation {@link #getTitle title}.
         *
         * Module sap.viz.modules.title
         */
        getTitle(): sap.viz.ui5.types.Title;
        /**
         * Gets content of aggregation {@link #getToolTip toolTip}.
         *
         * Module sap.viz.chart.elements.Tooltip
         */
        getToolTip(): sap.viz.ui5.types.Tooltip;
        /**
         * Gets content of aggregation {@link #getXAxis xAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getXAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getXyContainer xyContainer}.
         *
         * Module sap.viz.modules.xycontainer
         */
        getXyContainer(): sap.viz.ui5.types.XYContainer;
        /**
         * Gets content of aggregation {@link #getYAxis yAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis(): sap.viz.ui5.types.Axis;
        /**
         * Sets the aggregated {@link #getBackground background}.
         */
        setBackground(
          /**
           * The background to set
           */
          oBackground: sap.viz.ui5.types.Background
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * Sets the aggregated {@link #getDataLabel dataLabel}.
         */
        setDataLabel(
          /**
           * The dataLabel to set
           */
          oDataLabel: sap.viz.ui5.types.Datalabel
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * Sets the aggregated {@link #getGeneral general}.
         */
        setGeneral(
          /**
           * The general to set
           */
          oGeneral: sap.viz.ui5.types.RootContainer
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * Sets the aggregated {@link #getInteraction interaction}.
         */
        setInteraction(
          /**
           * The interaction to set
           */
          oInteraction: sap.viz.ui5.types.controller.Interaction
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * Sets the aggregated {@link #getLegend legend}.
         */
        setLegend(
          /**
           * The legend to set
           */
          oLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * Sets the aggregated {@link #getLegendGroup legendGroup}.
         */
        setLegendGroup(
          /**
           * The legendGroup to set
           */
          oLegendGroup: sap.viz.ui5.types.Legend
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * Sets the aggregated {@link #getPlotArea plotArea}.
         */
        setPlotArea(
          /**
           * The plotArea to set
           */
          oPlotArea: sap.viz.ui5.types.Area
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * Sets the aggregated {@link #getTitle title}.
         */
        setTitle(
          /**
           * The title to set
           */
          oTitle: sap.viz.ui5.types.Title
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * Sets the aggregated {@link #getToolTip toolTip}.
         */
        setToolTip(
          /**
           * The toolTip to set
           */
          oToolTip: sap.viz.ui5.types.Tooltip
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * Sets the aggregated {@link #getXAxis xAxis}.
         */
        setXAxis(
          /**
           * The xAxis to set
           */
          oXAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * Sets the aggregated {@link #getXyContainer xyContainer}.
         */
        setXyContainer(
          /**
           * The xyContainer to set
           */
          oXyContainer: sap.viz.ui5.types.XYContainer
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * Sets the aggregated {@link #getYAxis yAxis}.
         */
        setYAxis(
          /**
           * The yAxis to set
           */
          oYAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.HorizontalArea100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.HorizontalArea100` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.HorizontalArea100` itself
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.HorizontalArea100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.HorizontalArea100` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.HorizontalArea100` itself
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.HorizontalArea100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.HorizontalArea100` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.HorizontalArea100` itself
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.HorizontalArea100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.HorizontalArea100` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.HorizontalArea100` itself
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.HorizontalArea100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.HorizontalArea100` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.HorizontalArea100` itself
           */
          oListener?: object
        ): sap.viz.ui5.HorizontalArea100;
      }
      /**
       * @SINCE 1.7.2
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       *
       * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
       * VizFrame}**(`new sap.viz.ui5.controls.VizFrame({'vizType': 'line'})`) **control to benefit from new charting
       * enhancements and timely support. **
       *
       * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
       * make sure you evaluate it thoroughly before migration.
       * @EXPERIMENTAL (since 1.7.2)
       *
       * Chart sap.viz.ui5.Line
       */
      class Line extends sap.viz.ui5.core.BaseChart {
        /**
         * Constructor for a new sap.viz.ui5.Line
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: LineOpts
        );

        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Line`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Line` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Line` itself
           */
          oListener?: object
        ): sap.viz.ui5.Line;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Line`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Line` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Line` itself
           */
          oListener?: object
        ): sap.viz.ui5.Line;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Line`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Line` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Line` itself
           */
          oListener?: object
        ): sap.viz.ui5.Line;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Line`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Line` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Line` itself
           */
          oListener?: object
        ): sap.viz.ui5.Line;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Line`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Line` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Line` itself
           */
          oListener?: object
        ): sap.viz.ui5.Line;
        /**
         * Destroys the background in the aggregation {@link #getBackground background}.
         */
        destroyBackground(): sap.viz.ui5.Line;
        /**
         * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
         */
        destroyDataLabel(): sap.viz.ui5.Line;
        /**
         * Destroys the general in the aggregation {@link #getGeneral general}.
         */
        destroyGeneral(): sap.viz.ui5.Line;
        /**
         * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
         */
        destroyInteraction(): sap.viz.ui5.Line;
        /**
         * Destroys the legend in the aggregation {@link #getLegend legend}.
         */
        destroyLegend(): sap.viz.ui5.Line;
        /**
         * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
         */
        destroyLegendGroup(): sap.viz.ui5.Line;
        /**
         * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
         */
        destroyPlotArea(): sap.viz.ui5.Line;
        /**
         * Destroys the title in the aggregation {@link #getTitle title}.
         */
        destroyTitle(): sap.viz.ui5.Line;
        /**
         * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
         */
        destroyToolTip(): sap.viz.ui5.Line;
        /**
         * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
         */
        destroyXAxis(): sap.viz.ui5.Line;
        /**
         * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
         */
        destroyXyContainer(): sap.viz.ui5.Line;
        /**
         * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
         */
        destroyYAxis(): sap.viz.ui5.Line;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Line`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Line;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Line`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Line;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.Line`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Line;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.Line`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Line;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Line`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Line;
        /**
         * Creates a new subclass of class sap.viz.ui5.Line with name `sClassName` and enriches it with the information
         * contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Line;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Line;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Line;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Line;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Line;
        /**
         * Gets content of aggregation {@link #getBackground background}.
         *
         * Module sap.viz.modules.background
         */
        getBackground(): sap.viz.ui5.types.Background;
        /**
         * Gets content of aggregation {@link #getDataLabel dataLabel}.
         *
         * Module sap.viz.modules.datalabel
         */
        getDataLabel(): sap.viz.ui5.types.Datalabel;
        /**
         * Gets content of aggregation {@link #getGeneral general}.
         *
         * Module sap.viz.modules.rootContainer
         */
        getGeneral(): sap.viz.ui5.types.RootContainer;
        /**
         * Gets content of aggregation {@link #getInteraction interaction}.
         *
         * Module sap.viz.modules.controller.interaction
         */
        getInteraction(): sap.viz.ui5.types.controller.Interaction;
        /**
         * Gets content of aggregation {@link #getLegend legend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getLegendGroup legendGroup}.
         *
         * Module sap.viz.modules.legend
         */
        getLegendGroup(): sap.viz.ui5.types.Legend;
        /**
         * Returns a metadata object for class sap.viz.ui5.Line.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets content of aggregation {@link #getPlotArea plotArea}.
         *
         * Module sap.viz.modules.line
         */
        getPlotArea(): sap.viz.ui5.types.Line;
        /**
         * Gets content of aggregation {@link #getTitle title}.
         *
         * Module sap.viz.modules.title
         */
        getTitle(): sap.viz.ui5.types.Title;
        /**
         * Gets content of aggregation {@link #getToolTip toolTip}.
         *
         * Module sap.viz.chart.elements.Tooltip
         */
        getToolTip(): sap.viz.ui5.types.Tooltip;
        /**
         * Gets content of aggregation {@link #getXAxis xAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getXAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getXyContainer xyContainer}.
         *
         * Module sap.viz.modules.xycontainer
         */
        getXyContainer(): sap.viz.ui5.types.XYContainer;
        /**
         * Gets content of aggregation {@link #getYAxis yAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis(): sap.viz.ui5.types.Axis;
        /**
         * Sets the aggregated {@link #getBackground background}.
         */
        setBackground(
          /**
           * The background to set
           */
          oBackground: sap.viz.ui5.types.Background
        ): sap.viz.ui5.Line;
        /**
         * Sets the aggregated {@link #getDataLabel dataLabel}.
         */
        setDataLabel(
          /**
           * The dataLabel to set
           */
          oDataLabel: sap.viz.ui5.types.Datalabel
        ): sap.viz.ui5.Line;
        /**
         * Sets the aggregated {@link #getGeneral general}.
         */
        setGeneral(
          /**
           * The general to set
           */
          oGeneral: sap.viz.ui5.types.RootContainer
        ): sap.viz.ui5.Line;
        /**
         * Sets the aggregated {@link #getInteraction interaction}.
         */
        setInteraction(
          /**
           * The interaction to set
           */
          oInteraction: sap.viz.ui5.types.controller.Interaction
        ): sap.viz.ui5.Line;
        /**
         * Sets the aggregated {@link #getLegend legend}.
         */
        setLegend(
          /**
           * The legend to set
           */
          oLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.Line;
        /**
         * Sets the aggregated {@link #getLegendGroup legendGroup}.
         */
        setLegendGroup(
          /**
           * The legendGroup to set
           */
          oLegendGroup: sap.viz.ui5.types.Legend
        ): sap.viz.ui5.Line;
        /**
         * Sets the aggregated {@link #getPlotArea plotArea}.
         */
        setPlotArea(
          /**
           * The plotArea to set
           */
          oPlotArea: sap.viz.ui5.types.Line
        ): sap.viz.ui5.Line;
        /**
         * Sets the aggregated {@link #getTitle title}.
         */
        setTitle(
          /**
           * The title to set
           */
          oTitle: sap.viz.ui5.types.Title
        ): sap.viz.ui5.Line;
        /**
         * Sets the aggregated {@link #getToolTip toolTip}.
         */
        setToolTip(
          /**
           * The toolTip to set
           */
          oToolTip: sap.viz.ui5.types.Tooltip
        ): sap.viz.ui5.Line;
        /**
         * Sets the aggregated {@link #getXAxis xAxis}.
         */
        setXAxis(
          /**
           * The xAxis to set
           */
          oXAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.Line;
        /**
         * Sets the aggregated {@link #getXyContainer xyContainer}.
         */
        setXyContainer(
          /**
           * The xyContainer to set
           */
          oXyContainer: sap.viz.ui5.types.XYContainer
        ): sap.viz.ui5.Line;
        /**
         * Sets the aggregated {@link #getYAxis yAxis}.
         */
        setYAxis(
          /**
           * The yAxis to set
           */
          oYAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.Line;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Line`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Line` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Line` itself
           */
          oListener?: object
        ): sap.viz.ui5.Line;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Line`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Line` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Line` itself
           */
          oListener?: object
        ): sap.viz.ui5.Line;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Line`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Line` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Line` itself
           */
          oListener?: object
        ): sap.viz.ui5.Line;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Line`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Line` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Line` itself
           */
          oListener?: object
        ): sap.viz.ui5.Line;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Line`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Line` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Line` itself
           */
          oListener?: object
        ): sap.viz.ui5.Line;
      }
      /**
       * @SINCE 1.7.2
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       *
       * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
       * VizFrame}**(`new sap.viz.ui5.controls.VizFrame({'vizType': 'pie'})`) **control to benefit from new charting
       * enhancements and timely support. **
       *
       * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
       * make sure you evaluate it thoroughly before migration.
       * @EXPERIMENTAL (since 1.7.2)
       *
       * Chart sap.viz.ui5.Pie
       */
      class Pie extends sap.viz.ui5.core.BaseChart {
        /**
         * Constructor for a new sap.viz.ui5.Pie
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: PieOpts
        );

        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Pie`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Pie` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Pie` itself
           */
          oListener?: object
        ): sap.viz.ui5.Pie;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Pie`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Pie` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Pie` itself
           */
          oListener?: object
        ): sap.viz.ui5.Pie;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Pie`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Pie` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Pie` itself
           */
          oListener?: object
        ): sap.viz.ui5.Pie;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Pie`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Pie` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Pie` itself
           */
          oListener?: object
        ): sap.viz.ui5.Pie;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Pie`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Pie` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Pie` itself
           */
          oListener?: object
        ): sap.viz.ui5.Pie;
        /**
         * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
         */
        destroyDataLabel(): sap.viz.ui5.Pie;
        /**
         * Destroys the dataTransform in the aggregation {@link #getDataTransform dataTransform}.
         */
        destroyDataTransform(): sap.viz.ui5.Pie;
        /**
         * Destroys the general in the aggregation {@link #getGeneral general}.
         */
        destroyGeneral(): sap.viz.ui5.Pie;
        /**
         * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
         */
        destroyInteraction(): sap.viz.ui5.Pie;
        /**
         * Destroys the legend in the aggregation {@link #getLegend legend}.
         */
        destroyLegend(): sap.viz.ui5.Pie;
        /**
         * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
         */
        destroyLegendGroup(): sap.viz.ui5.Pie;
        /**
         * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
         */
        destroyPlotArea(): sap.viz.ui5.Pie;
        /**
         * Destroys the title in the aggregation {@link #getTitle title}.
         */
        destroyTitle(): sap.viz.ui5.Pie;
        /**
         * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
         */
        destroyToolTip(): sap.viz.ui5.Pie;
        /**
         * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
         */
        destroyXyContainer(): sap.viz.ui5.Pie;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Pie`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Pie;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Pie`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Pie;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.Pie`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Pie;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.Pie`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Pie;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Pie`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Pie;
        /**
         * Creates a new subclass of class sap.viz.ui5.Pie with name `sClassName` and enriches it with the information
         * contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Pie;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Pie;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Pie;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Pie;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Pie;
        /**
         * Gets content of aggregation {@link #getDataLabel dataLabel}.
         *
         * Module sap.viz.modules.datalabel
         */
        getDataLabel(): sap.viz.ui5.types.Datalabel;
        /**
         * Gets content of aggregation {@link #getDataTransform dataTransform}.
         *
         * Module sap.viz.modules.datatransform
         */
        getDataTransform(): sap.viz.ui5.types.Datatransform;
        /**
         * Gets content of aggregation {@link #getGeneral general}.
         *
         * Module sap.viz.modules.rootContainer
         */
        getGeneral(): sap.viz.ui5.types.RootContainer;
        /**
         * Gets content of aggregation {@link #getInteraction interaction}.
         *
         * Module sap.viz.modules.controller.interaction
         */
        getInteraction(): sap.viz.ui5.types.controller.Interaction;
        /**
         * Gets content of aggregation {@link #getLegend legend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getLegendGroup legendGroup}.
         *
         * Module sap.viz.modules.legend
         */
        getLegendGroup(): sap.viz.ui5.types.Legend;
        /**
         * Returns a metadata object for class sap.viz.ui5.Pie.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets content of aggregation {@link #getPlotArea plotArea}.
         *
         * Module sap.viz.modules.pie
         */
        getPlotArea(): sap.viz.ui5.types.Pie;
        /**
         * Gets content of aggregation {@link #getTitle title}.
         *
         * Module sap.viz.modules.title
         */
        getTitle(): sap.viz.ui5.types.Title;
        /**
         * Gets content of aggregation {@link #getToolTip toolTip}.
         *
         * Module sap.viz.chart.elements.Tooltip
         */
        getToolTip(): sap.viz.ui5.types.Tooltip;
        /**
         * Gets content of aggregation {@link #getXyContainer xyContainer}.
         *
         * Module sap.viz.modules.xycontainer
         */
        getXyContainer(): sap.viz.ui5.types.XYContainer;
        /**
         * Sets the aggregated {@link #getDataLabel dataLabel}.
         */
        setDataLabel(
          /**
           * The dataLabel to set
           */
          oDataLabel: sap.viz.ui5.types.Datalabel
        ): sap.viz.ui5.Pie;
        /**
         * Sets the aggregated {@link #getDataTransform dataTransform}.
         */
        setDataTransform(
          /**
           * The dataTransform to set
           */
          oDataTransform: sap.viz.ui5.types.Datatransform
        ): sap.viz.ui5.Pie;
        /**
         * Sets the aggregated {@link #getGeneral general}.
         */
        setGeneral(
          /**
           * The general to set
           */
          oGeneral: sap.viz.ui5.types.RootContainer
        ): sap.viz.ui5.Pie;
        /**
         * Sets the aggregated {@link #getInteraction interaction}.
         */
        setInteraction(
          /**
           * The interaction to set
           */
          oInteraction: sap.viz.ui5.types.controller.Interaction
        ): sap.viz.ui5.Pie;
        /**
         * Sets the aggregated {@link #getLegend legend}.
         */
        setLegend(
          /**
           * The legend to set
           */
          oLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.Pie;
        /**
         * Sets the aggregated {@link #getLegendGroup legendGroup}.
         */
        setLegendGroup(
          /**
           * The legendGroup to set
           */
          oLegendGroup: sap.viz.ui5.types.Legend
        ): sap.viz.ui5.Pie;
        /**
         * Sets the aggregated {@link #getPlotArea plotArea}.
         */
        setPlotArea(
          /**
           * The plotArea to set
           */
          oPlotArea: sap.viz.ui5.types.Pie
        ): sap.viz.ui5.Pie;
        /**
         * Sets the aggregated {@link #getTitle title}.
         */
        setTitle(
          /**
           * The title to set
           */
          oTitle: sap.viz.ui5.types.Title
        ): sap.viz.ui5.Pie;
        /**
         * Sets the aggregated {@link #getToolTip toolTip}.
         */
        setToolTip(
          /**
           * The toolTip to set
           */
          oToolTip: sap.viz.ui5.types.Tooltip
        ): sap.viz.ui5.Pie;
        /**
         * Sets the aggregated {@link #getXyContainer xyContainer}.
         */
        setXyContainer(
          /**
           * The xyContainer to set
           */
          oXyContainer: sap.viz.ui5.types.XYContainer
        ): sap.viz.ui5.Pie;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Pie`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Pie` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Pie` itself
           */
          oListener?: object
        ): sap.viz.ui5.Pie;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Pie`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Pie` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Pie` itself
           */
          oListener?: object
        ): sap.viz.ui5.Pie;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Pie`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Pie` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Pie` itself
           */
          oListener?: object
        ): sap.viz.ui5.Pie;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Pie`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Pie` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Pie` itself
           */
          oListener?: object
        ): sap.viz.ui5.Pie;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Pie`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Pie` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Pie` itself
           */
          oListener?: object
        ): sap.viz.ui5.Pie;
      }
      /**
       * @SINCE 1.7.2
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       *
       * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
       * VizFrame}**(`new sap.viz.ui5.controls.VizFrame({'vizType': 'scatter'})`) **control to benefit from new
       * charting enhancements and timely support. **
       *
       * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
       * make sure you evaluate it thoroughly before migration.
       * @EXPERIMENTAL (since 1.7.2)
       *
       * Chart sap.viz.ui5.Scatter
       */
      class Scatter extends sap.viz.ui5.core.BaseChart {
        /**
         * Constructor for a new sap.viz.ui5.Scatter
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: ScatterOpts
        );

        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Scatter`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Scatter` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Scatter` itself
           */
          oListener?: object
        ): sap.viz.ui5.Scatter;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Scatter`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Scatter` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Scatter` itself
           */
          oListener?: object
        ): sap.viz.ui5.Scatter;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Scatter`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Scatter` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Scatter` itself
           */
          oListener?: object
        ): sap.viz.ui5.Scatter;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Scatter`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Scatter` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Scatter` itself
           */
          oListener?: object
        ): sap.viz.ui5.Scatter;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Scatter`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Scatter` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Scatter` itself
           */
          oListener?: object
        ): sap.viz.ui5.Scatter;
        /**
         * Destroys the background in the aggregation {@link #getBackground background}.
         */
        destroyBackground(): sap.viz.ui5.Scatter;
        /**
         * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
         */
        destroyDataLabel(): sap.viz.ui5.Scatter;
        /**
         * Destroys the dataTransform in the aggregation {@link #getDataTransform dataTransform}.
         */
        destroyDataTransform(): sap.viz.ui5.Scatter;
        /**
         * Destroys the general in the aggregation {@link #getGeneral general}.
         */
        destroyGeneral(): sap.viz.ui5.Scatter;
        /**
         * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
         */
        destroyInteraction(): sap.viz.ui5.Scatter;
        /**
         * Destroys the legend in the aggregation {@link #getLegend legend}.
         */
        destroyLegend(): sap.viz.ui5.Scatter;
        /**
         * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
         */
        destroyLegendGroup(): sap.viz.ui5.Scatter;
        /**
         * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
         */
        destroyPlotArea(): sap.viz.ui5.Scatter;
        /**
         * Destroys the title in the aggregation {@link #getTitle title}.
         */
        destroyTitle(): sap.viz.ui5.Scatter;
        /**
         * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
         */
        destroyToolTip(): sap.viz.ui5.Scatter;
        /**
         * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
         */
        destroyXAxis(): sap.viz.ui5.Scatter;
        /**
         * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
         */
        destroyXyContainer(): sap.viz.ui5.Scatter;
        /**
         * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
         */
        destroyYAxis(): sap.viz.ui5.Scatter;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Scatter`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Scatter;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Scatter`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Scatter;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.Scatter`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Scatter;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.Scatter`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Scatter;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Scatter`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Scatter;
        /**
         * Creates a new subclass of class sap.viz.ui5.Scatter with name `sClassName` and enriches it with the information
         * contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Scatter;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Scatter;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Scatter;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Scatter;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Scatter;
        /**
         * Gets content of aggregation {@link #getBackground background}.
         *
         * Module sap.viz.modules.background
         */
        getBackground(): sap.viz.ui5.types.Background;
        /**
         * Gets content of aggregation {@link #getDataLabel dataLabel}.
         *
         * Module sap.viz.modules.datalabel
         */
        getDataLabel(): sap.viz.ui5.types.Datalabel;
        /**
         * Gets content of aggregation {@link #getDataTransform dataTransform}.
         *
         * Module sap.viz.modules.datatransform
         */
        getDataTransform(): sap.viz.ui5.types.Datatransform;
        /**
         * Gets content of aggregation {@link #getGeneral general}.
         *
         * Module sap.viz.modules.rootContainer
         */
        getGeneral(): sap.viz.ui5.types.RootContainer;
        /**
         * Gets content of aggregation {@link #getInteraction interaction}.
         *
         * Module sap.viz.modules.controller.interaction
         */
        getInteraction(): sap.viz.ui5.types.controller.Interaction;
        /**
         * Gets content of aggregation {@link #getLegend legend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getLegendGroup legendGroup}.
         *
         * Module sap.viz.modules.legend
         */
        getLegendGroup(): sap.viz.ui5.types.Legend;
        /**
         * Returns a metadata object for class sap.viz.ui5.Scatter.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets content of aggregation {@link #getPlotArea plotArea}.
         *
         * Module sap.viz.modules.scatter
         */
        getPlotArea(): sap.viz.ui5.types.Scatter;
        /**
         * Gets content of aggregation {@link #getTitle title}.
         *
         * Module sap.viz.modules.title
         */
        getTitle(): sap.viz.ui5.types.Title;
        /**
         * Gets content of aggregation {@link #getToolTip toolTip}.
         *
         * Module sap.viz.chart.elements.Tooltip
         */
        getToolTip(): sap.viz.ui5.types.Tooltip;
        /**
         * Gets content of aggregation {@link #getXAxis xAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getXAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getXyContainer xyContainer}.
         *
         * Module sap.viz.modules.xycontainer
         */
        getXyContainer(): sap.viz.ui5.types.XYContainer;
        /**
         * Gets content of aggregation {@link #getYAxis yAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis(): sap.viz.ui5.types.Axis;
        /**
         * Sets the aggregated {@link #getBackground background}.
         */
        setBackground(
          /**
           * The background to set
           */
          oBackground: sap.viz.ui5.types.Background
        ): sap.viz.ui5.Scatter;
        /**
         * Sets the aggregated {@link #getDataLabel dataLabel}.
         */
        setDataLabel(
          /**
           * The dataLabel to set
           */
          oDataLabel: sap.viz.ui5.types.Datalabel
        ): sap.viz.ui5.Scatter;
        /**
         * Sets the aggregated {@link #getDataTransform dataTransform}.
         */
        setDataTransform(
          /**
           * The dataTransform to set
           */
          oDataTransform: sap.viz.ui5.types.Datatransform
        ): sap.viz.ui5.Scatter;
        /**
         * Sets the aggregated {@link #getGeneral general}.
         */
        setGeneral(
          /**
           * The general to set
           */
          oGeneral: sap.viz.ui5.types.RootContainer
        ): sap.viz.ui5.Scatter;
        /**
         * Sets the aggregated {@link #getInteraction interaction}.
         */
        setInteraction(
          /**
           * The interaction to set
           */
          oInteraction: sap.viz.ui5.types.controller.Interaction
        ): sap.viz.ui5.Scatter;
        /**
         * Sets the aggregated {@link #getLegend legend}.
         */
        setLegend(
          /**
           * The legend to set
           */
          oLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.Scatter;
        /**
         * Sets the aggregated {@link #getLegendGroup legendGroup}.
         */
        setLegendGroup(
          /**
           * The legendGroup to set
           */
          oLegendGroup: sap.viz.ui5.types.Legend
        ): sap.viz.ui5.Scatter;
        /**
         * Sets the aggregated {@link #getPlotArea plotArea}.
         */
        setPlotArea(
          /**
           * The plotArea to set
           */
          oPlotArea: sap.viz.ui5.types.Scatter
        ): sap.viz.ui5.Scatter;
        /**
         * Sets the aggregated {@link #getTitle title}.
         */
        setTitle(
          /**
           * The title to set
           */
          oTitle: sap.viz.ui5.types.Title
        ): sap.viz.ui5.Scatter;
        /**
         * Sets the aggregated {@link #getToolTip toolTip}.
         */
        setToolTip(
          /**
           * The toolTip to set
           */
          oToolTip: sap.viz.ui5.types.Tooltip
        ): sap.viz.ui5.Scatter;
        /**
         * Sets the aggregated {@link #getXAxis xAxis}.
         */
        setXAxis(
          /**
           * The xAxis to set
           */
          oXAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.Scatter;
        /**
         * Sets the aggregated {@link #getXyContainer xyContainer}.
         */
        setXyContainer(
          /**
           * The xyContainer to set
           */
          oXyContainer: sap.viz.ui5.types.XYContainer
        ): sap.viz.ui5.Scatter;
        /**
         * Sets the aggregated {@link #getYAxis yAxis}.
         */
        setYAxis(
          /**
           * The yAxis to set
           */
          oYAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.Scatter;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Scatter`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Scatter` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Scatter` itself
           */
          oListener?: object
        ): sap.viz.ui5.Scatter;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Scatter`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Scatter` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Scatter` itself
           */
          oListener?: object
        ): sap.viz.ui5.Scatter;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Scatter`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Scatter` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Scatter` itself
           */
          oListener?: object
        ): sap.viz.ui5.Scatter;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Scatter`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Scatter` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Scatter` itself
           */
          oListener?: object
        ): sap.viz.ui5.Scatter;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Scatter`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Scatter` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Scatter` itself
           */
          oListener?: object
        ): sap.viz.ui5.Scatter;
      }
      /**
       * @SINCE 1.7.2
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       *
       * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
       * VizFrame}**(`new sap.viz.ui5.controls.VizFrame({'vizType': 'stacked_column'})`) **control to benefit
       * from new charting enhancements and timely support. **
       *
       * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
       * make sure you evaluate it thoroughly before migration.
       * @EXPERIMENTAL (since 1.7.2)
       *
       * Chart sap.viz.ui5.StackedColumn
       */
      class StackedColumn extends sap.viz.ui5.core.BaseChart {
        /**
         * Constructor for a new sap.viz.ui5.StackedColumn
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: StackedColumnOpts
        );

        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.StackedColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.StackedColumn` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.StackedColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.StackedColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.StackedColumn` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.StackedColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.StackedColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.StackedColumn` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.StackedColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.StackedColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.StackedColumn` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.StackedColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.StackedColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.StackedColumn` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.StackedColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn;
        /**
         * Destroys the background in the aggregation {@link #getBackground background}.
         */
        destroyBackground(): sap.viz.ui5.StackedColumn;
        /**
         * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
         */
        destroyDataLabel(): sap.viz.ui5.StackedColumn;
        /**
         * Destroys the general in the aggregation {@link #getGeneral general}.
         */
        destroyGeneral(): sap.viz.ui5.StackedColumn;
        /**
         * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
         */
        destroyInteraction(): sap.viz.ui5.StackedColumn;
        /**
         * Destroys the legend in the aggregation {@link #getLegend legend}.
         */
        destroyLegend(): sap.viz.ui5.StackedColumn;
        /**
         * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
         */
        destroyLegendGroup(): sap.viz.ui5.StackedColumn;
        /**
         * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
         */
        destroyPlotArea(): sap.viz.ui5.StackedColumn;
        /**
         * Destroys the title in the aggregation {@link #getTitle title}.
         */
        destroyTitle(): sap.viz.ui5.StackedColumn;
        /**
         * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
         */
        destroyToolTip(): sap.viz.ui5.StackedColumn;
        /**
         * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
         */
        destroyXAxis(): sap.viz.ui5.StackedColumn;
        /**
         * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
         */
        destroyXyContainer(): sap.viz.ui5.StackedColumn;
        /**
         * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
         */
        destroyYAxis(): sap.viz.ui5.StackedColumn;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.StackedColumn`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.StackedColumn`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.StackedColumn`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.StackedColumn`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.StackedColumn`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn;
        /**
         * Creates a new subclass of class sap.viz.ui5.StackedColumn with name `sClassName` and enriches it with
         * the information contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.StackedColumn;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.StackedColumn;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.StackedColumn;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.StackedColumn;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.StackedColumn;
        /**
         * Gets content of aggregation {@link #getBackground background}.
         *
         * Module sap.viz.modules.background
         */
        getBackground(): sap.viz.ui5.types.Background;
        /**
         * Gets content of aggregation {@link #getDataLabel dataLabel}.
         *
         * Module sap.viz.modules.datalabel
         */
        getDataLabel(): sap.viz.ui5.types.Datalabel;
        /**
         * Gets content of aggregation {@link #getGeneral general}.
         *
         * Module sap.viz.modules.rootContainer
         */
        getGeneral(): sap.viz.ui5.types.RootContainer;
        /**
         * Gets content of aggregation {@link #getInteraction interaction}.
         *
         * Module sap.viz.modules.controller.interaction
         */
        getInteraction(): sap.viz.ui5.types.controller.Interaction;
        /**
         * Gets content of aggregation {@link #getLegend legend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getLegendGroup legendGroup}.
         *
         * Module sap.viz.modules.legend
         */
        getLegendGroup(): sap.viz.ui5.types.Legend;
        /**
         * Returns a metadata object for class sap.viz.ui5.StackedColumn.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets content of aggregation {@link #getPlotArea plotArea}.
         *
         * Module sap.viz.modules.stackedverticalbar
         */
        getPlotArea(): sap.viz.ui5.types.StackedVerticalBar;
        /**
         * Gets content of aggregation {@link #getTitle title}.
         *
         * Module sap.viz.modules.title
         */
        getTitle(): sap.viz.ui5.types.Title;
        /**
         * Gets content of aggregation {@link #getToolTip toolTip}.
         *
         * Module sap.viz.chart.elements.Tooltip
         */
        getToolTip(): sap.viz.ui5.types.Tooltip;
        /**
         * Gets content of aggregation {@link #getXAxis xAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getXAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getXyContainer xyContainer}.
         *
         * Module sap.viz.modules.xycontainer
         */
        getXyContainer(): sap.viz.ui5.types.XYContainer;
        /**
         * Gets content of aggregation {@link #getYAxis yAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis(): sap.viz.ui5.types.Axis;
        /**
         * Sets the aggregated {@link #getBackground background}.
         */
        setBackground(
          /**
           * The background to set
           */
          oBackground: sap.viz.ui5.types.Background
        ): sap.viz.ui5.StackedColumn;
        /**
         * Sets the aggregated {@link #getDataLabel dataLabel}.
         */
        setDataLabel(
          /**
           * The dataLabel to set
           */
          oDataLabel: sap.viz.ui5.types.Datalabel
        ): sap.viz.ui5.StackedColumn;
        /**
         * Sets the aggregated {@link #getGeneral general}.
         */
        setGeneral(
          /**
           * The general to set
           */
          oGeneral: sap.viz.ui5.types.RootContainer
        ): sap.viz.ui5.StackedColumn;
        /**
         * Sets the aggregated {@link #getInteraction interaction}.
         */
        setInteraction(
          /**
           * The interaction to set
           */
          oInteraction: sap.viz.ui5.types.controller.Interaction
        ): sap.viz.ui5.StackedColumn;
        /**
         * Sets the aggregated {@link #getLegend legend}.
         */
        setLegend(
          /**
           * The legend to set
           */
          oLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.StackedColumn;
        /**
         * Sets the aggregated {@link #getLegendGroup legendGroup}.
         */
        setLegendGroup(
          /**
           * The legendGroup to set
           */
          oLegendGroup: sap.viz.ui5.types.Legend
        ): sap.viz.ui5.StackedColumn;
        /**
         * Sets the aggregated {@link #getPlotArea plotArea}.
         */
        setPlotArea(
          /**
           * The plotArea to set
           */
          oPlotArea: sap.viz.ui5.types.StackedVerticalBar
        ): sap.viz.ui5.StackedColumn;
        /**
         * Sets the aggregated {@link #getTitle title}.
         */
        setTitle(
          /**
           * The title to set
           */
          oTitle: sap.viz.ui5.types.Title
        ): sap.viz.ui5.StackedColumn;
        /**
         * Sets the aggregated {@link #getToolTip toolTip}.
         */
        setToolTip(
          /**
           * The toolTip to set
           */
          oToolTip: sap.viz.ui5.types.Tooltip
        ): sap.viz.ui5.StackedColumn;
        /**
         * Sets the aggregated {@link #getXAxis xAxis}.
         */
        setXAxis(
          /**
           * The xAxis to set
           */
          oXAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.StackedColumn;
        /**
         * Sets the aggregated {@link #getXyContainer xyContainer}.
         */
        setXyContainer(
          /**
           * The xyContainer to set
           */
          oXyContainer: sap.viz.ui5.types.XYContainer
        ): sap.viz.ui5.StackedColumn;
        /**
         * Sets the aggregated {@link #getYAxis yAxis}.
         */
        setYAxis(
          /**
           * The yAxis to set
           */
          oYAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.StackedColumn;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.StackedColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.StackedColumn` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.StackedColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.StackedColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.StackedColumn` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.StackedColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.StackedColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.StackedColumn` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.StackedColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.StackedColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.StackedColumn` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.StackedColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.StackedColumn`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.StackedColumn` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.StackedColumn` itself
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn;
      }
      /**
       * @SINCE 1.7.2
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       *
       * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
       * VizFrame}**(`new sap.viz.ui5.controls.VizFrame({'vizType': '100_stacked_column'})`) **control to benefit
       * from new charting enhancements and timely support. **
       *
       * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
       * make sure you evaluate it thoroughly before migration.
       * @EXPERIMENTAL (since 1.7.2)
       *
       * Chart sap.viz.ui5.StackedColumn100
       */
      class StackedColumn100 extends sap.viz.ui5.core.BaseChart {
        /**
         * Constructor for a new sap.viz.ui5.StackedColumn100
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: StackedColumn100Opts
        );

        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.StackedColumn100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.StackedColumn100` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.StackedColumn100` itself
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.StackedColumn100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.StackedColumn100` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.StackedColumn100` itself
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn100;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.StackedColumn100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.StackedColumn100` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.StackedColumn100` itself
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn100;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.StackedColumn100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.StackedColumn100` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.StackedColumn100` itself
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.StackedColumn100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.StackedColumn100` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.StackedColumn100` itself
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn100;
        /**
         * Destroys the background in the aggregation {@link #getBackground background}.
         */
        destroyBackground(): sap.viz.ui5.StackedColumn100;
        /**
         * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
         */
        destroyDataLabel(): sap.viz.ui5.StackedColumn100;
        /**
         * Destroys the general in the aggregation {@link #getGeneral general}.
         */
        destroyGeneral(): sap.viz.ui5.StackedColumn100;
        /**
         * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
         */
        destroyInteraction(): sap.viz.ui5.StackedColumn100;
        /**
         * Destroys the legend in the aggregation {@link #getLegend legend}.
         */
        destroyLegend(): sap.viz.ui5.StackedColumn100;
        /**
         * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
         */
        destroyLegendGroup(): sap.viz.ui5.StackedColumn100;
        /**
         * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
         */
        destroyPlotArea(): sap.viz.ui5.StackedColumn100;
        /**
         * Destroys the title in the aggregation {@link #getTitle title}.
         */
        destroyTitle(): sap.viz.ui5.StackedColumn100;
        /**
         * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
         */
        destroyToolTip(): sap.viz.ui5.StackedColumn100;
        /**
         * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
         */
        destroyXAxis(): sap.viz.ui5.StackedColumn100;
        /**
         * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
         */
        destroyXyContainer(): sap.viz.ui5.StackedColumn100;
        /**
         * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
         */
        destroyYAxis(): sap.viz.ui5.StackedColumn100;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.StackedColumn100`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.StackedColumn100`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn100;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.StackedColumn100`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn100;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.StackedColumn100`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.StackedColumn100`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn100;
        /**
         * Creates a new subclass of class sap.viz.ui5.StackedColumn100 with name `sClassName` and enriches it with
         * the information contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.StackedColumn100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.StackedColumn100;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.StackedColumn100;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.StackedColumn100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.StackedColumn100;
        /**
         * Gets content of aggregation {@link #getBackground background}.
         *
         * Module sap.viz.modules.background
         */
        getBackground(): sap.viz.ui5.types.Background;
        /**
         * Gets content of aggregation {@link #getDataLabel dataLabel}.
         *
         * Module sap.viz.modules.datalabel
         */
        getDataLabel(): sap.viz.ui5.types.Datalabel;
        /**
         * Gets content of aggregation {@link #getGeneral general}.
         *
         * Module sap.viz.modules.rootContainer
         */
        getGeneral(): sap.viz.ui5.types.RootContainer;
        /**
         * Gets content of aggregation {@link #getInteraction interaction}.
         *
         * Module sap.viz.modules.controller.interaction
         */
        getInteraction(): sap.viz.ui5.types.controller.Interaction;
        /**
         * Gets content of aggregation {@link #getLegend legend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getLegendGroup legendGroup}.
         *
         * Module sap.viz.modules.legend
         */
        getLegendGroup(): sap.viz.ui5.types.Legend;
        /**
         * Returns a metadata object for class sap.viz.ui5.StackedColumn100.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets content of aggregation {@link #getPlotArea plotArea}.
         *
         * Module sap.viz.modules.stackedverticalbar
         */
        getPlotArea(): sap.viz.ui5.types.StackedVerticalBar;
        /**
         * Gets content of aggregation {@link #getTitle title}.
         *
         * Module sap.viz.modules.title
         */
        getTitle(): sap.viz.ui5.types.Title;
        /**
         * Gets content of aggregation {@link #getToolTip toolTip}.
         *
         * Module sap.viz.chart.elements.Tooltip
         */
        getToolTip(): sap.viz.ui5.types.Tooltip;
        /**
         * Gets content of aggregation {@link #getXAxis xAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getXAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getXyContainer xyContainer}.
         *
         * Module sap.viz.modules.xycontainer
         */
        getXyContainer(): sap.viz.ui5.types.XYContainer;
        /**
         * Gets content of aggregation {@link #getYAxis yAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis(): sap.viz.ui5.types.Axis;
        /**
         * Sets the aggregated {@link #getBackground background}.
         */
        setBackground(
          /**
           * The background to set
           */
          oBackground: sap.viz.ui5.types.Background
        ): sap.viz.ui5.StackedColumn100;
        /**
         * Sets the aggregated {@link #getDataLabel dataLabel}.
         */
        setDataLabel(
          /**
           * The dataLabel to set
           */
          oDataLabel: sap.viz.ui5.types.Datalabel
        ): sap.viz.ui5.StackedColumn100;
        /**
         * Sets the aggregated {@link #getGeneral general}.
         */
        setGeneral(
          /**
           * The general to set
           */
          oGeneral: sap.viz.ui5.types.RootContainer
        ): sap.viz.ui5.StackedColumn100;
        /**
         * Sets the aggregated {@link #getInteraction interaction}.
         */
        setInteraction(
          /**
           * The interaction to set
           */
          oInteraction: sap.viz.ui5.types.controller.Interaction
        ): sap.viz.ui5.StackedColumn100;
        /**
         * Sets the aggregated {@link #getLegend legend}.
         */
        setLegend(
          /**
           * The legend to set
           */
          oLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.StackedColumn100;
        /**
         * Sets the aggregated {@link #getLegendGroup legendGroup}.
         */
        setLegendGroup(
          /**
           * The legendGroup to set
           */
          oLegendGroup: sap.viz.ui5.types.Legend
        ): sap.viz.ui5.StackedColumn100;
        /**
         * Sets the aggregated {@link #getPlotArea plotArea}.
         */
        setPlotArea(
          /**
           * The plotArea to set
           */
          oPlotArea: sap.viz.ui5.types.StackedVerticalBar
        ): sap.viz.ui5.StackedColumn100;
        /**
         * Sets the aggregated {@link #getTitle title}.
         */
        setTitle(
          /**
           * The title to set
           */
          oTitle: sap.viz.ui5.types.Title
        ): sap.viz.ui5.StackedColumn100;
        /**
         * Sets the aggregated {@link #getToolTip toolTip}.
         */
        setToolTip(
          /**
           * The toolTip to set
           */
          oToolTip: sap.viz.ui5.types.Tooltip
        ): sap.viz.ui5.StackedColumn100;
        /**
         * Sets the aggregated {@link #getXAxis xAxis}.
         */
        setXAxis(
          /**
           * The xAxis to set
           */
          oXAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.StackedColumn100;
        /**
         * Sets the aggregated {@link #getXyContainer xyContainer}.
         */
        setXyContainer(
          /**
           * The xyContainer to set
           */
          oXyContainer: sap.viz.ui5.types.XYContainer
        ): sap.viz.ui5.StackedColumn100;
        /**
         * Sets the aggregated {@link #getYAxis yAxis}.
         */
        setYAxis(
          /**
           * The yAxis to set
           */
          oYAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.StackedColumn100;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.StackedColumn100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.StackedColumn100` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.StackedColumn100` itself
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.StackedColumn100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.StackedColumn100` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.StackedColumn100` itself
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn100;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.StackedColumn100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.StackedColumn100` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.StackedColumn100` itself
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn100;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.StackedColumn100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.StackedColumn100` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.StackedColumn100` itself
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn100;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.StackedColumn100`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.StackedColumn100` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.StackedColumn100` itself
           */
          oListener?: object
        ): sap.viz.ui5.StackedColumn100;
      }
      /**
       * @SINCE 1.7.2
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       *
       * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
       * VizFrame}**(`new sap.viz.ui5.controls.VizFrame({'vizType': 'time_bubble'})`) **control to benefit from
       * new charting enhancements and timely support. **
       *
       * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
       * make sure you evaluate it thoroughly before migration.
       * @EXPERIMENTAL (since 1.7.2)
       *
       * Chart sap.viz.ui5.TimeBubble
       */
      class TimeBubble extends sap.viz.ui5.core.BaseChart {
        /**
         * Constructor for a new sap.viz.ui5.TimeBubble
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: TimeBubbleOpts
        );

        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.TimeBubble`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.TimeBubble` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.TimeBubble` itself
           */
          oListener?: object
        ): sap.viz.ui5.TimeBubble;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.TimeBubble`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.TimeBubble` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.TimeBubble` itself
           */
          oListener?: object
        ): sap.viz.ui5.TimeBubble;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.TimeBubble`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.TimeBubble` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.TimeBubble` itself
           */
          oListener?: object
        ): sap.viz.ui5.TimeBubble;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.TimeBubble`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.TimeBubble` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.TimeBubble` itself
           */
          oListener?: object
        ): sap.viz.ui5.TimeBubble;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.TimeBubble`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.TimeBubble` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.TimeBubble` itself
           */
          oListener?: object
        ): sap.viz.ui5.TimeBubble;
        /**
         * Destroys the background in the aggregation {@link #getBackground background}.
         */
        destroyBackground(): sap.viz.ui5.TimeBubble;
        /**
         * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
         */
        destroyDataLabel(): sap.viz.ui5.TimeBubble;
        /**
         * Destroys the general in the aggregation {@link #getGeneral general}.
         */
        destroyGeneral(): sap.viz.ui5.TimeBubble;
        /**
         * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
         */
        destroyInteraction(): sap.viz.ui5.TimeBubble;
        /**
         * Destroys the legend in the aggregation {@link #getLegend legend}.
         */
        destroyLegend(): sap.viz.ui5.TimeBubble;
        /**
         * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
         */
        destroyLegendGroup(): sap.viz.ui5.TimeBubble;
        /**
         * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
         */
        destroyPlotArea(): sap.viz.ui5.TimeBubble;
        /**
         * Destroys the sizeLegend in the aggregation {@link #getSizeLegend sizeLegend}.
         */
        destroySizeLegend(): sap.viz.ui5.TimeBubble;
        /**
         * Destroys the title in the aggregation {@link #getTitle title}.
         */
        destroyTitle(): sap.viz.ui5.TimeBubble;
        /**
         * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
         */
        destroyToolTip(): sap.viz.ui5.TimeBubble;
        /**
         * Destroys the xAxis in the aggregation {@link #getXAxis xAxis}.
         */
        destroyXAxis(): sap.viz.ui5.TimeBubble;
        /**
         * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
         */
        destroyXyContainer(): sap.viz.ui5.TimeBubble;
        /**
         * Destroys the yAxis in the aggregation {@link #getYAxis yAxis}.
         */
        destroyYAxis(): sap.viz.ui5.TimeBubble;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.TimeBubble`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.TimeBubble;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.TimeBubble`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.TimeBubble;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.TimeBubble`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.TimeBubble;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.TimeBubble`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.TimeBubble;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.TimeBubble`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.TimeBubble;
        /**
         * Creates a new subclass of class sap.viz.ui5.TimeBubble with name `sClassName` and enriches it with the
         * information contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.TimeBubble;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.TimeBubble;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.TimeBubble;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.TimeBubble;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.TimeBubble;
        /**
         * Gets content of aggregation {@link #getBackground background}.
         *
         * Module sap.viz.modules.background
         */
        getBackground(): sap.viz.ui5.types.Background;
        /**
         * Gets content of aggregation {@link #getDataLabel dataLabel}.
         *
         * Module sap.viz.modules.datalabel
         */
        getDataLabel(): sap.viz.ui5.types.Datalabel;
        /**
         * Gets content of aggregation {@link #getGeneral general}.
         *
         * Module sap.viz.modules.rootContainer
         */
        getGeneral(): sap.viz.ui5.types.RootContainer;
        /**
         * Gets content of aggregation {@link #getInteraction interaction}.
         *
         * Module sap.viz.modules.controller.interaction
         */
        getInteraction(): sap.viz.ui5.types.controller.Interaction;
        /**
         * Gets content of aggregation {@link #getLegend legend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getLegendGroup legendGroup}.
         *
         * Module sap.viz.modules.legend
         */
        getLegendGroup(): sap.viz.ui5.types.Legend;
        /**
         * Returns a metadata object for class sap.viz.ui5.TimeBubble.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets content of aggregation {@link #getPlotArea plotArea}.
         *
         * Module sap.viz.modules.bubble
         */
        getPlotArea(): sap.viz.ui5.types.Bubble;
        /**
         * Gets content of aggregation {@link #getSizeLegend sizeLegend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getSizeLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getTitle title}.
         *
         * Module sap.viz.modules.title
         */
        getTitle(): sap.viz.ui5.types.Title;
        /**
         * Gets content of aggregation {@link #getToolTip toolTip}.
         *
         * Module sap.viz.chart.elements.Tooltip
         */
        getToolTip(): sap.viz.ui5.types.Tooltip;
        /**
         * Gets content of aggregation {@link #getXAxis xAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getXAxis(): sap.viz.ui5.types.Axis;
        /**
         * Gets content of aggregation {@link #getXyContainer xyContainer}.
         *
         * Module sap.viz.modules.xycontainer
         */
        getXyContainer(): sap.viz.ui5.types.XYContainer;
        /**
         * Gets content of aggregation {@link #getYAxis yAxis}.
         *
         * Module sap.viz.modules.axis
         */
        getYAxis(): sap.viz.ui5.types.Axis;
        /**
         * Sets the aggregated {@link #getBackground background}.
         */
        setBackground(
          /**
           * The background to set
           */
          oBackground: sap.viz.ui5.types.Background
        ): sap.viz.ui5.TimeBubble;
        /**
         * Sets the aggregated {@link #getDataLabel dataLabel}.
         */
        setDataLabel(
          /**
           * The dataLabel to set
           */
          oDataLabel: sap.viz.ui5.types.Datalabel
        ): sap.viz.ui5.TimeBubble;
        /**
         * Sets the aggregated {@link #getGeneral general}.
         */
        setGeneral(
          /**
           * The general to set
           */
          oGeneral: sap.viz.ui5.types.RootContainer
        ): sap.viz.ui5.TimeBubble;
        /**
         * Sets the aggregated {@link #getInteraction interaction}.
         */
        setInteraction(
          /**
           * The interaction to set
           */
          oInteraction: sap.viz.ui5.types.controller.Interaction
        ): sap.viz.ui5.TimeBubble;
        /**
         * Sets the aggregated {@link #getLegend legend}.
         */
        setLegend(
          /**
           * The legend to set
           */
          oLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.TimeBubble;
        /**
         * Sets the aggregated {@link #getLegendGroup legendGroup}.
         */
        setLegendGroup(
          /**
           * The legendGroup to set
           */
          oLegendGroup: sap.viz.ui5.types.Legend
        ): sap.viz.ui5.TimeBubble;
        /**
         * Sets the aggregated {@link #getPlotArea plotArea}.
         */
        setPlotArea(
          /**
           * The plotArea to set
           */
          oPlotArea: sap.viz.ui5.types.Bubble
        ): sap.viz.ui5.TimeBubble;
        /**
         * Sets the aggregated {@link #getSizeLegend sizeLegend}.
         */
        setSizeLegend(
          /**
           * The sizeLegend to set
           */
          oSizeLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.TimeBubble;
        /**
         * Sets the aggregated {@link #getTitle title}.
         */
        setTitle(
          /**
           * The title to set
           */
          oTitle: sap.viz.ui5.types.Title
        ): sap.viz.ui5.TimeBubble;
        /**
         * Sets the aggregated {@link #getToolTip toolTip}.
         */
        setToolTip(
          /**
           * The toolTip to set
           */
          oToolTip: sap.viz.ui5.types.Tooltip
        ): sap.viz.ui5.TimeBubble;
        /**
         * Sets the aggregated {@link #getXAxis xAxis}.
         */
        setXAxis(
          /**
           * The xAxis to set
           */
          oXAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.TimeBubble;
        /**
         * Sets the aggregated {@link #getXyContainer xyContainer}.
         */
        setXyContainer(
          /**
           * The xyContainer to set
           */
          oXyContainer: sap.viz.ui5.types.XYContainer
        ): sap.viz.ui5.TimeBubble;
        /**
         * Sets the aggregated {@link #getYAxis yAxis}.
         */
        setYAxis(
          /**
           * The yAxis to set
           */
          oYAxis: sap.viz.ui5.types.Axis
        ): sap.viz.ui5.TimeBubble;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.TimeBubble`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.TimeBubble` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.TimeBubble` itself
           */
          oListener?: object
        ): sap.viz.ui5.TimeBubble;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.TimeBubble`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.TimeBubble` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.TimeBubble` itself
           */
          oListener?: object
        ): sap.viz.ui5.TimeBubble;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.TimeBubble`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.TimeBubble` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.TimeBubble` itself
           */
          oListener?: object
        ): sap.viz.ui5.TimeBubble;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.TimeBubble`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.TimeBubble` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.TimeBubble` itself
           */
          oListener?: object
        ): sap.viz.ui5.TimeBubble;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.TimeBubble`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.TimeBubble` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.TimeBubble` itself
           */
          oListener?: object
        ): sap.viz.ui5.TimeBubble;
      }
      /**
       * @SINCE 1.7.2
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       * @EXPERIMENTAL (since 1.7.2)
       *
       * Chart sap.viz.ui5.Treemap
       */
      class Treemap extends sap.viz.ui5.core.BaseChart {
        /**
         * Constructor for a new sap.viz.ui5.Treemap
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: TreemapOpts
        );

        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Treemap`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Treemap` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Treemap` itself
           */
          oListener?: object
        ): sap.viz.ui5.Treemap;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Treemap`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Treemap` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Treemap` itself
           */
          oListener?: object
        ): sap.viz.ui5.Treemap;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Treemap`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Treemap` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Treemap` itself
           */
          oListener?: object
        ): sap.viz.ui5.Treemap;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Treemap`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Treemap` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Treemap` itself
           */
          oListener?: object
        ): sap.viz.ui5.Treemap;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Treemap`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Treemap` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Treemap` itself
           */
          oListener?: object
        ): sap.viz.ui5.Treemap;
        /**
         * Destroys the dataLabel in the aggregation {@link #getDataLabel dataLabel}.
         */
        destroyDataLabel(): sap.viz.ui5.Treemap;
        /**
         * Destroys the general in the aggregation {@link #getGeneral general}.
         */
        destroyGeneral(): sap.viz.ui5.Treemap;
        /**
         * Destroys the interaction in the aggregation {@link #getInteraction interaction}.
         */
        destroyInteraction(): sap.viz.ui5.Treemap;
        /**
         * Destroys the legend in the aggregation {@link #getLegend legend}.
         */
        destroyLegend(): sap.viz.ui5.Treemap;
        /**
         * Destroys the legendGroup in the aggregation {@link #getLegendGroup legendGroup}.
         */
        destroyLegendGroup(): sap.viz.ui5.Treemap;
        /**
         * Destroys the plotArea in the aggregation {@link #getPlotArea plotArea}.
         */
        destroyPlotArea(): sap.viz.ui5.Treemap;
        /**
         * Destroys the title in the aggregation {@link #getTitle title}.
         */
        destroyTitle(): sap.viz.ui5.Treemap;
        /**
         * Destroys the toolTip in the aggregation {@link #getToolTip toolTip}.
         */
        destroyToolTip(): sap.viz.ui5.Treemap;
        /**
         * Destroys the xyContainer in the aggregation {@link #getXyContainer xyContainer}.
         */
        destroyXyContainer(): sap.viz.ui5.Treemap;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Treemap`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Treemap;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Treemap`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Treemap;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.Treemap`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Treemap;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.Treemap`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Treemap;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Treemap`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.Treemap;
        /**
         * Creates a new subclass of class sap.viz.ui5.Treemap with name `sClassName` and enriches it with the information
         * contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.core.BaseChart.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Treemap;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Treemap;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Treemap;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Treemap;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.Treemap;
        /**
         * Gets content of aggregation {@link #getDataLabel dataLabel}.
         *
         * Module sap.viz.modules.datalabel
         */
        getDataLabel(): sap.viz.ui5.types.Datalabel;
        /**
         * Gets content of aggregation {@link #getGeneral general}.
         *
         * Module sap.viz.modules.rootContainer
         */
        getGeneral(): sap.viz.ui5.types.RootContainer;
        /**
         * Gets content of aggregation {@link #getInteraction interaction}.
         *
         * Module sap.viz.modules.controller.interaction
         */
        getInteraction(): sap.viz.ui5.types.controller.Interaction;
        /**
         * Gets content of aggregation {@link #getLegend legend}.
         *
         * Module sap.viz.modules.legend.common
         */
        getLegend(): sap.viz.ui5.types.legend.Common;
        /**
         * Gets content of aggregation {@link #getLegendGroup legendGroup}.
         *
         * Module sap.viz.modules.legend
         */
        getLegendGroup(): sap.viz.ui5.types.Legend;
        /**
         * Returns a metadata object for class sap.viz.ui5.Treemap.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets content of aggregation {@link #getPlotArea plotArea}.
         *
         * Module sap.viz.modules.treemap
         */
        getPlotArea(): sap.viz.ui5.types.Treemap;
        /**
         * Gets content of aggregation {@link #getTitle title}.
         *
         * Module sap.viz.modules.title
         */
        getTitle(): sap.viz.ui5.types.Title;
        /**
         * Gets content of aggregation {@link #getToolTip toolTip}.
         *
         * Module sap.viz.chart.elements.Tooltip
         */
        getToolTip(): sap.viz.ui5.types.Tooltip;
        /**
         * Gets content of aggregation {@link #getXyContainer xyContainer}.
         *
         * Module sap.viz.modules.xycontainer
         */
        getXyContainer(): sap.viz.ui5.types.XYContainer;
        /**
         * Sets the aggregated {@link #getDataLabel dataLabel}.
         */
        setDataLabel(
          /**
           * The dataLabel to set
           */
          oDataLabel: sap.viz.ui5.types.Datalabel
        ): sap.viz.ui5.Treemap;
        /**
         * Sets the aggregated {@link #getGeneral general}.
         */
        setGeneral(
          /**
           * The general to set
           */
          oGeneral: sap.viz.ui5.types.RootContainer
        ): sap.viz.ui5.Treemap;
        /**
         * Sets the aggregated {@link #getInteraction interaction}.
         */
        setInteraction(
          /**
           * The interaction to set
           */
          oInteraction: sap.viz.ui5.types.controller.Interaction
        ): sap.viz.ui5.Treemap;
        /**
         * Sets the aggregated {@link #getLegend legend}.
         */
        setLegend(
          /**
           * The legend to set
           */
          oLegend: sap.viz.ui5.types.legend.Common
        ): sap.viz.ui5.Treemap;
        /**
         * Sets the aggregated {@link #getLegendGroup legendGroup}.
         */
        setLegendGroup(
          /**
           * The legendGroup to set
           */
          oLegendGroup: sap.viz.ui5.types.Legend
        ): sap.viz.ui5.Treemap;
        /**
         * Sets the aggregated {@link #getPlotArea plotArea}.
         */
        setPlotArea(
          /**
           * The plotArea to set
           */
          oPlotArea: sap.viz.ui5.types.Treemap
        ): sap.viz.ui5.Treemap;
        /**
         * Sets the aggregated {@link #getTitle title}.
         */
        setTitle(
          /**
           * The title to set
           */
          oTitle: sap.viz.ui5.types.Title
        ): sap.viz.ui5.Treemap;
        /**
         * Sets the aggregated {@link #getToolTip toolTip}.
         */
        setToolTip(
          /**
           * The toolTip to set
           */
          oToolTip: sap.viz.ui5.types.Tooltip
        ): sap.viz.ui5.Treemap;
        /**
         * Sets the aggregated {@link #getXyContainer xyContainer}.
         */
        setXyContainer(
          /**
           * The xyContainer to set
           */
          oXyContainer: sap.viz.ui5.types.XYContainer
        ): sap.viz.ui5.Treemap;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.Treemap`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Treemap` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Treemap` itself
           */
          oListener?: object
        ): sap.viz.ui5.Treemap;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.Treemap`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Treemap` itself.
         *
         * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Treemap` itself
           */
          oListener?: object
        ): sap.viz.ui5.Treemap;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.Treemap`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Treemap` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Treemap` itself
           */
          oListener?: object
        ): sap.viz.ui5.Treemap;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.Treemap`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Treemap` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Treemap` itself
           */
          oListener?: object
        ): sap.viz.ui5.Treemap;
        /**
         * @deprecated (since 1.19) - This Property has been deprecated. This interface will be removed from the
         * SAPUI5 delivery in one of the next releases.
         *
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.Treemap`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.Treemap` itself.
         *
         * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations)
         * instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would
         * be passed in accordance with the following format.{name:"showTooltip",data:{body:[{ //All measures
         * name:"...",val:[{//measure value is an array containing only one item value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."},selectedValues:...//this
         * number specify how many values are selected}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.Treemap` itself
           */
          oListener?: object
        ): sap.viz.ui5.Treemap;
      }
      /**
       * @SINCE 1.19.0
       * @deprecated (since 1.32.0) - The chart controls in the `sap.viz.ui5` package (which were always marked
       * as experimental) have been deprecated since 1.32.0. They are no longer actively developed and
       * won't receive new features or improvements, only important bug fixes. They will only remain in the SAPUI5
       * distribution for backward compatibility.
       *
       * **SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame
       * VizFrame} control to benefit from new charting enhancements and timely support. **
       *
       * **Note**: As the feature set, design and API usage of VizFrame might differ from the old chart controls,
       * make sure you evaluate it thoroughly before migration.
       * @EXPERIMENTAL (since 1.19.0)
       *
       * Controls ui5/VizContainer
       */
      class VizContainer extends sap.viz.ui5.controls.common.BaseControl {
        /**
         * Constructor for a new ui5/VizContainer.
         *
         * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
         * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
         * of the syntax of the settings object.
         */
        constructor(
          /**
           * id for the new control, generated automatically if no id is given
           */
          sId?: string,
          /**
           * initial settings for the new control
           */
          mSettings?: VizContainerOpts
        );

        /**
         * Adds some analysisObjectsForPicker to the aggregation {@link #getAnalysisObjectsForPicker analysisObjectsForPicker}.
         */
        addAnalysisObjectsForPicker(
          /**
           * The analysisObjectsForPicker to add; if empty, nothing is inserted
           */
          oAnalysisObjectsForPicker: sap.viz.ui5.controls.common.feeds.AnalysisObject
        ): sap.viz.ui5.VizContainer;
        /**
         * Adds some feed to the aggregation {@link #getFeeds feeds}.
         */
        addFeed(
          /**
           * The feed to add; if empty, nothing is inserted
           */
          oFeed: sap.viz.ui5.controls.common.feeds.FeedItem
        ): sap.viz.ui5.VizContainer;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.VizContainer`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.VizContainer` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.VizContainer` itself
           */
          oListener?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:feedsChanged feedsChanged} event of this `sap.viz.ui5.VizContainer`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.VizContainer` itself.
         *
         * Dispatches "feedsChanged" event when the feeding changes due to add/remove/change feeding items on feeding
         * panel, drag and drop object onto VizFrame, or switch chart type by UI operation. Application should listen
         * to "feedsChanged" event to get the corresponding data and set it back to VizFrame to to update the visualization
         * with the new data.
         */
        attachFeedsChanged(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.VizContainer` itself
           */
          oListener?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.VizContainer`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.VizContainer` itself.
         *
         * Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.VizContainer` itself
           */
          oListener?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.VizContainer`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.VizContainer` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.VizContainer` itself
           */
          oListener?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.VizContainer`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.VizContainer` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.VizContainer` itself
           */
          oListener?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.VizContainer`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.VizContainer` itself.
         *
         * Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed
         * in accordance with the following format.{name:"showTooltip",data:{body:[{ //data of one group name:"...",val:[{
         * //data of one row color:"...",label:"...",shape:"...",value:"..."},"..."]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."}}}
         */
        attachShowTooltip(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.VizContainer` itself
           */
          oListener?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:vizDefinitionChanged vizDefinitionChanged} event
         * of this `sap.viz.ui5.VizContainer`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.VizContainer` itself.
         *
         * Dispatches "vizDefinitionChanged" event when viz definition was changed.
         */
        attachVizDefinitionChanged(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.VizContainer` itself
           */
          oListener?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:vizTypeChanged vizTypeChanged} event of this
         * `sap.viz.ui5.VizContainer`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.VizContainer` itself.
         *
         * Dispatches "vizTypeChanged" event when viz type was changed
         */
        attachVizTypeChanged(
          /**
           * An application-specific payload object that will be passed to the event handler along with the event
           * object when firing the event
           */
          oData: object,
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.VizContainer` itself
           */
          oListener?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Destroys all the analysisObjectsForPicker in the aggregation {@link #getAnalysisObjectsForPicker analysisObjectsForPicker}.
         */
        destroyAnalysisObjectsForPicker(): sap.viz.ui5.VizContainer;
        /**
         * Destroys all the feeds in the aggregation {@link #getFeeds feeds}.
         */
        destroyFeeds(): sap.viz.ui5.VizContainer;
        /**
         * Destroys the vizData in the aggregation {@link #getVizData vizData}.
         */
        destroyVizData(): sap.viz.ui5.VizContainer;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.VizContainer`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachDeselectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:feedsChanged feedsChanged} event of this `sap.viz.ui5.VizContainer`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachFeedsChanged(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.VizContainer`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachHideTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:initialized initialized} event of this `sap.viz.ui5.VizContainer`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachInitialized(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:selectData selectData} event of this `sap.viz.ui5.VizContainer`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachSelectData(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.VizContainer`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachShowTooltip(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:vizDefinitionChanged vizDefinitionChanged}
         * event of this `sap.viz.ui5.VizContainer`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachVizDefinitionChanged(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Detaches event handler `fnFunction` from the {@link #event:vizTypeChanged vizTypeChanged} event of this
         * `sap.viz.ui5.VizContainer`.
         *
         * The passed function and listener object must match the ones used for event registration.
         */
        detachVizTypeChanged(
          /**
           * The function to be called, when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object on which the given function had to be called
           */
          oListener?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Creates a new subclass of class sap.viz.ui5.VizContainer with name `sClassName` and enriches it with
         * the information contained in `oClassInfo`.
         *
         * `oClassInfo` might contain the same kind of information as described in {@link sap.viz.ui5.controls.common.BaseControl.extend}.
         */
        // @ts-ignore
        static extend(
          /**
           * Name of the class being created
           */
          sClassName: string,
          /**
           * Object literal with information about the class
           */
          oClassInfo?: object,
          /**
           * Constructor function for the metadata object; if not given, it defaults to `sap.ui.core.ElementMetadata`
           */
          FNMetaImpl?: Function
        ): Function;
        /**
         * Fires event {@link #event:deselectData deselectData} to attached listeners.
         */
        fireDeselectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Fires event {@link #event:feedsChanged feedsChanged} to attached listeners.
         */
        fireFeedsChanged(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: {
            /**
             * An array of changed feeds.
             */
            feeds?: sap.viz.ui5.controls.common.feeds.FeedItem[];
          }
        ): sap.viz.ui5.VizContainer;
        /**
         * Fires event {@link #event:hideTooltip hideTooltip} to attached listeners.
         */
        fireHideTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Fires event {@link #event:initialized initialized} to attached listeners.
         */
        fireInitialized(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Fires event {@link #event:selectData selectData} to attached listeners.
         */
        fireSelectData(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Fires event {@link #event:showTooltip showTooltip} to attached listeners.
         */
        fireShowTooltip(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Fires event {@link #event:vizDefinitionChanged vizDefinitionChanged} to attached listeners.
         */
        fireVizDefinitionChanged(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Fires event {@link #event:vizTypeChanged vizTypeChanged} to attached listeners.
         */
        fireVizTypeChanged(
          /**
           * Parameters to pass along with the event
           */
          mParameters?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Gets content of aggregation {@link #getAnalysisObjectsForPicker analysisObjectsForPicker}.
         *
         * Available sap.viz.ui5.controls.common.feeds.AnalysisObject for object picker popup UI
         */
        getAnalysisObjectsForPicker(): sap.viz.ui5.controls.common.feeds.AnalysisObject[];
        /**
         * Gets current value of property {@link #getEnableMorphing enableMorphing}.
         *
         * Enable morphing for visualization.
         */
        getEnableMorphing(): boolean;
        /**
         * Gets content of aggregation {@link #getFeeds feeds}.
         *
         * All feeds for chart.
         */
        getFeeds(): sap.viz.ui5.controls.common.feeds.FeedItem[];
        /**
         * Returns a metadata object for class sap.viz.ui5.VizContainer.
         */
        // @ts-ignore
        static getMetadata(): sap.ui.base.Metadata;
        /**
         * Gets current value of property {@link #getVizCss vizCss}.
         *
         * Css for visualization.
         */
        getVizCss(): string;
        /**
         * Gets content of aggregation {@link #getVizData vizData}.
         *
         * Dataset for chart.
         */
        getVizData(): sap.viz.ui5.data.Dataset;
        /**
         * Gets current value of property {@link #getVizProperties vizProperties}.
         *
         * Properties for visualization.
         */
        getVizProperties(): object;
        /**
         * Gets current value of property {@link #getVizType vizType}.
         *
         * Type for visualization.
         */
        getVizType(): string;
        /**
         * Checks for the provided `sap.viz.ui5.controls.common.feeds.AnalysisObject` in the aggregation {@link
         * #getAnalysisObjectsForPicker analysisObjectsForPicker}. and returns its index if found or -1 otherwise.
         */
        indexOfAnalysisObjectsForPicker(
          /**
           * The analysisObjectsForPicker whose index is looked for
           */
          oAnalysisObjectsForPicker: sap.viz.ui5.controls.common.feeds.AnalysisObject
        ): number;
        /**
         * Checks for the provided `sap.viz.ui5.controls.common.feeds.FeedItem` in the aggregation {@link #getFeeds
         * feeds}. and returns its index if found or -1 otherwise.
         */
        indexOfFeed(
          /**
           * The feed whose index is looked for
           */
          oFeed: sap.viz.ui5.controls.common.feeds.FeedItem
        ): number;
        /**
         * Inserts a analysisObjectsForPicker into the aggregation {@link #getAnalysisObjectsForPicker analysisObjectsForPicker}.
         */
        insertAnalysisObjectsForPicker(
          /**
           * The analysisObjectsForPicker to insert; if empty, nothing is inserted
           */
          oAnalysisObjectsForPicker: sap.viz.ui5.controls.common.feeds.AnalysisObject,
          /**
           * The `0`-based index the analysisObjectsForPicker should be inserted at; for a negative value of `iIndex`,
           * the analysisObjectsForPicker is inserted at position 0; for a value greater than the current size of
           * the aggregation, the analysisObjectsForPicker is inserted at the last position
           */
          iIndex: number
        ): sap.viz.ui5.VizContainer;
        /**
         * Inserts a feed into the aggregation {@link #getFeeds feeds}.
         */
        insertFeed(
          /**
           * The feed to insert; if empty, nothing is inserted
           */
          oFeed: sap.viz.ui5.controls.common.feeds.FeedItem,
          /**
           * The `0`-based index the feed should be inserted at; for a negative value of `iIndex`, the feed is inserted
           * at position 0; for a value greater than the current size of the aggregation, the feed is inserted at
           * the last position
           */
          iIndex: number
        ): sap.viz.ui5.VizContainer;
        /**
         * Removes all the controls from the aggregation {@link #getAnalysisObjectsForPicker analysisObjectsForPicker}.
         *
         * Additionally, it unregisters them from the hosting UIArea.
         */
        removeAllAnalysisObjectsForPicker(): sap.viz.ui5.controls.common.feeds.AnalysisObject[];
        /**
         * Removes all the controls from the aggregation {@link #getFeeds feeds}.
         *
         * Additionally, it unregisters them from the hosting UIArea.
         */
        removeAllFeeds(): sap.viz.ui5.controls.common.feeds.FeedItem[];
        /**
         * Removes a analysisObjectsForPicker from the aggregation {@link #getAnalysisObjectsForPicker analysisObjectsForPicker}.
         */
        removeAnalysisObjectsForPicker(
          /**
           * The analysisObjectsForPicker to remove or its index or id
           */
          vAnalysisObjectsForPicker:
            | number
            | string
            | sap.viz.ui5.controls.common.feeds.AnalysisObject
        ): sap.viz.ui5.controls.common.feeds.AnalysisObject;
        /**
         * Removes a feed from the aggregation {@link #getFeeds feeds}.
         */
        removeFeed(
          /**
           * The feed to remove or its index or id
           */
          vFeed: number | string | sap.viz.ui5.controls.common.feeds.FeedItem
        ): sap.viz.ui5.controls.common.feeds.FeedItem;
        /**
         * Setter for property enableMorphing. If set true, a tween animation will play when chart changed.
         */
        setEnableMorphing(bEnableMorphing: boolean): sap.viz.ui5.VizContainer;
        /**
         * Sets a new value for property {@link #getVizCss vizCss}.
         *
         * Css for visualization.
         *
         * When called with a value of `null` or `undefined`, the default value of the property will be restored.
         */
        setVizCss(
          /**
           * New value for property `vizCss`
           */
          sVizCss: string
        ): sap.viz.ui5.VizContainer;
        /**
         * Sets the aggregated {@link #getVizData vizData}.
         */
        setVizData(
          /**
           * The vizData to set
           */
          oVizData: sap.viz.ui5.data.Dataset
        ): sap.viz.ui5.VizContainer;
        /**
         * Properties for visualization. Example:
         *
         *
         * ```javascript
         *
         *  var vizContainer = new sap.viz.ui5.VizContainer(...);
         *  var properties = {
         *      'dataLabel' : {'visible' : true },
         *      'legend' : { "visible" : true },
         *      'direction' : 'horizontal',
         *      'stacking' : 'normal'
         * };
         * vizContainer.setVizProperties(properties);
         * ```
         */
        setVizProperties(oVizProperties: object): sap.viz.ui5.VizContainer;
        /**
         * Setter for property vizType. A string of supported viz type: viz/column, viz/stacked_column, viz/dual_column,
         * viz/line, viz/area, viz/combination, viz/dual_line, viz/dual_combination, viz/pie, viz/donut, viz/scatter,
         * viz/bubble, viz/heatmap, viz/treemap.
         */
        setVizType(sVizType: string): sap.viz.ui5.VizContainer;
        /**
         * Selections for visualization. Example:
         *
         *
         * ```javascript
         *
         *  var vizContainer = new sap.viz.ui5.VizContainer(...);
         *  var points = [{
         *      data : {
         *      	"Country" : "China",
         *          "Year" : "2001",
         *          "Product" : "Car",
         *          "Profit" : 25
         *      }}, {
         *      data : {
         *      	"Country" : "China",
         *          "Year" : "2001",
         *          "Product" : "Trunk",
         *          "Profit" : 34
         *      }}];
         *  var action = {
         *  	clearSelection : true
         *  };
         * vizContainer.vizSelection(points, action);
         * ```
         */
        vizSelection(
          /**
           * some data points of the chart
           */
          aPoints: object[],
          /**
           * whether to clear previous selection, by default the selection will be incremental selection
           */
          oAction: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Update VizContainer according to a JSON object, it can update css, properties, feeds and data model.
         * Example:
         *
         *
         * ```javascript
         *
         * var vizContainer = new sap.viz.ui5.VizContainer(...);
         * var vizData = new sap.viz.ui5.data.FlattenedDataset({
         *     'dimensions' : [{
         *         axis: 1,
         *         name: "Country",
         *         value: "{Country}"
         *         },{
         *         axis: 2,
         *         name: "City"
         *         value: "{City}"
         *      }],
         *      'measures' : [{
         *          group: 1,
         *          name: "Quantity sold",
         *          value: "{Quantity sold}"
         *       }],
         *       'data' : {
         *           'path' : "/rawData"
         *       }
         * });
         * var cssString = 'position:absolute;left:0px;top:0px;';
         * var properties = {
         *     'dataLabel' : {'visible' : true },
         *     'legend' : {"visible" : true},
         *     'direction' : 'horizontal',
         *     'stacking' : 'normal'
         * };
         * var FeedItem = sap.viz.ui5.controls.common.feeds.FeedItem;
         * var feeds = [
         *     new FeedItem({'uid' : 'primaryValues',
         *                   'type' : 'Measure',
         *                   'values' []}),
         *     new FeedItem({'uid' : 'regionColor',
         *                   'type' : 'Dimension',
         *                   'values' []})];
         * vizContainer.vizUpdate({
         *               'data' : vizData,
         *               'css' : cssString,
         *               'properties' : properties,
         *               'feeds' : feeds
         *           });
         * ```
         */
        vizUpdate(
          /**
           * a JSON object contains combination of css, properties, feeds and data model.
           */
          oOptions: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:deselectData deselectData} event of this `sap.viz.ui5.VizContainer`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.VizContainer` itself.
         *
         * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be
         * passed in accordance with the following format.{name: "deselectData",data:["---the same as selectedData---"]}
         */
        attachDeselectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.VizContainer` itself
           */
          oListener?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:feedsChanged feedsChanged} event of this `sap.viz.ui5.VizContainer`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.VizContainer` itself.
         *
         * Dispatches "feedsChanged" event when the feeding changes due to add/remove/change feeding items on feeding
         * panel, drag and drop object onto VizFrame, or switch chart type by UI operation. Application should listen
         * to "feedsChanged" event to get the corresponding data and set it back to VizFrame to to update the visualization
         * with the new data.
         */
        attachFeedsChanged(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.VizContainer` itself
           */
          oListener?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:hideTooltip hideTooltip} event of this `sap.viz.ui5.VizContainer`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.VizContainer` itself.
         *
         * Event fires when the mouse hover out of the specific part of chart, no data is passed.
         */
        attachHideTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.VizContainer` itself
           */
          oListener?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:initialized initialized} event of this `sap.viz.ui5.VizContainer`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.VizContainer` itself.
         *
         * Event fires when the loading ends. To use the event listener when creating charts, you must use an event
         * that is passed by the events option. For more information on events options, see the usrOptions section
         * of the createViz function in the API document.
         */
        attachInitialized(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.VizContainer` itself
           */
          oListener?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:selectData selectData} event of this `sap.viz.ui5.VizContainer`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.VizContainer` itself.
         *
         * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed
         * in accordance with the following format.{name: "selectData",data:[{ //selected element's detail
         * target:"Dom Element",//an object pointed to corresponding dom element data:[{val: "...",//value of this
         * element ctx:{type:"Dimension"||"Measure"||"MND", //for Dimension path:{aa:"...",di:"...",dii:"..."},
         * //for Measure path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."}, //for MND path:{mg:"...",mi:"..."}
         * //path: analysis path //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2 //di: dimension
         * index //zero based //dii: dimension item index //zero based //mg: measure group index // 0 for measure
         * group 1,1 for measure group 2 //mi: measure index // measure index in measure group zero based //dii_a1:
         * each dii of di in analysis axis 1 index //dii_a2: each dii of di in analysis axis 2 index }},{ //for
         * bubble, tagcloud and scatter, there will be more than one values in one selected element. var:"...",ctx:"..."}]},{
         * //if under multi selection, there will be more than one selected elements target:"...",data:["..."]}]}
         */
        attachSelectData(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.VizContainer` itself
           */
          oListener?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:showTooltip showTooltip} event of this `sap.viz.ui5.VizContainer`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.VizContainer` itself.
         *
         * Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed
         * in accordance with the following format.{name:"showTooltip",data:{body:[{ //data of one group name:"...",val:[{
         * //data of one row color:"...",label:"...",shape:"...",value:"..."},"..."]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
         * //this object specifies the plot area of the chart height:"...",width:"...",x:"...",y:"..."},point:{
         * //this object specifies a point which affects the position of tooltip x:"...",y:"..."}}}
         */
        attachShowTooltip(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.VizContainer` itself
           */
          oListener?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:vizDefinitionChanged vizDefinitionChanged} event
         * of this `sap.viz.ui5.VizContainer`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.VizContainer` itself.
         *
         * Dispatches "vizDefinitionChanged" event when viz definition was changed.
         */
        attachVizDefinitionChanged(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.VizContainer` itself
           */
          oListener?: object
        ): sap.viz.ui5.VizContainer;
        /**
         * Attaches event handler `fnFunction` to the {@link #event:vizTypeChanged vizTypeChanged} event of this
         * `sap.viz.ui5.VizContainer`.
         *
         * When called, the context of the event handler (its `this`) will be bound to `oListener` if specified,
         * otherwise it will be bound to this `sap.viz.ui5.VizContainer` itself.
         *
         * Dispatches "vizTypeChanged" event when viz type was changed
         */
        attachVizTypeChanged(
          /**
           * The function to be called when the event occurs
           */
          fnFunction: Function,
          /**
           * Context object to call the event handler with. Defaults to this `sap.viz.ui5.VizContainer` itself
           */
          oListener?: object
        ): sap.viz.ui5.VizContainer;
      }
    }
  }

  interface IUI5DefineDependencyNames {
    "sap/viz/ui5/controls/common/feeds/AnalysisObject": undefined;

    "sap/viz/ui5/controls/common/feeds/FeedItem": undefined;

    "sap/viz/ui5/controls/common/BaseControl": undefined;

    "sap/viz/ui5/controls/Popover": undefined;

    "sap/viz/ui5/controls/VizFrame": undefined;

    "sap/viz/ui5/controls/VizSlider": undefined;

    "sap/viz/ui5/controls/VizTooltip": undefined;

    "sap/viz/ui5/core/BaseChart": undefined;

    "sap/viz/ui5/core/BaseStructuredType": undefined;

    "sap/viz/ui5/data/CustomDataset": undefined;

    "sap/viz/ui5/data/Dataset": undefined;

    "sap/viz/ui5/data/DimensionDefinition": undefined;

    "sap/viz/ui5/data/FlattenedDataset": undefined;

    "sap/viz/ui5/data/MeasureDefinition": undefined;

    "sap/viz/ui5/types/controller/Interaction": undefined;

    "sap/viz/ui5/types/controller/Interaction_pan": undefined;

    "sap/viz/ui5/types/controller/Interaction_selectability": undefined;

    "sap/viz/ui5/types/layout/Dock": undefined;

    "sap/viz/ui5/types/layout/Stack": undefined;

    "sap/viz/ui5/types/legend/Common": undefined;

    "sap/viz/ui5/types/legend/Common_title": undefined;

    "sap/viz/ui5/types/Area": undefined;

    "sap/viz/ui5/types/Area_animation": undefined;

    "sap/viz/ui5/types/Area_hoverline": undefined;

    "sap/viz/ui5/types/Area_marker": undefined;

    "sap/viz/ui5/types/Area_tooltip": undefined;

    "sap/viz/ui5/types/Axis": undefined;

    "sap/viz/ui5/types/Axis_axisline": undefined;

    "sap/viz/ui5/types/Axis_axisTick": undefined;

    "sap/viz/ui5/types/Axis_gridline": undefined;

    "sap/viz/ui5/types/Axis_indicator": undefined;

    "sap/viz/ui5/types/Axis_label": undefined;

    "sap/viz/ui5/types/Axis_layoutInfo": undefined;

    "sap/viz/ui5/types/Axis_scale": undefined;

    "sap/viz/ui5/types/Axis_title": undefined;

    "sap/viz/ui5/types/Background": undefined;

    "sap/viz/ui5/types/Background_border": undefined;

    "sap/viz/ui5/types/Background_border_bottom": undefined;

    "sap/viz/ui5/types/Background_border_left": undefined;

    "sap/viz/ui5/types/Background_border_right": undefined;

    "sap/viz/ui5/types/Background_border_top": undefined;

    "sap/viz/ui5/types/Bar": undefined;

    "sap/viz/ui5/types/Bar_animation": undefined;

    "sap/viz/ui5/types/Bar_tooltip": undefined;

    "sap/viz/ui5/types/Bubble": undefined;

    "sap/viz/ui5/types/Bubble_animation": undefined;

    "sap/viz/ui5/types/Bubble_axisTooltip": undefined;

    "sap/viz/ui5/types/Bubble_hoverline": undefined;

    "sap/viz/ui5/types/Bullet": undefined;

    "sap/viz/ui5/types/Bullet_tooltip": undefined;

    "sap/viz/ui5/types/Combination": undefined;

    "sap/viz/ui5/types/Combination_animation": undefined;

    "sap/viz/ui5/types/Combination_bar": undefined;

    "sap/viz/ui5/types/Combination_dataShape": undefined;

    "sap/viz/ui5/types/Combination_line": undefined;

    "sap/viz/ui5/types/Combination_line_marker": undefined;

    "sap/viz/ui5/types/Combination_tooltip": undefined;

    "sap/viz/ui5/types/Datalabel": undefined;

    "sap/viz/ui5/types/Datatransform": undefined;

    "sap/viz/ui5/types/Datatransform_autoBinning": undefined;

    "sap/viz/ui5/types/Datatransform_dataSampling": undefined;

    "sap/viz/ui5/types/Datatransform_dataSampling_grid": undefined;

    "sap/viz/ui5/types/Heatmap": undefined;

    "sap/viz/ui5/types/Heatmap_animation": undefined;

    "sap/viz/ui5/types/Heatmap_border": undefined;

    "sap/viz/ui5/types/Heatmap_tooltip": undefined;

    "sap/viz/ui5/types/Legend": undefined;

    "sap/viz/ui5/types/Legend_layout": undefined;

    "sap/viz/ui5/types/Line": undefined;

    "sap/viz/ui5/types/Line_animation": undefined;

    "sap/viz/ui5/types/Line_hoverline": undefined;

    "sap/viz/ui5/types/Line_marker": undefined;

    "sap/viz/ui5/types/Line_tooltip": undefined;

    "sap/viz/ui5/types/Pie": undefined;

    "sap/viz/ui5/types/Pie_animation": undefined;

    "sap/viz/ui5/types/Pie_tooltip": undefined;

    "sap/viz/ui5/types/RootContainer": undefined;

    "sap/viz/ui5/types/RootContainer_layout": undefined;

    "sap/viz/ui5/types/Scatter": undefined;

    "sap/viz/ui5/types/Scatter_animation": undefined;

    "sap/viz/ui5/types/Scatter_axisTooltip": undefined;

    "sap/viz/ui5/types/Scatter_hoverline": undefined;

    "sap/viz/ui5/types/StackedVerticalBar": undefined;

    "sap/viz/ui5/types/StackedVerticalBar_animation": undefined;

    "sap/viz/ui5/types/StackedVerticalBar_tooltip": undefined;

    "sap/viz/ui5/types/Title": undefined;

    "sap/viz/ui5/types/Title_layout": undefined;

    "sap/viz/ui5/types/Tooltip": undefined;

    "sap/viz/ui5/types/Tooltip_background": undefined;

    "sap/viz/ui5/types/Tooltip_bodyDimensionLabel": undefined;

    "sap/viz/ui5/types/Tooltip_bodyDimensionValue": undefined;

    "sap/viz/ui5/types/Tooltip_bodyMeasureLabel": undefined;

    "sap/viz/ui5/types/Tooltip_bodyMeasureValue": undefined;

    "sap/viz/ui5/types/Tooltip_closeButton": undefined;

    "sap/viz/ui5/types/Tooltip_footerLabel": undefined;

    "sap/viz/ui5/types/Tooltip_separationLine": undefined;

    "sap/viz/ui5/types/Treemap": undefined;

    "sap/viz/ui5/types/Treemap_animation": undefined;

    "sap/viz/ui5/types/Treemap_border": undefined;

    "sap/viz/ui5/types/Treemap_tooltip": undefined;

    "sap/viz/ui5/types/VerticalBar": undefined;

    "sap/viz/ui5/types/VerticalBar_animation": undefined;

    "sap/viz/ui5/types/VerticalBar_tooltip": undefined;

    "sap/viz/ui5/types/XYContainer": undefined;

    "sap/viz/ui5/Area": undefined;

    "sap/viz/ui5/Area100": undefined;

    "sap/viz/ui5/Bar": undefined;

    "sap/viz/ui5/Bubble": undefined;

    "sap/viz/ui5/Bullet": undefined;

    "sap/viz/ui5/Column": undefined;

    "sap/viz/ui5/Combination": undefined;

    "sap/viz/ui5/Donut": undefined;

    "sap/viz/ui5/DualBar": undefined;

    "sap/viz/ui5/DualColumn": undefined;

    "sap/viz/ui5/DualCombination": undefined;

    "sap/viz/ui5/DualLine": undefined;

    "sap/viz/ui5/DualStackedColumn": undefined;

    "sap/viz/ui5/DualStackedColumn100": undefined;

    "sap/viz/ui5/Heatmap": undefined;

    "sap/viz/ui5/HorizontalArea": undefined;

    "sap/viz/ui5/HorizontalArea100": undefined;

    "sap/viz/ui5/Line": undefined;

    "sap/viz/ui5/Pie": undefined;

    "sap/viz/ui5/Scatter": undefined;

    "sap/viz/ui5/StackedColumn": undefined;

    "sap/viz/ui5/StackedColumn100": undefined;

    "sap/viz/ui5/TimeBubble": undefined;

    "sap/viz/ui5/Treemap": undefined;

    "sap/viz/ui5/VizContainer": undefined;
  }
}
