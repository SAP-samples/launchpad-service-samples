/*global module:false*/
var exec = require('child_process').exec;

module.exports = function (grunt) {
    "use strict";

    var pkg = grunt.file.readJSON('package.json');

    // Project configuration.
    grunt.initConfig({
        // Task configuration.
        pkg: pkg,
        clean: {
            results: ['target','coverage','tests']
        },
        eslint: {
            src: [
                "**/*.js",
                "!**/node_modules/**/*.js",
                "!**/test/**/*.js",
                "!**/customRules/**/*.js"
            ],
            options: {
                outputFile: "target/eslint.xml"
            }
        },
        mochaTest: {
            test: {
                options: {
                    reporter: 'mocha-junit-reporter',
                    reporterOptions: {
                        mochaFile: 'tests/jsonValidator/TEST-index.xml'
                    },
                    colors: true,
                    summery: true,
                    captureFile: 'tests/jsonValidator/output.txt', // Optionally capture the reporter output to a file
                    quiet: false, // Optionally suppress output to standard out (defaults to false)
                    clearRequireCache: false // Optionally clear the require cache before running tests (defaults to false)
                },
                src: ['test/**/*Spec.js']
            }
        },
        mocha_istanbul: {
            src: ['test/**/*Spec.js'],
            options: {
                timeout: 20000,
                print: 'summary',
                growlOnSuccess: true,
                excludes: ['lib/**'],
                check: {
                    branches: 70,
                    lines: 90,
                    statements: 85,
                    functions: 85
                },
                coverageFolder: "coverage/jsonvalidator",
                reportFormats: ['cobertura', 'html']
            }
        }
    });

    grunt.loadNpmTasks("gruntify-eslint");
    grunt.loadNpmTasks('grunt-mocha-test');
    grunt.loadNpmTasks('grunt-mocha-istanbul');
    grunt.loadNpmTasks('grunt-contrib-clean');
    grunt.loadNpmTasks('grunt-contrib-copy');

    grunt.registerTask('verify-no-only-in-specs',
        'Makes sure no define.only or it.only functions are left', function () {
            grunt.file.expand(['**/test/**/*Spec.js']).forEach(function (f) {
                var contents = grunt.file.read(f);
                if (contents.search('describe.only') !== -1) {
                    grunt.fail.fatal(
                        "------------------------------------------------------------------------------\n" +
                        "ERROR: describe.only() found in " + f + " \n" +
                        "------------------------------------------------------------------------------");
                }

                if (contents.search('it.only') !== -1) {
                    grunt.fail.fatal(
                        "------------------------------------------------------------------------------\n" +
                        "ERROR: it.only() found in " + f + " \n" +
                        "------------------------------------------------------------------------------");
                }
            });
        }
    );

    grunt.registerTask('validations', [
        'verify-no-only-in-specs',
        'eslint'
    ]);

    grunt.registerTask('jsonValidator-voter', [
        'clean:results',
        'mochaTest',
        'mocha_istanbul'
    ]);

    // Default task.
    grunt.registerTask('default', [
        'jsonValidator-voter'
    ]);
};
