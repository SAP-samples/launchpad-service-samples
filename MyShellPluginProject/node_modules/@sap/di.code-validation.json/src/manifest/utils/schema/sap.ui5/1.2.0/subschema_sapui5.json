{
  "title": "JSON schema for SAP.UI5 Namespace",

  "$schema": "http://json-schema.org/draft-04/schema#",

  "description": "Represents sapui5 attributes",
  "type": "object",
  "additionalProperties": false,
  "required": ["_version", "dependencies", "contentDensities"],
  "properties":{
    "_version": {
      "description": " Represents SAPUI5 attributes format version. It is managed by namespace owner",
      "type": "string",
      "enum" :["1.2.0"]
    },

    "resources": {
      "description": "Represents paths to JavaScript/CSS resources that your app needs (app internal), formerly called '.includes'",
      "$ref": "#/definitions/resource"
    },

    "dependencies": {
      "description": "Represents external dependences such as libraries or components, that will be loaded by UI5 Core in the initialization phase of your Component and can be used after it",
      "type": "object",
      "additionalProperties": false,
      "required": ["minUI5Version"],
      "properties": {
        "minUI5Version":{
          "description": "Represents the minimum version of SAP UI5 that your component requires",
          "$ref": "#/definitions/version"
        },

        "libs": {
          "description": "Represents the id (namespace) of the libraries that should be loaded by UI5 Core to be used in your component",
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "^([a-z][a-z0-9]{0,39})(\\.[a-z][a-z0-9]{0,39})*$": {
              "$ref": "#/definitions/lib"
            }
          }
        },

        "components": {
          "description": "Represents the id (namespace) of the components that should be loaded by UI5 Core to be used in your component",
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "^([a-z_$][a-z0-9_$]{0,39}\\.)*([a-zA-Z_$][a-zA-Z0-9_$]{0,39})$": {
              "$ref": "#/definitions/component"
            }
          }
        }
      }
    },

    "models": {
      "description": "Represents models which should be created/destroyed with the life-cycle of the component",
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "^[a-zA-Z0-9_\\.\\-\\|\\@]*$": {
          "$ref": "#/definitions/model"
        }
      }
    },

    "resourceRoots": {
      "description": "Represents relative path to the resource. Only relative path allowed, no '../' ",
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "^[a-zA-Z0-9_\\.\\-]*$": {
          "$ref": "#/definitions/resourceRoot"
        }
      }
    },

    "rootView": {
      "description": "Represents the name of the root view",
      "$ref": "#/definitions/rootView_def"
    },

    "handleValidation": {
      "description": "Represents the usage of validation handling by MessageManager for this component (enable/disable)",
      "type": "boolean",
      "default": false
    },

    "config": {
      "description": "Represents the static configuration for components",
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "[\\s\\S]*": {
          "$ref": "#/definitions/config"
        }
      }
    },

    "routing": {
      "description": "Represents the configuration of routing",
      "type": "object",
      "properties": {
        "config": {
          "description": "Represents the default properties defined for route and target",
          "allOf":[
            {
              "type": "object",
              "properties": {
                "routerClass": {
                  "description": "Represents the router class",
                  "type":"string"
                },
                "async": {
                  "description":"Indicates whether the Views in routing are loaded asyncly",
                  "type": "boolean",
                  "default": false
                },
                "bypassed": {
                  "description": "Represents information about targets to display when no route is matched",
                  "type": "object",
                  "additionalProperties": false,
                  "required": ["target"],
                  "properties": {
                    "target": {
                      "description": "Represents one or multiple names of targets that are displayed when no route is matched",
                      "$ref": "#/definitions/arrayOrString"
                    }
                  }
                }
              }
            },
            {
              "$ref": "#/definitions/target"
            }
          ]
        },

        "routes": {
          "oneOf": [
            {
              "description": "Represents the definition of routes by providing an array with elements which contain the configuration for each route",
              "type": "array",
              "items": {
                "$ref": "#/definitions/route"
              }
            },
            {
              "description": "Represents the definition of routes by providing an object with the route's name as the key and other route options in an object as the value",
              "type": "object",
              "patternProperties": {
                "[\\s\\S]*": {
                  "$ref": "#/definitions/routeWithoutName"
                }
              }
            }
          ]
        },

        "targets": {
          "description": "Represents the definition of targets",
          "type": "object",
          "patternProperties": {
            "[\\s\\S]*": {
              "allOf": [
                {"$ref": "#/definitions/target"},
                { "type":"object",
                  "required": ["viewName"],
                  "properties": {
                    "viewName": {
                      "description": "Represents the name of a view that will be created",
                      "type": "string"
                    }
                  }
                },
                {
                  "type":"object",
                  "properties": {
                    "viewID": {
                      "description": "Represents the id of the created view",
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },

    "extends": {
      "description": "Represents the extension of an additional component",
      "type": "object",
      "additionalProperties": false,
      "properties":{
        "component": {
          "description": "Represents the component name",
          "$ref": "#/definitions/id_def"
        },
        "minVersion": {
          "description": "Represents minimal version of the component",
          "$ref": "#/definitions/version"
        },
        "extensions": {
          "description": "Represents extensions of the component",
          "type": "object"
        }
      }
    },

    "contentDensities": {
      "description": "Represents object with content density modes the app is supporting. Supported density modes are 'cozy' and 'compact'",
      "type": "object",
      "additionalProperties": false,
      "required": ["compact","cozy"],
      "properties": {
        "compact": {
          "description": "Represents indicator whether compact mode is supported",
          "type": "boolean"
        },
        "cozy": {
          "description": "Represents indicator whether cozy mode is supported",
          "type": "boolean"
        }
      }
    },

    "componentName": {
      "description": "Represents a name of the UI5 component",
      "type": "string",
      "pattern": "^([a-z_$][a-z0-9_$]{0,39}\\.)*([a-zA-Z_$][a-zA-Z0-9_$]{0,39})$"
    },

    "autoPrefixId": {
      "description": "Enables the auto prefixing of IDs of ManagedObjects (e.g. Controls) which are created in context of the Component (e.g. createContent invocation)",
      "type" : "boolean"
    }
  },

  "definitions": {
    "id_def": {
      "type": "string"
    },

    "version": {
      "type": "string"
    },

    "resource":{
      "type": "object",
      "properties":{
        "js" : {
          "type": "array",
          "items":{
            "type": "object",
            "required": ["uri"],
            "properties":{
              "uri": {
                "type": "string"
              }
            }
          }
        },
        "css": {
          "type": "array",
          "items":{
            "type": "object",
            "required": ["uri"],
            "properties":{
              "uri": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          }
        }
      }
    },

    "deviceType": {
      "type": "object",
      "description": "Represents device types on which the app is running",
      "additionalProperties": false,
      "properties": {
        "desktop": {
          "description": "Represents indicator whether desktop device is supported, default true",
          "type": "boolean"
        },
        "tablet": {
          "description": "Represents indicator whether tablet device is supported, default true",
          "type": "boolean"
        },
        "phone": {
          "description": "Represents indicator whether phone device is supported, default true",
          "type": "boolean"
        }
      }
    },

    "lib": {
      "description":  "Represents sapui5 library name",
      "type": "object",
      "properties": {
        "minVersion": {
          "description": "Represents minimal version of ui5 library",
          "$ref": "#/definitions/version"
        },
        "lazy":{
          "description": "Represents ...",
          "type": "boolean",
          "default": false
        }
      }
    },

    "component": {
      "description":  "Represents sapui5 component name",
      "type": "object",
      "properties": {
        "minVersion": {
          "description": "Represents minimal version of ui5 component",
          "$ref": "#/definitions/version"
        },
        "lazy":{
          "description": "Represents ...",
          "type": "boolean",
          "default": false
        }
      }
    },

    "model":{
      "description":  "Represents sapui5 model name",
      "type": "object",
      "additionalProperties": false,
      "properties":{
        "type": {
          "description": "Represents model class name",
          "type": "string"
        },
        "dataSource": {
          "description": "Represents string of key/alias from sap.app dataSources to reference an existing data source",
          "type": "string"
        },
        "uri": {
          "description": "Represents URI for the model",
          "type": "string"
        },
        "settings" :{
          "$ref": "#/definitions/ui5setting"
        }
      }
    },
    "ui5setting": {
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "defaultBindingMode": {
          "description": "Represents default binding mode and must be a string value from sap.ui.model.BindingMode. Possible values: Default, OneTime, OneWay, TwoWay",
          "type": "string",
          "default": "Default",
          "enum": ["Default", "OneTime", "OneWay", "TwoWay"]
        }
      }
    },

    "resourceRoot":{
      "type": "string",
      "pattern": "^((\\.(?!\\.)\\/)?\\w+\\/?)+$"
    },

    "rootView_def" :{
      "oneOf":[
        {
          "type": "string"
        },
        {
          "type":"object",
          "required": ["viewName"],
          "additionalProperties": true,
          "properties" :{
            "viewName": {
              "description": "Represents the name of the view",
              "type": "string"
            },
            "type": {
              "description": "Represents the type of the view. Possible Values: XML, JSON, JS, HTML, Template",
              "type": "string",
              "enum": ["XML", "JSON", "JS", "HTML", "Template"]
            }
          }
        }
      ]
    },

    "config": {
      "oneOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "string"
        },
        {
          "type": "boolean"
        },
        {
          "type": "number"
        },
        {
          "type": "object"
        }
      ]
    },

    "arrayOrString": {
      "oneOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "string"
        }
      ]
    },

    "route": {
      "description": "Represents the definition of each route",
      "allOf": [
        {
          "$ref": "#/definitions/routeWithoutName"
        },
        {
          "type": "object",
          "required": ["name"],
          "properties": {
            "name": {
              "description": "Represents the name of the route",
              "type": "string"
            }
          }
        }
      ]
    },

    "routeWithoutName": {
      "description": "Represents the definition of route without the option 'name'. This is used when routes are defined in an object.",
      "type": "object",
      "properties": {
        "pattern": {
          "description": "Represents the url pattern that the route is matched against",
          "type": "string"
        },
        "greedy": {
          "description": "Whether the route should be matched when another route is already matched",
          "type": "boolean"
        },
        "target": {
          "description": "Represents one or multiple names of targets which are displayed when the route is matched",
          "$ref": "#/definitions/arrayOrString"
        }
      }
    },

    "target": {
      "description": "Represents the definition of each target",
      "type": "object",
      "properties": {
        "viewType": {
          "description": "Represents the type of view that is going to be created",
          "type": "string",
          "enum": ["XML", "JSON", "JS", "HTML", "Template"]
        },
        "viewPath": {
          "description": "Represents a prefix that is prepended in front of the viewName",
          "type": "string"
        },
        "targetParent": {
          "description": "Represents the id of the view that contains the control specified by the 'controlId'",
          "type": "string"
        },
        "controlId": {
          "description": "Represents the id of the control where you want to place the view created by the target",
          "type": "string"
        },
        "controlAggregation": {
          "description": "Represents the name of an aggregation of the controlId that contains the views",
          "type": "string"
        },
        "clearAggregation": {
          "description": "Whether the aggregation should be cleared before adding the view",
          "type": "boolean"
        },
        "parent": {
          "description": "Represents the name of another target which will also be displayed once this target is displayed",
          "type": "string"
        },
        "viewLevel": {
          "description": "Represents the level of the current view which is used to define the transition direction when navigate to this view",
          "type": "number",
          "multipleOf": 1.0
        },
        "transition": {
          "description": "Represents the type of transition when navigating from previous view to this view",
          "anyOf":[
            {
              "type": "string",
              "default": "slide"
            },
            {
              "type": "string",
              "enum": ["slide", "flip", "fade", "show"]
            }
          ]
        },
        "transitionParameters": {
          "description": "Represents the transition parameters that are passed to the event handlers",
          "type": "object"
        }
      }
    }
  }
}
