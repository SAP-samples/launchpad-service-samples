#!groovy
@Library(['piper-lib','features-pipeline-lib','piper-lib-os']) _
import com.sap.icd.jenkins.Utils

def githubOrg = 'devx'
def githubRepo = 'ui5-builder-webide-extension'
def piperUtils
def commitId   

stage('Prepare CI') {
    node {
        checkout scm
        setupPipelineEnvironment script: this, githubOrg: githubOrg, githubRepo: githubRepo, gitBranch: env.BRANCH_NAME
        piperUtils =  new com.sap.icd.jenkins.Utils();
        commitId = piperUtils.getGitCommitId();        
    }
}

stage("voter") {
  node() {
		load "Jenkinsfile_Voter"
	}
}

stage('Checkmarx') {
    node {
        executeCheckmarxScan script: this
    }
}

stage('xMake Stage') {
    node {
        executeBuild script: this, buildType: 'xMakeStage', gitCommitId: commitId
    }
}

stage('IPScan and PPMS') {
    node {
        measureDuration(script: this, measurementName: 'ppmscheck_duration') {
            executePPMSComplianceCheck script: this
        }
    }
}

stage('Release') {
    node {
        executeBuild script: this, buildType: 'xMakePromote', gitCommitId: commitId
    }
}
