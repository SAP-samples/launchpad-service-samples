var path = require('path'),
    fs   = require('fs');


// Constructor
function FileFilters(projPath, extensions) {
  this.rootPath = projPath;
  this.extensions = extensions;
}
/**
 * return list of all files in directory according to extensions
 * listFilteredFiles('./rootDir', '.html') ==> ['./rootDir/src/a.html','./rootDir/src/build/index.html']
 * @param  {String} rootPath
 * @param  {Array} filters       Extension names, e.g: ['.html']
 * @param  {function} done 		 callback function
 * @return {Array}               Result files with path string in an array
 */
function listFilteredFiles(done){
  var rootPath = this.rootPath;
  var filters = this.extensions;

  var paths = []

  if (!fs.existsSync(rootPath)){
    console.log("directory not found ",rootPath);
    return;
  }

  fs.readdir(rootPath, function (err, files) {
    if (err) {
      throw err;
    }

    var pending = files.length;
    if (!pending) { return done(paths); }
    files.forEach(function(file) {
      var nestedPath = path.join(rootPath,file);
      fs.stat(nestedPath, function(err, stat) {
        if (stat && stat.isDirectory()) {
          listFilteredFiles(nestedPath, filters, function(res) {
            paths = paths.concat(res);
            if (!--pending){
              done(paths);
              return;
            }
          }, done);
        } else {
          filters.forEach(function(filter) {
            if (path.extname(nestedPath) === filter) {
              paths.push(nestedPath);
            }
          });
          if (!--pending) {
            done(paths);
            return;
          }
        }
      });
    });
  });
}

module.exports = {
  get:listFilteredFiles
};