/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2015 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */

/*global URI, Promise, alert, console, XMLHttpRequest */

/**
 * @class Provides base functionality of the SAP jQuery plugin as extension of the jQuery framework.<br/>
 * See also <a href="http://api.jquery.com/jQuery/">jQuery</a> for details.<br/>
 * Although these functions appear as static ones, they are meant to be used on jQuery instances.<br/>
 * If not stated differently, the functions follow the fluent interface paradigm and return the jQuery instance for chaining of statements.
 *
 * Example for usage of an instance method:
 * <pre>
 *   var oRect = jQuery("#myDiv").rect();
 *   alert("Top Position: " + oRect.top);
 * </pre>
 *
 * @name jQuery
 * @static
 * @public
 */
 var objects = {};
(function() {

	if (!global.jQuery ) {
		//	throw new Error("SAPUI5 requires jQuery as a prerequisite (>= version 1.7)");
		//***************************************
		// mocked jquery.sap.global
		//***************************************
		global.jQuery = {
			isPlainObject: function(obj) {
				return Object.prototype.toString.call( obj ) === "[object Object]";	
			},
			parseJSON: function(obj) {
				return JSON.parse(obj);
			},
			sap: {
				assert: function (bResult, sMessage) {
					if (!bResult) {
						process.stderr.write(sMessage);
					}
				},
				newObject: function (oPrototype) {
					return new (this.factory(oPrototype))();
				},
				factory : function factory(oPrototype) {
					function Factory() {}
					Factory.prototype = oPrototype;
					return Factory;
				}/*,
				getObject: function(sName, iNoCreates, oContext) {
					var oObject = oContext || {},
						aNames = (sName || "").split("."),
						l = aNames.length,
						iEndCreate = isNaN(iNoCreates) ? 0 : l - iNoCreates,
						i;
					for (i = 0; oObject && i < l; i++) {
						if (!oObject[aNames[i]] && i < iEndCreate ) {
							oObject[aNames[i]] = {};
						}
						oObject = oObject[aNames[i]];
					}
					return oObject;
				}*/
			}
		};
	}
	var jQuery = global.jQuery;

	module.exports = jQuery;

	//***************************************
	// end mocked jquery.sap.global
	//***************************************
})();