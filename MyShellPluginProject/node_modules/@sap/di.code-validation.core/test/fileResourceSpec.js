var expect = require('chai').expect;
var sinon = require('sinon');
var fs = require('fs');
var path = require('path');


var FileResource = require('../src/lib/fileResource');
var ValidationMetadata = require('../src/lib/validationMetadata');

describe('fileResource test', function() {

    var sandbox;
    beforeEach(function () {
        sandbox = sinon.sandbox.create();
    });

    it('creates a FileResource object', function() {
        var validationMetadata = new ValidationMetadata(__dirname + "/mock/dummyProj");
        var fileResource = new FileResource(validationMetadata.getRootPath(), validationMetadata.getRootPath() + path.sep + "aaa.js");
        expect(fileResource.getPath()).to.equal(validationMetadata.getRootPath() + path.sep + "aaa.js");
        expect(fileResource.getText()).to.equal("var a = b;");
    });

    it('creates a FileResource object- call getText twice', function() {
        var validationMetadata = new ValidationMetadata(__dirname + "/mock/dummyProj");
        var fileResource = new FileResource(validationMetadata.getRootPath(), validationMetadata.getRootPath() + path.sep + "aaa.js");
        expect(fileResource.getPath()).to.equal(validationMetadata.getRootPath() + path.sep + "aaa.js");
        var spy = sinon.spy(fs, "readFileSync");
        expect(fileResource.getText()).to.equal("var a = b;");
        expect(spy.calledOnce).to.be.true;
        expect(fileResource.getText()).to.equal("var a = b;");
    });

    afterEach(function () {
        sandbox.restore();
    });

});